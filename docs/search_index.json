[["index.html", "Putnu sugu izplatības modelēšana biodaudzveidības aizsardzībai: materiāli reproducēšanai 1 Par šo materiālu 1.1 Kas nav šis materiāls? 1.2 Kas ir šis materiāls un kā to lietot? 1.3 Satura izklāsts (orientācijai)", " Putnu sugu izplatības modelēšana biodaudzveidības aizsardzībai: materiāli reproducēšanai Andris Avotiņš 2024-10-28 1 Par šo materiālu Šis materiāls ir izstrādāts Latvijas Vides Aizsardzības Fonda administrācijas finansētā projekta “Esošo aizsargāto teritoriju pārklājuma ģeotelpisko datu slāņa sagatavošana ES Bioloģiskās daudzveidības stratēģijas 2030 ieviešanai” (Nr. 1-08/73/2023) ietvaros. Šī materiāla mērķis ir demonstrēt un skaidrot darba gaitu un pieņemtos lēmumus, lai nodrošinātu tā atkārtojamību un reproducējamību. Projekta mērķis ir ģeotelpisko datu slāņu sagatavošana aizsargājamo teritoriju pārklājuma paplašināšanai. Materiāls ir izstrādāts R, izmantojot {bookdown}. Saturā raksturotā datu apstrāde un analīze galvenokārt ir veikta R un viens no nozīmīgiem iemesliem šī materiāla tapšanai ir informācijas par darba atkārtošanu, izmantojot pārbaudītas komandu rindas, nodošana. Kā vēlamais blakusprodukts - veicināt zinātniskās prakses un praktiskās zinātnes atvērtību un reproducējamību. 1.1 Kas nav šis materiāls? Šis materiāls nav: iepazīstināšana ar R vai citu programmēšanas valodu. Gluži pretēji - lietderīgākais tas būs personām ar izpratni komandu rindu lietošanā. Tomēr informatīvs par izmantotajām pieejām tas būs jebkuram; pamācība ģeoprocesēšanā. Šajā materiāla ir apkopotas tās pieejas, kuras tā izstrādes brīdī autoru kolektīvas ir zināmas kā efektīvākās (apstrādei nepieciešamā laika, operatīvās atmiņas un cietā diska apjoma, izpildes garantiju un uzticamības ziņā), bet noteikti nav vienīgās; sugu izplatības (dzīvotņu piemērotības, sastopamības, skaita vai tml.) modelēšanas rokasgrāmata. Šis materiāls apraksta darba gaitu un pieņemtos datu analīzes lēmumus, izstrādājot produktu, kas iespējami vienkāršiem un ātriem līdzekļiem vienotā darba plūsmā ļauj iegūt informāciju sugu un biotopu aizsardzības plānošanai. Tātad, eksistē dažādas modelešēnas metodes un to parametrizācijas un vēl vairāk - pieejas, kuras gadījumu no gadījuma var būt piemērotākas sugu izplatības modelēšanai, tomēr šeit uzturēta vienota plūsma un iespējami unificēta pieeja. Tas arī nozīmē, ka šeit iegūtos rezultātus primāri ir paredzēts vērtēt kopumā, nevis individuālu vietu individuālām sugām izšķirtspējā, jo sevišķi, domājot par vietas aizņemtību, tomēr tie siendz nozīmīgu pamatu šādu un līdzīgu varbūtību risināšanai. copy/paste gatavs produkts. Lai gan komandu rindu lietošana un publiskošana ir ar tendenci būt šiem mērķiem paredzētai, situācijā, kad darbam izmantoti liela apjoma un vismaz daļēji - ierobežotas pieejamības dati, tas gluži vienkārši nav iespējams. Tas, kas iztrūkst (ir jānodrošina katrai šo materiaālu lietojošai personai personīgi) ir precīzi ceļi uz failiem - tos koriģējot, uzdevumi ir atkārtojami un rezultāti - replicējami. 1.2 Kas ir šis materiāls un kā to lietot? Šis materiāls ir sagatavots, lai sniegtu reproducējamu darba gaitu, aprakstot pieņemtos lēmumus un ieviestos risinājumus putnu sugu izplatības (dzīvotņu piemērotības) modelēšanai biodaudzveidības aizsardzības plānošanai. Mazākā mērā arī rezultātu demonstrēšanai un to pieejamības nodrošināšanai. Lielākoties šis materiāls sastāv no: paskaidrojošā teksta, kas ir atpazīstams kā teksts; komandu rindām, kas ir atpazīstamas kā ar pelēku fonu izcelti strukturēta teksta apgabali, piemēram,: objekts=funkcija(arguments1,arguments2, ceļš=&quot;./ceļš/failu/kokā/objekts.paplašinājums&quot;) # komentārs Augstāk esošajā piemērā pirmajā rindā ir izveidots objekts (“objekts”), kurš ir funkcijas (“funkcija()”) rezultāts. Funkcijai ir trīs argumenti (“arguments1”, “arguments2” un “ceļš”), kas ir atdalīti ar komantu (kā visu funkciju argumenti R). Trešais arguments ir ceļš failu kokā (tas atrodas jaunā rindā, bet ir turpinājums iepriekšējās rindas funkcijai, jo iekavas nav noslēgtas), kuram aiz vienādības zīmes (un pēdiņās) ir norādīts šis ceļš (uzmanība vēršama sākumam “./”, kurš apzīmē relatīvo ceļu - novietojums failu kokā ir relatīvs projekta atrašanās vietai). Augstāk esošā piemēra otrā rinda ir komentārs - viss aiz “#” ir komentārs. Jebkam komandu rindā pirms “#” ir jābūt izpildāmai funkcijai vai objektam. Komentārs var saturēt jebko un atrasties vienā rindā ar izpildāmu funkciju (tās beigās). Komandu rindas ir nozīmīgākā šī materiāla sastāvdaļa reproducējamībai. Tomēr personai, kas tās lieto, pašai ir jānodrošina ievades datu pieejamība un jāuztur korketi ceļi failu kokā. Komandu rindas var atrasties arī tekstā, piemēram, # komentārs kā komandu rinda tekstā. Reizēm tekstā atsaukšos uz R pakotnēm, tās likšu figūriekavās, piemēram, {pakotne}. grafikām - dažādām diagrammām, kas raksturo darba plūsmu vai datu īpašības, bet lielākoties, kartēm; saitēm uz citiem resursiem, jo sevišķi uz augstāka līmeņa produktiem un rezultātiem, kas radīti projekta ietvaros, bet arī ievades datiem, ja tie ir publiski pieejami. Rezultāti ir paredzēti izmantošanai praksē. Saprāta robežās, materiālā ir raksturotas visas izmantotās datu kopas un sniegti to metadati, kas attiecas uz reproducējamības nodrošināšanu. Tā kā ne visas datu kopas ir brīvi pieejamas, tās pašas par sevi nav publiskotas, tomēr visos gadījumos ir sniegta informācija par to ieguvi šī projekta izstrādei. 1.3 Satura izklāsts (orientācijai) Vispārīgā darba un informācijas plūsma projektā ir ilustrēta sekojošajā attēlā 1.1. Tā ir izmantota par pamatu šī materiāla dalījumam nodaļās (nosauktas un īsi raksturotas zemāk), kuru nosaukumi vispārīgi sakrīt ar uzdevumiem (etapiem) darba plūsmas vizualizācijā. Figure 1.1: Darba plūsma un saistība starp šī dokumenta nodaļām Katrai no šī materiāla nodaļām (tātad, uzdevumiem darba plūsmā) būt vairāku līmeņu apakšnodaļas (apakšuzdevumi). Tos vislabāk apskatīt konkrētajās nodaļās, tomēr vismaz sākotnēji sekojot secībai iepriekšējā attēlā. Nodaļas ar galvenajiem izstrādātājiem: Sugu saraksts un pamata apraksti (A. Avotiņš, A. Auniņš, J. Butkeviča, A. Baumane) Ar modeļiem aptveramā (analīzes) telpa un standartizācijas faili (A. Avotiņš) Ievades ģeodati (A. Avotiņš, I. Vinogradovs, A. Auniņš) Dynamic World izpēte (A. Avotiņš, B. Rubene) Ekoģeogrāfiskie mainīgie (A. Avotiņš, A. Auniņš) Novērojumu atlase (A. Avotiņš) Sugu izplatības (dzīvotņu piemērotības) modeļi (A. Avotiņš, A. Auniņš) Modeļu pēcapstrāde (A. Avotiņš) Vietu prioritizēšana aizsardzībai (A. Avotiņš, I. Vinogradovs, A. Auniņš) Rezultāti (A. Avotiņš) "],["Chapter1.html", "2 Sugu saraksts un pamata apraksti 2.1 Analizējamo sugu izvēle 2.2 Pamata apraksti analīzei 2.3 Pamata apraksti novērojumu atlasei 2.4 Pamata apraksti starpsugu svarošanai", " 2 Sugu saraksts un pamata apraksti Šajā nodaļā sniegts analīzei izvēlēto sugu saraksta pamatojums un demonstrēta informācijas apkopošanas gaita sugu bioloģijas un ekoloģijas aprakstiem, kas tālāk izmantoti modelēšanā. Saskaņā ar projekta pieteikumu, uzdevums ir izstrādāt vismaz 70 slāņus ar dzīvotņu piemērotības analīzes rezultātiem. Sākotnēji analīzei izvēlēto sugu loks ir 116, lai samazinātu spriedzi ap ik sugas rezultāta uzticamību un pielietojamību mērķim. 2.1 Analizējamo sugu izvēle No 375 Latvijā jebkad konstatētajām putnu sugām (Celmiņš, 2024), 335 ir uzskatāmas par (šobrīd vai vismaz vienu desmitgadi kopš 1900. gada) ligzdotājām (Avotiņš et al., 2024). Tomēr tas nebūt nenozīmē, ka visām par ligzdotājām uzskatāmajām putnu sugām ir pieejami dati (un projektam - resursi) modelēšanai. Tādēļ vaikta tālāka sugu atlase. No visām ligzdojošo putnu sugām atlasītas jeb modelēšanai paredzētas: Putnu Direktīvas (Eiropas Parlamenta un Padomes Direktīva 2009/147/EK ( 2009. gada 30. novembris ) par savvaļas putnu aizsardzību) 1. pielikumā iekļautās sugas; Life for Species projektā (LU, 2024) par aizsargājamām klasificētās; Life for Species projektā (LU, 2024) par apdraudētām klasificētās; ES aizsargājamo biotopu rokasgrāmatā iekļautās sugas (Auniņš, 2013); Bioloģiski vērtīgo zālāju indikatorsugas (Lārmanis, 2013); Lauku putnu indeksā iekļautās sugas (Auniņš and Mārdega, 2020); Latvijas vai boreālā reģiona meža putnu indeksā iekļautās sugas (Auniņš and Mārdega, 2020); Sugas, kurām ir izstrādāti aizsardzības plāni, kuros iekļauta dzīvotņu piemērotības modelēšana (Avotiņš, 2019a), (Bergmanis et al., 2021); Pēc primārā saraksta, kurš raksturo vispārēju nepieciešamību (vai iespējas) modelēšanai, sagatavošanas, tas papildināts ar izslēgšanas kritērijiem: Sugas ekoloģiskā niša ir saistīta ar dzīvotnēm, kuru raksturošanai nepieciešami sevišķi specifiski ekoģeogrāfiskie mainīgie, kuru izstrādei ir sevišķi ierobežota ģeodatu pieejamība. Šeit uzsveram, ka šī projekta uzdevums nav aptvert visas putnu sugas, tas arī nav atrisināt valsts līmenī iztrūkstošu ģeoreferencētu informāciju par specifiskiem vides apstākļiem; Ar ligzdošanu (sugai specifiskiem ligzdošanas ticamības kategorijas sliekšņiem) saistītu novērojumu indikatīvā pieejamība. Šai indikācijai izmantojām Life for Species (LU, 2024) projektā veiktās datu tīrīšanas rezultātus, kas aptvēra laika periodu no 2012. līdz 2021. gadam, kurus agregējām 1 km Latvijas koordinātu sistēmas kvadrātos. Par minimālo indikatīvo novērojumu apjoma slieksmi pieņēmām 20 kvadrātus ar vismaz iespējamu ligzdošanu sugām, kuras vides datu pieejamības dēļ netika izslēgtas. Tik zems slieksnis izvēlēts, lai gadījumā, ja daļai sugu neizdotos sasniegt izmantošanas vērtu modeļa sniegumu, vēl joprojām būtu sasniegts projekta mērķis (70 slāņi). Sākotnējais modelēšanai izvēlēto sugu saraksts (ar nomenklatūru un saīsinājumu kodiem) un iekļaušanas pamatojums ir sniegts sekojošajā tabulā 2.1. Table 2.1: Sākotnējais sugu saraksts (sugas kods; nosaukums; atbilstība iekļaušanas kritērijiem un 1 km kvadrātu, kuros projekta Life for Species atlasē saglabājusies sugas klātbūtne, skaits) Kods Nosaukums Putnu Direktīvas 1. pielikums Aizsargājama suga Apdraudēta suga Biotopu rokasgrāmatas suga BVZ indikatorsuga Lauku putnu indekss Meža putnu ikdekss Aizsardzības plāns Kvadrāti COTCOT paipala Coturnix coturnix 1 1 349 PERPER laukirbe Perdix perdix 1 612 BONBON mežirbe Bonasa bonasia 1 1 1 1 1 1917 TETURO mednis Tetrao urogallus 1 1 1 1 487 LYRTET rubenis Lyrurus tetrix 1 1 1 1180 CYGCYG ziemeļu gulbis Cygnus cygnus 1 1 1 1365 ANSANS meža zoss Anser anser 1 1 222 TADTAD Sāmsalas dižpīle Tadorna tadorna 1 1 278 AYTFER brūnkaklis Aythya ferina 1 1 138 AYTFUL cekulpīle Aythya fuligula 1 1 212 SPAQUE prīkšķe Spatula querquedula 1 1 1 174 SPACLY platknābis Spatula clypeata 1 1 1 96 MARSTR pelēkā pīle Mareca strepera 1 1 1 152 MARPEN baltvēderis Mareca penelope 1 1 75 TACRUF mazais dūkuris Tachybaptus ruficollis 1 125 PODGRI pelēkvaigu dūkuris Podiceps grisegena 1 1 179 PODCRI cekuldūkuris Podiceps cristatus 1 1 1155 STRTUR parastā ūbele Streptopelia turtur 1 1 1 607 CAPEUR vakarlēpis Caprimulgus europaeus 1 1 1269 RALAQU dumbrcālis Rallus aquaticus 1 261 CRECRE grieze Crex crex 1 1 1 1 1 4270 PORPOR ormanītis Porzana porzana 1 1 1 165 ZAPPAR mazais ormanītis Zapornia parva 1 1 1 114 FULATR laucis Fulica atra 1 705 GRUGRU dzērve Grus grus 1 1 5115 CICNIG melnais stārķis Ciconia nigra 1 1 1 255 CICCIC baltais stārķis Ciconia ciconia 1 1 1 1 10648 BOTSTE lielais dumpis Botaurus stellaris 1 1 1 1 592 IXOMIN mazais dumpis Ixobrychus minutus 1 1 1 24 HAEOST jūrasžagata Haematopus ostralegus 1 1 1 1 103 PLUAPR dzeltenais tārtiņš Pluvialis apricaria 1 1 1 1 210 CHAHIA smilšu tārtiņš Charadrius hiaticula 1 1 59 CHADUB upes tārtiņš Charadrius dubius 1 1 604 VANVAN ķīvīte Vanellus vanellus 1 1 1 1 1 4284 NUMPHA lietuvainis Numenius phaeopus 1 1 1 44 NUMARQ kuitala Numenius arquata 1 1 1 1 171 LIMLIM melnā puskuitala Limosa limosa 1 1 1 1 43 GALMED ķikuts Gallinago media 1 1 1 1 43 GALGAL mērkaziņa Gallinago gallinago 1 1 2000 TRINEB lielā tilbīte Tringa nebularia 1 1 25 TRITOT pļavu tilbīte Tringa totanus 1 1 1 172 TRIGLA purva tilbīte Tringa glareola 1 1 1 1 188 GLAPAS apodziņš Glaucidium passerinum 1 1 1 1 889 AEGFUN bikšainais apogs Aegolius funereus 1 1 1 1 129 ASIOTU ausainā pūce Asio otus 1 1 1 486 STRALU meža pūce Strix aluco 1 2669 STRURA urālpūce Strix uralensis 1 1 1 582 BUBBUB ūpis Bubo bubo 1 1 1 1 33 PANHAL zivjērglis Pandion haliaetus 1 1 1 501 PERAPI ķīķis Pernis apivorus 1 1 1 850 CLAPOM mazais ērglis Clanga pomarina 1 1 1953 CIRAER niedru lija Circus aeruginosus 1 1 1 1 1950 ACCNIS zvirbuļvanags Accipiter nisus 1 792 ACCGEN vistu vanags Accipiter gentilis 1 1 1 679 HALALB jūras ērglis Haliaeetus albicilla 1 1 1 505 MILMIL sarkanā klija Milvus milvus 1 1 1 75 MILMIG melnā klija Milvus migrans 1 1 125 BUTBUT peļu klijāns Buteo buteo 1 1 5323 UPUEPO pupuķis Upupa epops 1 853 CORGAR zaļā vārna Coracias garrulus 1 1 1 66 JYNTOR tītiņš Jynx torquilla 1 1 1292 PICCAN pelēkā dzilna Picus canus 1 1 1 1 2038 DRYMAR melnā dzilna Dryocopus martius 1 1 1 1 1 4234 PICTRI trīspirkstu dzenis Picoides tridactylus 1 1 1 1 1 1 233 LEIMED vidējais dzenis Leiopicus medius 1 1 1 1 1853 DRYMIN mazais dzenis Dryobates minor 1 1 1 1 1458 DENLEU baltmugurdzenis Dendrocopos leucotos 1 1 1 1 1 1273 DENMAJ dižraibais dzenis Dendrocopos major 1 7064 FALTIN lauku piekūns Falco tinnunculus 1 1 325 FALCOL purva piekūns Falco columbarius 1 1 1 56 ORIORI vālodze Oriolus oriolus 1 3320 LANCOL brūnā čakste Lanius collurio 1 1 1 1 1 3623 LANEXC lielā čakste Lanius excubitor 1 1 492 NUCCAR riekstrozis Nucifraga caryocatactes 1 1 1 608 PERATE meža zīlīte Periparus ater 1 2475 LOPCRI cekulzīlīte Lophophanes cristatus 1 3292 POEPAL purva zīlīte Poecile palustris 1 1 1 2465 POEMON pelēkā zīlīte Poecile montanus 1 1 1 3278 LULARB sila cīrulis Lullula arborea 1 1 1 2747 ALAARV lauku cīrulis Alauda arvensis 1 7409 IDUCAL klusais ķauķis Iduna caligata 1 85 ACRRIS purva ķauķis Acrocephalus palustris 1 2842 ACRARU niedru strazds Acrocephalus arundinaceus 1 1538 LOCFLU upes ķauķis Locustella fluviatilis 1 1 1659 LOCNAE kārklu ķauķis Locustella naevia 1 1 1 1492 HIRRUS bezdelīga Hirundo rustica 1 4224 PHYSIB svirlītis Phylloscopus sibilatrix 1 1 5918 AEGCAU garastīte Aegithalos caudatus 1 1 1414 CURNIS svītrainais ķauķis Curruca nisoria 1 1 385 CURCOM brūnspārnu ķauķis Curruca communis 1 6415 CERFAM mizložņa Certhia familiaris 1 3425 SITEUR dzilnītis Sitta europaea 1 5063 STUVUL mājas strazds Sturnus vulgaris 1 6633 TURVIS sila strazds Turdus viscivorus 1 3075 TURILI plukšķis Turdus iliacus 1 1 1115 CYASVE zilrīklīte Cyanecula svecica 1 1 1 77 LUSLUS lakstīgala Luscinia luscinia 1 1 4529 FICPAR mazais mušķērājs Ficedula parva 1 1 1 1 2415 FICHYP melnais mušķērājs Ficedula hypoleuca 1 4072 SAXRUB lukstu čakstīte Saxicola rubetra 1 1 1 5301 REGREG zeltgalvītis Regulus regulus 1 4246 REGIGN sārtgalvītis Regulus ignicapilla 1 523 PASMON lauku zvirbulis Passer montanus 1 3441 ANTPRA pļavu čipste Anthus pratensis 1 1 2143 ANTCAM stepes čipste Anthus campestris 1 1 1 1 1 162 MOTFLA dzeltenā cielava Motacilla flava 1 1 1 1 1393 MOTCIT citroncielava Motacilla citreola 1 1 100 COCCOC dižknābis Coccothraustes coccothraustes 1 2010 CARERY mazais svilpis Carpodacus erythrinus 1 1 1 3949 PYRPYR svilpis Pyrrhula pyrrhula 1 3323 CHLCHL zaļžubīte Chloris chloris 1 4350 LINCAN kaņepītis Linaria cannabina 1 2007 LOXCUR egļu krustknābis Loxia curvirostra 1 640 CARCAR dadzītis Carduelis carduelis 1 4212 EMBHOR dārza stērste Emberiza hortulana 1 1 1 117 EMBCIT dzeltenā stērste Emberiza citrinella 1 9517 2.2 Pamata apraksti analīzei Analīzes plānošanai - potenciālo vidi raksturojošo ekoģeogrāfisko mainīgo (EGV) sagatavošanai, to sugām specifisko telpisko mērogu identificēšanai un sugu saistīšanai ar vispārīgām ekosistēmas grupām gan EGV sākotnējai izvēlei, gan kompleksas biodaudzveidības aizsardzības telpiskajai plānošanai - sugas iedalītas principiālās tām raksturīgajās ekosistēmās un, balstoties literatūras analīzē, piešķirtas tām raksturīgās izmantotās ainavas telpas. Kā principiālās ekosistēmas izvēlētas plašas grupas: meži, lauksaimniecības ainava (lauki), mitrāji un ūdeņi, tomēr daļai sugu raksturīga kāda šaura specifiskāka vide, tādēļ tām izdalīta atsevišķa kategorija - “cita”. Mozaīkveida ainavu apdzīvojošām sugām un sugām ar kompleksu ekoloģisko nišu, piemēram, atšķirīgu ligzdošanas un barošanās ekosistēmu, vienlaikus piešķirtas vairākas grupas. Ekosistēmu grupu piešķiršanai izmantota vispārīgā literatūra un projekta ornitologu (A. Avotiņa un A. Auniņa) ekspertīze. Par raksturīgo izmantoto ainavas telpu visbiežāk uzskatāma ligzdošanas iecirkņa platība. Tomēr, atkarībā no sugas ligzdošanas ekoloģijas, var būt telpiski apjomīga atšķirība starp ligzdas aizsardzības zonu un barošanās iecirkni. Turklāt katras šīs teritorijas platība mainās līdz ar vides apstākļiem (dzīvotņu piemērotību). Visuzticamākā informācija būtu, izmantojot Latvijā veiktus telemetrijas pētījumus, tomēr sugu loks, kurām šādi dati ir pieejami ir ārkārtīgi ierobežots un tas ir gandrīz neeksistējošs publicētu datu veidā. Tādēļ pieņemts lēmums veikt literatūras analīzi (resursu ierobežotības un mērķa vispārības jeb zemās nepieciešamības pret augstu precizitāti dēļ, ne sistemātiska pārskata ik sugai veidā), kas ierobežota nosacījumiem (prioritārā secībā): meklēt informāciju par ligzdošanas iecirkņa (home range) platību vismaz pieciem Eiropā (Latvijai iespējami līdzīgākos apstākļos) veiktiem telemetrijas pētījumiem; paplašināt meklējumus ārpus Eiropas veiktiem telemetrijas pētījumiem, tos kombinējot ar no sastopamības blīvuma izrietošiem teritorijas lieluma aprēķiniem; apkopot Latvijai telpiski tuvāko un ekoloģiski līdzīgāko vidējo ligzdošans blīvumu rādītājus, kas pārrēķināti vidējai ligzdošanas iecirkņa platībai. Šī uzdevuma mērķis bija vispārīga sugu grupēšana izmantotās ainavas telpās un sagatavojamo EGV apjoma ierobežana, iegūtais rezultāts nepretendē uz sistemātiskā pārskata statusu. Kopējais aptverto informācijas avotu skaits ir 232 (vidēji sugai informācija no 5.86 (IQR: 4 - 7) avotiem, vidēji sugai ir 16.97 (IQR: 9 - 22) ieraksti), tomēr izmantojot apkopojošos darbus (piemēram, monogrāfijas un pārskata rakstus) nav mēģināts referencēt ik oriģinālo darbu - atsauce sniegta uz izmantoto pārskatu. Darba gaitas vienkāršošanai, situācijās, kad sniegta informācija gan par centrālo tendenci, gan variabilitāti, izmantots tikai centrālās tendences mērs. Situācijās, kurās pieejama informācija tikai par robežlielumiem (piemēram, minimālais un maksimālais), aprēķināts ģeometriskais vidējais. Visi ligzdošanas iecirkņu raksturojumi izteikti hektāros un ik ierakstam aprēķināts rādiuss metros, pieņemot, ka ligzdošanas iecirknis ir aplis. Lai gan šis pieņēmums ir nenoliedzami aplams gandrīz jebkurā situācijā, iegūtais rezultāts ļauj vispārīgi plānot analīzes gaitu un grupēt sugas ligzdošanas iecirkņu grupās, tādā veidā limitējot sagatavojamo EGV skaitu. Sugām raksturīgo ekosistēmu dalījums un izdalītās ligzdošanas iecirkņu grupas ir redzamas sekojošajā attēlā 2.1. Visas sugas iedalītas kādā no trīs ligzdošanas iecirkņa rādiusa grupām pēc vērtības mediānā un trešajā kvartilē: līdz/ap 500 m, līdz/ap 1250 m, līdz/ap 3000 m. Katrai ligzdošanas iecirkņa platībai piešķirts plašāks ainavas telpas mērogs (EGV sagatavošanai un modelēšanai), tie attiecīgi ir: 1250 m, 3000 m, 10 000 m. Atsevišķos gadījumos - komunāli riestojošajām sugām - ligzdošanas iecirkņa rādiuss palielināts par vienu soli (un atbilstoši arī ainavas telpa) sugas vairošanās bioloģijas - nepieciešamības spēt uzturēt vairākus iecirkņus, kuru indivīdiem satikties uz riestu - dēļ. Līdzīgi arī sugām ar izteikti plašiem medību iecirkņiem, mērogi pieņemti par vienas grupas soli uz augšu. Gadījumos, kad telemetrijas rezultāti ierosināja atšķirīgu ligzdošanas iecirkņa rādiusa grupu nekā vidējā blīvuma pārrēķins, lēmums pieņemts, balstoties telemetrijas pētījumos. Figure 2.1: Sugu dalījums ekosistēmās un ainavas platībās (sugu kodi ar zvaigznīti, raksturo telemetrijas pētījumu rezultātus; telemetrijas pētījumu un citiem rezultātiem ir atšķirīgi simboli; sugu kodi kā 2.1. tabulā) 2.3 Pamata apraksti novērojumu atlasei Vispārīgi, tomēr strukturēti, apraksti sagatavoti arī modelēšanā izmantojamo novērojumu atlasei. Šie apraksti ietver divas daļas: sugai nepiemērotā vide (Corine Land Cover klase, CLC) un ligzdošanas sezonas robežas. Novērojumu atlases procedūra detalizēti izklāstīta nodaļā Novērojumu atlase, sugām specifiskie kritēriji sniegti šajā tabulā, zemāk raksturota to izstrādes gaita. 2.3.1 Nepiemērota vide Tā kā ievērojama daļa modelēšanai potenciāli izmantojamo novērojumu ir sabiedrības zinātnes ceļā iegūti, tiem ir sagaidāmas ievērojamas novietojuma telpā neprecizitātes. No tām nav pasargātas arī profesionāļu ievāktās ziņas, piemēram, mērierīcas kļūdas dēļ. Ņemot vērā datu apjomu (skatīt, piemēram, https://dabasdati.lv/lv/article/dabasdatilv-zinojumu-apkopojums-2024-gada-aprilis-junijs/2024/), nav iespējams apskatīt un izvērtēt novērojuma lokācijas kļūdu katram vienam novērojumam. Tomēr pat idealizējot situācijām, kad tas būtu iespējams, ir nepieciešami skaidri kritēriji nosacījumiem, kad lokācija nav uzskatāma par drošu. Tā kā vide ir heterogēna, loģiski ir novērojumus pārbaudīt attiecībā pret zemes seguma vai zemes lietojuma (LULC) veidiem. Tomēr, lai cik intuitīvi pareizi tas nešķistu, nav jēgas tos vērtēt attiecībā pret piemērotajām LULC klasēm, jo piemērotība ir gradients un bez papildu analīzēm, kuru veikšana ir šī projekta uzdevums, nav iespējams pietiekoši uzticami nodalīt dažādas šī piemērotības gradienta daļas. Tomēr gandrīz jebkurai sugai ir iespējams definēt vidi (LULC klasi), kas nekādā gadījumā nav tieši saistāma ar ligzdošanu, jo sevišķi, ja telpiski šī klase ir tik plaša, lai daudzkārt pārsniegtu vispārīgo labas veiktspējas mērierīces precizitāti (zem 10 m labos apstākļos). Šādu iespēju nodrošina, piemēram, Corine Land Cover dati, kuru minimālā kartēšanas izšķirtspēja ir plankums ar laukumu vismaz 25 ha un ne šaurāks par 100 m (https://land.copernicus.eu/en/products/corine-land-cover). Lai gan šobrīd aktuālākā CLC versija raksturo 2018. gadu, bet modelēšanā aptvertais laika periods ir līdz 2023. gadam (ieskaitot), tomēr tā nav uzskatāma par problēmu, jo plašas (no 25 ha) pārmaiņas starp diametrāli atšķirīgām klasēm (no piemērotas vai suboptimās uz noteikti nepierētoru) nav sagaidāmas par biežām, bet vēl vairāk - datu atlasē vides pārmaiņas tik iekļautas kā atsevišķs solis. Tā kā šajā uzdevumā svarīgas ir plašas LULC kategorijas, izmantots CLC pirmā līmeņa dalījums (pirmais cipars no trīsciparu LULC klases koda). Tātad, novērojumi attiecināti pret CLC kategorijām: mākslīgās virsmas (CLC 1; pazīme “Maksligie”), izņemot pilsētu zaļās zonas, kas pievienotas kokiem klātām platībām (CLC 141 -&gt; CLC 3); lauksaimniecības zemes, dabiskie zālāji, virsāji, kāpas un smiltāji (CLC 2, CLC 321, CLC 322, CLC 331; pazīme “Atvertie”); meži un pus-dabiskās platības, kurām pievienotas pilsētu zaļās zonas un izslēgtas klases dabiskie zālāji, virsāji un kāpas un smiltāji (CLC 3 un CLC 141, bet CLC 321 -&gt; CLC 2, CLC 322 -&gt; CLC 2, CLC 331 -&gt; CLC 2; pazīme “Koki”); mitrāji (CLC 4; pazīme “Mitraji”); ūdeņi (CLC 5; pazīme “Udeni”). Vidē, kurā ar ligzdošanu saistīta sugas sastopamība ir sevišķi nesagaidāma, atbilstošajā pazīmē ir ievietota vērtība “-1”. Šo vērtību piešķiršanas gaitā domāts arī par plankumu izmēriem - ja sugai ir neliels ligzdošanas iecirknis (Fig. 2.1), kura platība var būt mazāka par CLC kartēšanas vienību, var nebūt atzīmju nevienā pazīmē. Līdzīgi, atzīmes va rnebūt situācijās, kad sugai ir raksturīgi dažādi robežbiotopi, piemēram, suga neligzdo ūdeņos, bet apdzīvo to visdažādākās to malas - CLC kartēšanas robežkļūdas dēļ, nav pamata veikt atzīmi nevienā no pazīmēm. 2.3.2 Ligzdošanas sezona Ligzdošanas sezonas raksturošanai izmantota detalizētākā pieejamā informācija no Eiropas (Cramp et al., 1994d), (Cramp et al., 1982), (Cramp et al., 1990), (Cramp et al., 1994a), (Cramp et al., 1988), (Cramp et al., 1992), (Cramp et al., 1993), (Cramp et al., 1994b), (Cramp et al., 1994c). Lai gan šī informācija ir uzskatāma par vismaz pusgadsmitu senu un gandrīz nekad ne Latvijā iegūtu, tā tomēr spēj raksturot laiku, kad sugām principā ir sagaidāmi ar ligzdošanu saistāmi novērojumi. Ievērojama daļa aprakstu nāko no Eiropas reģioniem ar okeāniskāku klimatu vai vairāk uz dienvidiem, kas saistībā ar klimata pārmaiņām vairāk asociējas ar situāciju Latvijā šobrīd (salīdznot ar laiku pirms vairāk nekā pusgadsimta), tomēr plaši izplatītām sugām ar lielu informācijas apjomu, šie dati var būt iegūti arī Ziemeļāfrikā kā aiz Ziemeļu polārā loka. Tādēļ priekšroka dota (sekojošajā secībā) datiem no Centrāleiropas (1); platlapju un jauktu koku mežu reģiona (2); boreālās zonas (3); vai kopumā sugu raksturojošie neatkarīgi no reģiona. Ligzdošanas sezonas sākums noteikts pēc agrākā minētā olu dēšanas sākuma, ligzdošanas sezonas beigas rēķinātas, ņemot vērā tekstā norādīto ligzdošanas laiku (vēlāko ligzdošans uzsākšanu), olu inkubācijas ilgumu, laiku starp izdētām olām, inkubācijas uzsākšanu attiecībā pret dējuma pilnību, perēšanas ilgumu, mazuļu ligzdā pavadīto laiku, laiku līdz lidspējai, atkārtotos dējumus u. tml. 2.4 Pamata apraksti starpsugu svarošanai Veicot vietu prioritizēšanu sugu aizsardzībai (nodaļa Vietu prioritizēšana aizsardzībai) ik sugai individuāli, a priori nav nepieciešama nekāda informācija papildus dzīvotņu piemērotības slāņiem. Tomēr, plānojot dabas vai biodaudaudzveidības aizsardzību plašākā kontekstā, ņemot vērā dažādos telpas ierobežojumus un telpiskās pārklāšanās un atšķirības starp sugu dzīvotnēm kā arī faktu, ka dāžādām sugām ir atšķirīga nozīme dabas aizsardzībā, ir nepieciešams veidot kompleksāku pieeju. Pieejas pamatā ir atšķirīgu nozīmes svaru piešķiršana ik sugai projicētajiem dzīvotņu piemērotības slāņiem. Šos svaru var iegūt dažādi, tomēr labāk to darīt ir izmantojot iespējami salīdzināmas kvantitātes, kurās apkopota gan sugas bioloģija un ekoloģija, gan dažādi politiskie vai juridiskie un sociālie apsvērumi. Sociālos apsvērumus ir labi risināt, piemēram, ar ekosistēmu pakalpojumu pieeju, ko visērtāk iestrādāt vietu hierarhiskā prioritizācijā kā atsevišķu latento faktoru, vai pielietot prioritizācijas rezultātu komunikācijā. Šajā materiālā tie tiešā viedā nav iestrādāti. Ar politiskajiem un juridiskajiem apsvērumiem var saprast, piemēram, likumdošanu - ar sugām var būt saistīti dažādi apsaimniekošanas ierobežojumi vai būt regulēta pati apsaimniekošana. Tomēr nereti šie dokumenti ir novecojuši, salīdzinot ar populāciju ekoloģijas atziņām, piemēram, relatīvi neilgā laikā (pat mazāk kā desmitgadē), sugu populācijas no stabilām vai pieaugošām var kļūst par sarūkošām un pat līdz tādam līmenim, ka kļūst apdraudētas, bet normatīvie akti tam nespēj izsekot. Neiedziļinoties jautājumu par nepieciešamību ik gadu pārskatīt nacionālos un starptautiskos tiesību aktus, šo aspektu tiešā veidā (citādi kā sugu loka izvēlē) sugu svarošanā neiekļāvām. Tā vietā izmantojām kvantitatīvu sugu bioloģijas un ekoloģijas informāciju, kas varētu būt pamatā juridiskajiem statusiem un to atšķirībām. Ir skaidrs, ka mažakas populācijas ir vairāk apdraudētas un tām var būt nepieciešama stingrāka aizsardzība. Tāpat arī ir skaidrs, ka par sugām, kuru populācijas ir proporcionāli vairāk koncentrētas Lativjā, ir augstāka nacionālā atbildība. Kā arī, stingrāka aizsardzība ir nepieciešama saŗukošām populāicjām un sugām ar retāku vairošanos un zemāku mūža reproduktīvo sasniegumu. Šī ir sugu pamata bioloģijas un ekoloģijas informācija, kas ir iegūstama ar literatūras analīzes palīdzību (skaidrota sekojošajās apakšnodaļās) un izmantojama kā dāla no nepieciešamajiem datiem starpsugu svarošanai vietu prioritizēšanai. Sagatavotie apraksti ir apskatāmi šajā tabulā, zemāk skaidrota to izstrādes gaita un izmantotie informācijas avoti. 2.4.1 Populācijas lielums un pārmaiņas Dati par putnu sugu populāicju lielumiem un to pārmaiņām Eiropas Savienībā un tās dalībvalstīs ir pieejami un regulāri atjaunoti Putnu Direktīvas (Eiropas Parlamenta un Padomes Direktīva 2009/147/EK ( 2009. gada 30. novembris ) par savvaļas putnu aizsardzību) 12. panta ziņojumu ietvaros. Šajā pārskatā izmantoti 2012.-2018. gada pārskata perioda rezultāti (sugu kopsavilkumi par katru dalībvalsti: https://nature-art12.eionet.europa.eu/article12/report?period=3&amp;country= ; sugu kopsavilkumi Eiropā kopumā: https://nature-art12.eionet.europa.eu/article12/summary?period=3&amp;subject=&amp;reported_name=). Apkopojumā ir sekojoši svarošanai izmantojamie lauki: Populacija_LV, kurā raksturots sugas Latvijas populācijas lielums. Sugām, kurām ziņoti intervāli, aprēķināts ģeometriskais vidējais, pārējos gadījumos, izmantots ziņojumā sniegtais putnka vērtējums; Populacija_Eiropa, kurā raksturots sugas Eiropas populāicjas lielums. Tas aprēķināts kā ģeometriskais vidējais no minimālā un maksimālā rādītāja; PopProp_LV, kurā raksturtos Latvijā ligzdojošās populācijas īpatsvars (Populacija_LV) no Eiropas populāicjas (Populacija_Eiropa); Parmainas_proc, kurā norādīts populācijas pārmaiņu apjoms (izteikts procentos). Kad iespējams, izmantots īstermiņa pārmaiņu punkta vērtējums Latvijā; kad tas nebija pieejams, tas aprēķināts no intervāla robežām. Ja nebija pieejams īstermiņa pārmaiņu vērtējums, izmantots iltermiņa vērtētjums ar to pašu pieeju. Vienai sugai (kuitalai) nebija pieejami Latvijas populācijas pārmaiņu vērtējumi, tādēļ izmantots Igaunijas ziņotais; Parmainu_periods, kurā raksturots izmantotā populācijas pārmaiņu apjoma (Parmainas_proc) aprēķinu periods; Parmainu_gadi, kurā raksturots pārmaiņu ilgums, kas nepieciešams multiplikatīvā pārmaiņu rādītāja aprēķināšanai; Valsts, kurā raksturota valsts, kuras dati populācijas pārmaiņu raksturošanai; Parmainas_mult, kurā ievietots aprēķinātais eksponenciālo populāicja spārmaiņu raksturojums. Aprēķiniem izmantota formula \\((\\frac{100+\\Delta}{100})^\\frac{1}{T},\\) kur \\(\\Delta\\) ir populācijas pārmaiņu apjoms un \\(T\\) ir pārmaiņu ilgums gados. 2.4.2 Mūža reproduktīvais ieguldījums Pilnvērtīgam mūža reproduktīvā ieguldījuma aprēķinam būtu nepieciešama vismaz informācija par individiem raksturīgo reproduktīvā mūža ilgumu, izdēto olu skaitu, izšķīlušos un izvesto mazuļu skaitu, varbūtību tiem sasniegt ligzdošanas uzsākšanas vecumu un varbūtību ligzdot ik gadu turpmāk. Diemžēl visa šī informācija nav pieejama par katru no sugām, tādēļ izvēlēta apkopojoša pieeja, kur izmantojot vispārīgo informāicju un monitoringu rezultātus, apkopots minimālais informācijas apjoms ik ligzdošanas iecirkņa (kuru aizsardzības plānošanai šis tiek darīts) atšķirību starp sugām indikāciju raksturošanai. Zemāk skaidrota apkopotā informācija (datu tabulas lauki): Paaudzes_garums, kurā norādīts sugai raksturīgais dzīves ilgums (dzīves gados). Informāicja iegūta no BirdLife International European Red List of Birds (http://datazone.birdlife.org/info/euroredlist2021) [skatīts: 2023-10-08]; Pirmas_ligzdosanas_vecums, kurā raksturots pirmās ligzdošanass vecums (kalendārais gads). Informācija apkopota no (Cramp et al., 1994d), (Cramp et al., 1982), (Cramp et al., 1990), (Cramp et al., 1994a), (Cramp et al., 1988), (Cramp et al., 1992), (Cramp et al., 1993), (Cramp et al., 1994b), (Cramp et al., 1994c). Atsevišķos gadījumos šī informācija izmantotajos avotos nebija pieejama, tad tā pielīdzināta no ekoloģiski un pēc dzīves ilguma līdzīgajām sugām, kas skaidrots saistītajā laukā Vecuma_piezimes; Vecuma_piezimes, kurā skaidroti apsvērumi pieņemtajam lirmās ligzdošanas vecumam, kad tas nav norādīts izmantotajos literatūras avotos. Saistīts ar lauku Pirmas_ligzdosanas_vecums; Olu_skaits, kurā norādīts raksturīgais vidējais izdēto olu skaits. Visbiežāk informācija apkopota no (Cramp et al., 1994d), (Cramp et al., 1982), (Cramp et al., 1990), (Cramp et al., 1994a), (Cramp et al., 1988), (Cramp et al., 1992), (Cramp et al., 1993), (Cramp et al., 1994b), (Cramp et al., 1994c). Atsevišķos gadījumos izmantoti citi avoti, kas individuāli norādīti sekojošajā laukā (Avots), šie avoti ir: (Avotins et al., 2023), (Meller et al., 2017), (Lipsbergs, 2011). Avots, kurā norādīts olu skaita informācijas avots, saistībā ar lauka Olu_skaits skaidrojumu; Dejumu_skaits, kurā norādīts sugai raksturīgais dējumu skaits (sekojot prioritātēm, kas aprakstītas nodaļā Ligzdošanas sezona), neieskaitot aizvietojošos dējumus. References Auniņš, A. (red.), 2013. Eiropas savienības aizsargājamie biotopi latvijā. Noteikšanas rokasgrāmata. 2. Precizēts izdevums. Latvijas Dabas fonds, Vides aizsardzības un reģionālās attīstības ministrija, Rīga, Latvija. Auniņš, A., Mārdega, I., 2020. Dienas putnu fona monitorings. Gala atskaite par 2020. gadu. Latvijas Ornitoloģijas biedrība, Rīga, Latvija. Avotins, A., Avotins, A., Ķerus, V., Auniņš, A., 2023. Numerical response of owls to the dampening of small mammal population cycles in Latvia, Life. https://doi.org/10.3390/life13020572 Avotiņš, A., 2019a. Apodziņa Glaucidium passerinum, bikšainā apoga Aegolius funereus, meža pūces Strix aluco, urālpūces Strix uralensis, ausainās pūces Asio otus un ūpja Bubo bubo aizsardzības plāns. Latvijas Ornitoloģijas biedrība, Rīga, Latvija. Avotiņš, A., Auniņš, A., Stīpniece, A., Ķerus, V., 2024. Little and a lot of data, both with their own challenges: Approaches used for the red listing of birds in latvia, in: Butkauskas, D., Čekstere-Muižniece, G., Degtjarenko, P., Jankevica, L., Jansson, N., Ķerus, V., Pilāts, V., Telnov, D. (Eds.), Safeguarding Biodiversity: Red Lists and Beyond. Institute of Biology, Faculty of Medicine; Life Sciences, University of Latvia, p. 14. Bergmanis, M., Priednieks, J., Avotiņš, A., Priedniece, I., 2021. Mazā dzeņa Dryobates minor, vidējā dzeņa Leiopicus medius, baltmugurdzeņa Dendrocopos leucotos, dižraibā dzeņa Dendrocopos major, trīspirkstu dzeņa Picoides tridactylus, melnās dzilnas Dryocopus martius un pelēkās dzilnas Picus canus aizsardzības plāns. Latvijas Ornitoloģijas biedrība, Rīga, Latvija. Celmiņš, A., 2024. Putni.lv. Cramp, S., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hollom, P.A.D., Nicholson, E.M., Ogilvie, M.A., Roselaar, C.S., Sellar, P.J., Simmons, K.E.L., Snow, D.W., Vincent, D., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1992. Handbook of the birds of Europe, the Middle East and North Africa: Volume 6 - Warblers. Oxford University Press, Hong Kong. Cramp, S., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hollom, P.A.D., Nicholson, E.M., Ogilvie, M.A., Roselaar, C.S., Sellar, P.J., Simmons, K.E.L., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1988. Handbook of the birds of Europe, the Middle East and North Africa: Volume 5 - Tyrant Flycatchers to Thrushes. Oxford University Press, Hong Kong. Cramp, S., Brooks, D.J., Dunn, E., Gillmor, R., Hollom, P.A.D., Hudson, R., Nicholson, E.M., Ogilvie, M.A., Olney, P.J.S., Roselaar, C.S., Simmons, K.E.L., Voous, K.H., Wallace, D.I.M., Wattel, J., Wilson, M.G., 1994a. Handbook of the birds of Europe, the Middle East and North Africa: Volume 4 - Terns to Woodpeckers. Oxford University Press, Hong Kong. Cramp, S., Perrins, C.M., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hillcoat, B., Hollom, P.A.D., Nicholson, E.M., Roselaar, C.S., Seale, W.T.C., Sellar, P.J., Simmons, K.E.L., Snow, D.W., Vincent, D., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1994b. Handbook of the birds of Europe, the Middle East and North Africa: Volume 8 - Crows to Finches. Oxford University Press, Hong Kong. Cramp, S., Perrins, C.M., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hillcoat, B., Hollom, P.A.D., Nicholson, E.M., Roselaar, C.S., Seale, W.T.C., Sellar, P.J., Simmons, K.E.L., Snow, D.W., Vincent, D., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1994c. Handbook of the birds of Europe, the Middle East and North Africa: Volume 9 - Buntings to New World Warblers. Oxford University Press, Hong Kong. Cramp, S., Perrins, C.M., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hillcoat, B., Hollom, P.A.D., Nicholson, E.M., Roselaar, C.S., Seale, W.T.C., Sellar, P.J., Simmons, K.E.L., Snow, D.W., Vincent, D., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1993. Handbook of the birds of Europe, the Middle East and North Africa: Volume 7 - Flycatchers to Shrikes. Oxford University Press, Hong Kong. Cramp, S., Simmons, K.E.L., Brooks, D.J., Collar, N.J., Dunn, E., Gillmor, R., Hollom, P.A.D., Hudson, R., Nicholson, E.M., Ogilvie, M.A., Olney, P.J.S., Roselaar, C.S., Voous, K.H., Wallace, D.I.M., Wattel, J., Wilson, M.G., 1990. Handbook of the birds of Europe, the Middle East and North Africa: Volume 3 - Waders to Gulls. Oxford University Press, Hong Kong. Cramp, S., Simmons, K.E.L., Ferguson-Lees, I.J., Gillmor, R., Hollom, P.A.D., Hudson, R., Nicholson, E.M., Ogilvie, M.A., Olney, P.J.S., Voous, K.H., Wattel, J., 1994d. Handbook of the birds of Europe, the Middle East and North Africa: Volume 1 - Ostrich to Ducks. Oxford University Press, New York, United States. Cramp, S., Simmons, K.E.L., Gillmor, R., Hollom, P.A.D., Hudson, R., Nicholson, E.M., Ogilvie, M.A., Olney, P.J.S., Roselaar, P.S., Voous, K.H., Wallace, D.I.M., Wattel, J., 1982. Handbook of the birds of Europe, the Middle East and North Africa: Volume 2 - Hawks to Bustards. Oxford University Press, Hong Kong. Lārmanis, V. (red.), 2013. Bioloģiski vērtīgo zālāju kartēšanas metodika. Dabas aizsardzības pārvalde, Sigulda, Latvija. Lipsbergs, J., 2011. Kas notiek ar ūpi Latvijā, Putni Dabā. LU, 2024. Threatened species in latvia: Improved knowledge, capacity, data and awareness (LIFE FOR SPECIES, LIFE19 GIE/LV/000857). Meller, K., Björklund, H., Saurola, P., Valkama, J., 2017. Petolintuvuosi 2016, pesimistulokset ja kannankehitykset, Linnut-vuosikirja 2016. "],["Chapter2.html", "3 Ar modeļiem aptveramā (analīzes) telpa un standartizācijas faili 3.1 100 m režģis Latvijā 3.2 References rastri", " 3 Ar modeļiem aptveramā (analīzes) telpa un standartizācijas faili Lai definētu analīzes telpu, nodrošinātu slāņu savstarpēju atbilstību un atvieglotu savienošanu ar citiem Latvijas ģeodatiem, izmantoti atvērto datu portālā esošie ģeoreferencētie slāņi: Latvijas teritoriju aptverošs režģis ar šūnas malas garumu 100 m (https://data.gov.lv/dati/lv/dataset/rezgis) [skatīts: 2024-01-20]; Latvijas administratīvās teritorijas pēc 2021. gada reformas (atbilstoši Administratīvo teritoriju un apdzīvoto vietu likuma redakcijai, kas stājās spēkā 2021. gada 3. jūnijā) (https://data.gov.lv/dati/lv/dataset/atr) [skatīts: 2024-01-20]. Šie slāņi savā starpā savienoti un tālāk apstrādāti ērtākai lietošanai. 3.1 100 m režģis Latvijā Tā kā lejupielādētais režģis ietver arī Latvijas Ekskluzīvās Ekonomiskās Zonas ūdeņus, no tā atlasīti tikai tie kvadrāti, kas pārklājas ar administratīvajām teritorijām. Rezultējošais objekts saglabāts {sf} tieši atbalstītā geoparquet formātā turpmāko darbu paātrināšanai. Lai samazinātu faila apjomu un to izmantotu Zemes novērošanas sistēmas datu filtrēšanai, sagatavots ESRI shapefile slānis, kurā apvienoti visi sauszemes kvadrāti. # Pakotnes if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} # Administratīvās teritorijas adm_ter=read_sf(&quot;./Administrativas_teritorijas_2021.shp&quot;) # režģis tikls100=read_sf(&quot;./grid_lv_100.gpkg&quot;,layer=&quot;grid_lv_100&quot;) tikls100$yes=1 tikls100=st_transform(tikls100,crs=3059) tikls100_sauszeme=tikls100[adm_ter,,] st_write_parquet(tikls100_sauszeme,&quot;./tikls100_sauzeme.parquet&quot;) # apvienošana tikls100_apvienots=tikls100_sauszeme %&gt;% group_by(yes) %&gt;% summarise() st_write(tikls100_apvienots,&quot;./tikls100_apvienots.shp&quot;) 3.1.1 Stratificēšana ģeoprocesēšanas paralelizācijai Lai atvieglotu un paātrinātu ģeoprocesēšanu, analīzes telpu ir nepieciešams sadalīt mazākās daļās. Tam izmantots Envirotech izplatītajā GIS_Latvia_10.2 ģeodatubāzē pieejamais 1993. gada topogrāfisko karšu sistēmas M:50000 rāmis. if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} # Nepieciešamie slāņi tks50km=st_read(&quot;./GIS_Latvija10.2.gdb/&quot;,layer=&quot;satelitkarte_tks93_50000&quot;) tikls100=st_read_parquet(&quot;./tikls100_sauzeme.parquet&quot;) # Tāda procedūra, lai telpiskās apvienošanas rezultātā nedublētos kvadrāti tikls100$tks50km=NA numuri=levels(factor(tks50km$NUMURS)) for(i in 1:length(numuri)){ numurs=numuri[i] lapa=tks50km %&gt;% filter(NUMURS == numurs) mazais=tikls100[lapa,,] tikls100$tks50km=ifelse(tikls100$id %in% mazais$id,numurs,tikls100$tks50km) } # saglabāšana st_write_parquet(tikls100,&quot;./Templates/TemplateGrids/tikls100_sauzeme.parquet&quot;) Dažādu ainavas metriku aprēķināšanai sugu ligzdošanas iecirkņu un tiem atbilstošo ainavu mērogos, sagatavots 100 m režģa centra punktu slānis un, ik TKS karšu lapai atsevišķā failā, atbilstoši buferētu laukumu slāņi. if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} # Nepieciešamais slānis rezgis=st_read_parquet(&quot;./tikls100_sauzeme.parquet&quot;) # Centra koordinātes rezgis$X=st_coordinates(st_centroid(rezgis))[,1] rezgis$Y=st_coordinates(st_centroid(rezgis))[,2] st_write_parquet(rezgis,&quot;./tikls100_sauzeme.parquet&quot;) # Punktu ģeometrijas karsu_lapas=levels(factor(rezgis$tks50km)) rc=data.frame(rezgis) %&gt;% dplyr::select(-geom) %&gt;% st_as_sf(coords=c(&quot;X&quot;,&quot;Y&quot;),crs=3059,remove=FALSE) st_write_parquet(rc,&quot;./pts100_sauzeme.parquet&quot;) # Buferēšana un saglabāšana for(i in seq_along(karsu_lapas)){ lapa=karsu_lapas[i] punkti=rc %&gt;% filter(tks50km == lapa) rcbuff500=st_buffer(punkti,dist=500) st_write_parquet(rcbuff500,paste0(&quot;./lapas/pts100_r500_&quot;,lapa,&quot;.parquet&quot;)) rcbuff1250=st_buffer(punkti,dist=1250) st_write_parquet(rcbuff1250,paste0(&quot;./lapas/pts100_r1250_&quot;,lapa,&quot;.parquet&quot;)) rcbuff3000=st_buffer(punkti,dist=3000) st_write_parquet(rcbuff3000,paste0(&quot;./lapas/pts100_r3000_&quot;,lapa,&quot;.parquet&quot;)) rcbuff10000=st_buffer(punkti,dist=10000) st_write_parquet(rcbuff10000,paste0(&quot;./lapas/pts100_r10000_&quot;,lapa,&quot;.parquet&quot;)) } 3.2 References rastri Lai nodrošinātu ievades datu (to pirmapstrādes produktu) un ekoģeogrāfisko mainīgo telpisko harmonizētību, sagatavoti references rastri. Tie saglabāti kā Geotiff faili ar diviem šūnas izmēriem - 10 m (ievades datiem) un 100 m (analīzes šūna). Katra rastra telpiskais pārklājums ir par 10 km plašāks nekā Latvijas sauszemes 100 m tīkls, lai nodrošinātu iespēju ainavmetriku aprēķiniem. if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} # Nepieciešamie slāņi tikls100=st_read_parquet(&quot;./tikls100_sauzeme.parquet&quot;) b=terra::crs(tikls100) adm_ter=read_sf(&quot;./Administrativas_teritorijas_2021.shp&quot;) adm_ter$yes=1 # 10 m rastrs=terra::rast(xmin=302800,xmax=772800,ymin=162900,ymax=448900, resolution=10,crs=b) rast_LV=rasterize(vect(adm_ter),rastrs) terra::writeRaster(rast_LV,&quot;./LV10m_10km.tif&quot;) # 100 m rastrs100=terra::rast(xmin=302800,xmax=772800,ymin=162900,ymax=448900, resolution=100,crs=b) rast_LV100=rasterize(vect(adm_ter),rastrs100) terra::writeRaster(rast_LV100,&quot;./LV100m_10km.tif&quot;) "],["Chapter3.html", "4 Ievades ģeodati 4.1 Ievades jēldati 4.2 Ievades produkti", " 4 Ievades ģeodati Nozīmīgs solis sugu izplatības modelēšanā ir ģeogrāfiskajai telpai piesaistītu (ģeoreferencētu) vidi raksturojošu un ekoloģiski pamatotu mainīgo jeb ekoģeogrāfisko mainīgo (EGV) sagatavošana. Visbiežāk eksistējošie ģeodati (ģeoreferencēti vides raksturojumi) paši par sevi nespēj raksturot sugu ekoloģiskās vajadzības, gandrīz nekad to noformējums precīzi neatbilst analīzes uzstādījumiem. Tādēļ ģeodatu ir nepieciešams dažādi pārveidot, strukturēt un kombinēt. Šajā nodaļā ir raksturoti izmantotie ģeodati un to pirmās apstrādes soļi (harmonizēšana EGV sagatavošanai) raksturota apakšnodaļā Ievades jēldati, augstāka līmeņa šo datu apstrāde, kas vēl joprojām uzskatāma par soli pirms EGV sagatavošanas, raksturota apakšnodaļā Ievades produkti 4.1 Ievades jēldati Izmantotie ģeodatu avoti, to raksturojums un harmonizēšanas procedūru apraksts. 4.1.1 Valsts Mežu dienesta Meža Valsts reģistrs b 4.1.2 Lauku atbalsta dienesta lauku informācija c 4.1.3 LĢIA topogrāfiskā karte d 4.1.4 Meliorācijas Kadastra Informācijas Sistēmas datubāze Jāpieprasa Ivo sniegt ieguves informāciju 4.1.5 LVM atvērtie dati f 4.1.6 Corine Land Cover g 4.1.7 Sentinel-2 Eiropas Kosmosa Aģentūras (ESA) Copernicus programmas Sentinel-2 misija ir divu (trīs kopš 2024-09-05) identisku satelītu, kas riņo tajā pašā orbītā, konstellācija. Pirmais satelīts - Sentinel-2A savu orbītu ieņēma un izgāja kalibrācijas testus 2015-06-23, otrais (Sentinel-2B) - 2017-03-07, pirmie attēli bija pieejami jau iepriekš. Katrs satelīts uzņem augstas izšķirtspējas (no 10 m (pie ekvatora) pikseļa izšķirtspējas) attēlus 13 spektrālajos kanālos ar atgriešanās laiku līdz 5 dienām (tuvāk poliem - biežāk) (https://www.esa.int/Applications/Observing_the_Earth/Copernicus/Sentinel-2). Šīs misijas dati ir brīvi pieejami, tajā skaitā Google Earth Engine platformā (Gorelick et al., 2017) dažādas liela apjoma priekšapstrādes un analīžu veikšanai. Šī projekta ietvaros izmantots harmonizētais otrā līmeņa (Level-2A; https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR_HARMONIZED#description) produkts, pielietojot mākoņu masku, kura iekļauj ne tikai mākoņu, bet arī to ēnu filtrēšanu, lai katrai pēc filtrēšanas (mākoņu un sezonas - no aprīļa līdz oktobrim un no 2017. līdz 2023. gadam) pieejamajai satelītainais aprēķinātu normalizēto starpības veģetācijas indeksu (NDVI, ) un normalizēto starpības ūdens indeksu (NDWI, ) kā arī dažādas to metrikas. Datu sagatavošanai izmantojams replicēšanas skripts. Lai izmantotu šo skriptu, ir nepieciešams GEE konts un projekts un pietiekošs apjoms vietas Google Drive diskā. Izpildot komandrindas tiks piedāvāta lejuplāde sekojošiem failiem: NDVI_p25 - aprīļa līdz oktobra ik pikseļa NDVI 25. procentiles vērtību katram gadam no 2017. līdz 2023. mediāna; NDVI_p75 - aprīļa līdz oktobra ik pikseļa NDVI 75. procentiles vērtību katram gadam no 2017. līdz 2023. mediāna; NDVI_median - aprīļa līdz oktobra ik pikseļa NDVI mediānas vērtību katram gadam no 2017. līdz 2023. mediāna; NDVI_2023_median - 2023. gada aprīļa līdz oktobra ik pikseļa NDVI vērtību mediāna; NDVI_IQR - aprīļa līdz oktobra ik pikseļa NDVI starpkvartiļu apgabala vērtību katram gadam no 2017. līdz 2023. mediāna; NDWI_p25 - aprīļa līdz oktobra ik pikseļa NDWI 25. procentiles vērtību katram gadam no 2017. līdz 2023. mediāna; NDWI_p75 - aprīļa līdz oktobra ik pikseļa NDWI 75. procentiles vērtību katram gadam no 2017. līdz 2023. mediāna; NDWI_median - aprīļa līdz oktobra ik pikseļa NDWI mediānas vērtību katram gadam no 2017. līdz 2023. mediāna; NDWI_2023_median - 2023. gada aprīļa līdz oktobra ik pikseļa NDWI vērtību mediāna; NDWI_IQR - aprīļa līdz oktobra ik pikseļa NDWI starpkvartiļu apgabala vērtību katram gadam no 2017. līdz 2023. mediāna. Pēc komandrindu izpildes un rezultātu sagatavošanas Google Drive diskā, ir redzams, ka katrs visu Latviju aptverošais slānis ir sadalīts vairākās lapās. Tas ir tādēļ, ka slāņi kodēti kā Float un pirms komprecijas GeoTIFF pārsniedz 4 GB izmēru. Visas šīs lapas ir nepieciešams lejuplādēt, sekojošās R komandrindas tās apvieno, nodrošinot koordinātu sistēmas un pikseļu atbilstību references rastram. if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} # reference paraugs=rast(&quot;./LV10m_10km.tif&quot;) # saraksts ar lejupielādētajiem failiem, pieņemot, ka tie atrodas direktorijas # &quot;S2indices&quot; apakšdirektorijā &quot;RAW&quot; faili=data.frame(fails=list.files(&quot;./S2indices/RAW/&quot;)) faili$celi_sakums=paste0(&quot;./S2indices/RAW/&quot;,faili$fails) # Korekti projicētu mozaīku sagatavošana # failu nosaukumi un ceļš saglabāšanai faili=faili %&gt;% separate(fails,into=c(&quot;nosaukums&quot;,&quot;vidus&quot;,&quot;beigas&quot;),sep=&quot;-&quot;,remove = FALSE) %&gt;% mutate(mosaic_name=paste0(nosaukums,&quot;.tif&quot;), masaic_cels=paste0(&quot;./S2indices/mozaikas/&quot;,mosaic_name)) # unikālie failu nosaukumi cikla vadībai unikalie=levels(factor(faili$nosaukums)) # cikls uzdevuma veikšanai for(i in seq_along(unikalie)){ unikalais=faili %&gt;% filter(nosaukums==unikalie[i]) beigu_cels=unique(unikalais$masaic_cels) # ik slānis sastāv no divām lapām viens=rast(unikalais$celi_sakums[1]) divi=rast(unikalais$celi_sakums[2]) viens2=terra::project(viens,paraugs) divi2=terra::project(divi,paraugs) mozaika=terra::merge(viens2,divi2) maskets=mask(mozaika,paraugs,filename=beigu_cels,overwrite=TRUE) } 4.1.8 Dynamic World Dynamic World (DW) ir relatīvi nesens Zemes novērošanas sistēmu produkts, kurš klasificē zemes segumu un lietojumu (LULC) deviņās kategorijās (0=water, 1=trees, 2=grass, 3=flooded_vegetation, 4=crops, 5=shrub_and_scrub, 6=built, 7=bare, 8=snow_and_ice), katram ESA Copernicus Sentinel-2 attēlam ar identificēto mākoņainību \\(\\le35%\\), pieļaujot filtrēšanu un dažādu agregāciju veidošanu (Brown et al., 2022) (nedaudz vairāk nodaļā Dynamic World izpēte). DW ievades informācija - rastra slānis katrai sezonai katrā gadā - sagtavots Google Earth Engine platformā (Gorelick et al., 2017), izmantojot replicēšanas skriptu. Lai izmantotu šo skriptu, ir nepieciešams GEE konts un projekts un pietiekošs apjoms vietas Google Drive diskā. Izpildot komandrindas tiks piedāvāta lejuplāde failam, kas aptver laika periodu no vērtības 7. rindā līdz vērtībai 8. rindā (faila nosaukums norādāms 32. rindā, tā apraksts - 33. rindā un direktorija Google diskā - 31. rindā vai tas viss norādāms apstiprinot saglabāšanau) - šis skripts nav optimizēts visu sezonālo griezumu visiem gadiem sagatavošanai, lai reproducētu vai paplašinātu šo izpēti, tās nepieciešams manuāli izmainīt. Pēc komandrindu izpildes un rezultātu sagatavošanas Google Drive diskā, ir redzams, ka katrs visu Latviju aptverošais slānis ir sadalīts vairākās lapās. Tas ir tādēļ, ka, lai nodrošinātu nulles patieso vērtību (klase “water”, nevis fons), slāņi kodēti kā Float, nevis veselie skaitļi. Visas šīs lapas ir nepieciešams lejuplādēt, sekojošās R komandrindas tās apvieno, nodrošinot koordinātu sistēmas un pikseļu atbilstību references rastram. if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} # reference paraugs=rast(&quot;./LV10m_10km.tif&quot;) # saraksts ar lejupielādētajiem failiem, pieņemot, ka tie atrodas direktorijā # &quot;DWE_float&quot; faili=data.frame(faili=list.files(&quot;./DWE_float/&quot;)) faili$celi_sakums=paste0(&quot;./DWE_float/&quot;,faili$faili) # Korekti projicētu mozaīku sagatavošana # failu nosaukumi un ceļš saglabāšanai faili=faili %&gt;% separate(faili,into=c(&quot;DW&quot;,&quot;gads&quot;,&quot;periods&quot;,&quot;parejais&quot;),sep=&quot;_&quot;,remove = FALSE) %&gt;% mutate(unikalais=paste0(DW,&quot;_&quot;,gads,&quot;_&quot;,periods), mosaic_name=paste0(unikalais,&quot;.tif&quot;), masaic_cels=paste0(&quot;./DWE_mosaic/&quot;,mosaic_name)) # unikālie failu nosaukumi cikla vadībai unikalie=levels(factor(faili$unikalais)) # cikls uzdevuma veikšanai for(i in seq_along(unikalie)){ unikalais=faili %&gt;% filter(unikalais==unikalie[i]) beigu_cels=unique(unikalais$masaic_cels) # ik slānis sastāv no divām lapām viens=rast(unikalais$celi_sakums[1]) divi=rast(unikalais$celi_sakums[2]) viens2=project(viens,paraugs) divi2=project(divi,paraugs) mozaika=mosaic(viens2,divi2,fun=&quot;first&quot;) maskets=mask(mozaika,paraugs,filename=beigu_cels,overwrite=TRUE) } 4.1.9 The Global Forest Watch The Global Forest Watch (GFW) ir plaši pazīstam produkts, kurš raksturo koku vainagu segumu 2000. gadā, tā ikgadējo pieaugumu no 2001. gada līdz 2012. gadam un zudumu katrā gadā kopš 2001. gada līdz aktuālajai versijai, kas ik gadu tiek papildināta (Hansen et al., 2013). Dati ir pieejami gan projekta mājaslapā, gan GEE, kurā tie ir izstrādāti. Šajā projektā izmantota v1.11, kurā pēdējais koku izzušanas datēšanas gads ir 2023, to sagatavojot lejupielādei GEE platformā ar šo replicēšanas skriptu. Lai izmantotu šo skriptu, ir nepieciešams GEE konts un projekts un pietiekošs apjoms vietas Google Drive diskā. Izpildot komandrindas tiks piedāvāta lejuplāde failam, kuru nepieciešams saglabāt Google diskā. Pēc komandrindu izpildes un rezultātu sagatavošanas Google Drive diskā, darba cietajā diskā ir lejupielādējams viens fails un tas pielāgojams references rastram. if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} # reference paraugs=rast(&quot;./LV10m_10km.tif&quot;) # TreeCoverLoss treecoverloss=rast(&quot;./RAW/TreeCoverLoss.tif&quot;) # Fona aivietošana ar iztrūkstošajām vērtībām tcl=ifel(treecoverloss&lt;1,NA,treecoverloss) # Projicēšana un maskēšana ar faila saglabāšanu tcl2=terra::project(tcl,paraugs) tcl3=mask(tcl2,paraugs,filename=&quot;./TreeCoverLossYear.tif&quot;,overwrite=TRUE) 4.1.10 Palsar Forests Palsar Forests resurss ir balstīts PALSAR-2 sintētiskās aprertūras radara (SAR) atstarojumu klasifikācijā meža un nemeža zemēs ar 25 m pikseļa izšķirtspēju. Par mežu tiek klasificētas vismaz 0.5 ha plašas ar kokiem klātas teritorijas, kurās koku (vismaz 5 m augstu) seguma ir vismaz 10% (Shimada et al., 2013). Dati ir pieejami GEE. Šajā projektā izmantota 4-klašu versija (1=Dense Forest, 2=Non-dense Forest, 3=Non-Forest, 4=Water), kurā pēdējais koku seguma datēšanas gads ir 2020, to sagatavojot lejupielādei GEE platformā ar šo replicēšanas skriptu. Lai izmantotu šo skriptu, ir nepieciešams GEE konts un projekts un pietiekošs apjoms vietas Google Drive diskā. Izpildot komandrindas tiks piedāvāta lejuplāde failam, kuru nepieciešams saglabāt Google diskā. Pēc komandrindu izpildes un rezultātu sagatavošanas Google Drive diskā, ir lejupielādējami četri faili. Tos nepieciešams projicēt atbilstībai references rastram un apvienot. Šajā resursā koki ir kodēti divās grupās: 1=Dense Forest un 2=Non-dense Forest, kuras nepieciešams apvienot un pārējo pārvērst par iztrūkstošajām vērtībām. Lai gan šī resursa dati raksturo situāciju 2020. nevis 2023. gadā, tie ir izmantoti, jo koku vainagu seguma izzušanu raksturošanai ir pieejami The Global Forest Watch dati, bet vainagu parādīšanās nav tik strauja, lai būtu nozīmīgas izmaiņas trīs gadu laikā (1), šis gads atrodas pa vidu ar novērojumiem aptvertajam laika periodam (2017.-2023. gadi). if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} # reference paraugs=rast(&quot;./LV10m_10km.tif&quot;) # Palsar Trees fnf1=rast(&quot;./RAW/ForestNonForest-0000023296-0000023296.tif&quot;) fnf2=rast(&quot;./RAW/ForestNonForest-0000023296-0000000000.tif&quot;) fnf3=rast(&quot;./RAW/ForestNonForest-0000000000-0000023296.tif&quot;) fnf4=rast(&quot;./RAW/ForestNonForest-0000000000-0000000000.tif&quot;) # Projicēšana fnf1p=terra::project(fnf1,paraugs) fnf2p=terra::project(fnf2,paraugs) fnf3p=terra::project(fnf3,paraugs) fnf4p=terra::project(fnf4,paraugs) # Apvienošana fnfA=terra::merge(fnf1p,fnf2p) fnfB=terra::merge(fnfA,fnf3p) fnfC=terra::merge(fnfB,fnf4p) # Reklasificēšana fnf_X=ifel(fnfC&lt;=2&amp;fnfC&gt;=1,1,NA) # Maskēšana un saglabāšana fnf_XX=mask(fnf_X,paraugs,filename=&quot;./Palsar_Forests.tif&quot;,overwrite=TRUE) 4.1.11 ERA-5 Land (Sabater, n.d.) Daily (https://developers.google.com/earth-engine/datasets/catalog/ECMWF_ERA5_LAND_DAILY_AGGR) Monthly (https://developers.google.com/earth-engine/datasets/catalog/ECMWF_ERA5_LAND_MONTHLY_AGGR) skripts (https://code.earthengine.google.com/4f1597f749ad4296ca46b373d8c4bd2f?noload=true) 4.1.12 Augsnes auglīgums Jāpieprasa Ivo sniegt ieguves informāciju 4.1.13 Digitālie reljefa modeļi Līdz ar Latvijas teritorijas vienlaidus aerolāzerskenēšanas datu publiskošanu (https://www.lgia.gov.lv/lv/digitalie-augstuma-modeli-0) ir izstrādāti dažādi augstas izšķirtspējas (1 m un augstāka) digitālie virsmas modeļi (DSM) un digitālie reljefa modeļi (DEM). Tā kā ievades dati visos gadījumos ir vieni un tie paši, gandrīz visā valsts teritorijā šo (atbilstošo) modeļu vērtības ir vienādas. Tomēr, ne visai valsts teritorijai ir pieejami aerolāzerskenēšanas dati (1), starp modeļiem ir novērojamas atšķirības aizpildījumā (vērtību pieejamībā) ārpus iekšzemes ūdeņiem (2) un pašu ūdensobjektu aizpildījums (3), tomēr, attiecībā uz ar datiem nosegtajām vietām uz sauszemes, vērtības ir gandrīz identiskas (Pīrsona korelācijas koeficienti starp LU ĢZZF, LVMI Silava un LĢIA izstrādātajiem DEM ir lielāki par 0.999999). Kā pamata DEM izmantots LU projektā “Ilgtspējīgas augsnes resursu pārvaldības uzlabošana lauksaimniecībā” sagatavotais vidējais aritmētiskais starp LU ĢZZF un LVMI Silava izstrādātajiem DEM. Šī DEM izšķirtspēja ir 1 m, kas nav nepieciešama sugu izplatības modelēšanas ievades datiem, tādēļ slānis projicēts atbilstībai references 10 m rastram. Salīdzinot projicēto DEM ar referenci, ir skaidri izdalāmas vietas, kurās nav datu. Tas risināts, izmantojot Māra Nartiša (LU ĢZZF) 2018. gadā izstrādāto visu Latvijas teritoriju bez pārrāvumiem aptverošais DEM ar 10 m izšķirtspēju. Lai novērstu asu malu veidošanās aizpildījuma vietās (izlīdzinātu pārejas), veidots vidējais aritmētiskais slānis, kurš aptver visu Latvijas teritoriju un sakrīt ar references rastru. No šī rastra izveidots arī nogāžu slīpuma slānis, kurš projicēts atbilstoši referencei. Slīpums izteikts grādos un rēķināts ar 8-kaimiņu pieeju. # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)){install.packages(&quot;exactextractr&quot;);require(exactextractr)} # reference template=rast(&quot;./LV10m_10km.tif&quot;) # LiDAR DEM uz 10 m lapas_1m=data.frame(faili=list.files(&quot;./meanDEM_1mOLD/&quot;,pattern=&quot;*.tif$&quot;)) lapas_1m$numurs=substr(lapas_1m$faili,10,13) lapas_1m$cels1=paste0(&quot;./meanDEM_1mOLD/&quot;,lapas_1m$faili) lapas_1m$cels2=paste0(&quot;./meanDEM_10mOLD/&quot;,lapas_1m$faili) kvadrati=st_read(dsn=&quot;GIS_Latvija10.2.gdb&quot;,layer=&quot;tks93_50000&quot;) kvadrati$name=as.character(kvadrati$num50tk) moz2=rast(&quot;./dem10_20_kopa.tif&quot;) for(i in 1:length(kvadrati$name)){ kvadrats=kvadrati[i,] nosaukums=kvadrats$name telpa=terra::ext(kvadrats) paraugs=crop(template,telpa) nart=crop(moz2,telpa) nart2=project(nart,paraugs,mask=TRUE) dem1m=lapas_1m[lapas_1m$numurs==kvadrats$name,] if(nrow(dem1m)&gt;0){ sakumcels=dem1m$cels1 dem=rast(sakumcels) reproj=project(dem,paraugs,mask=TRUE,method=&quot;bilinear&quot;,use_gdal=TRUE) videjais &lt;- ifel(is.na(nart2),nart2,ifel(is.na(reproj),nart2, app(c(nart2,reproj), mean))) writeRaster(videjais,overwrite=TRUE, filename=paste0(&quot;./meanDEM_10m/&quot;,&quot;vidDEM_&quot;, nosaukums,&quot;.tif&quot;)) } else{ writeRaster(nart2,overwrite=TRUE, filename=paste0(&quot;./meanDEM_10m/&quot;,&quot;vidDEM_&quot;, nosaukums,&quot;.tif&quot;)) } } # vrt un mozaika lapas_10=data.frame(faili=list.files(&quot;./meanDEM_10m/&quot;,pattern=&quot;*.tif$&quot;)) lapas_10$celi1=paste0(&quot;./meanDEM_10m/&quot;,lapas_10$faili) mozaikai=vrt(lapas_10$celi1,overwrite=TRUE, filename=&quot;./vrtDEM_10m.tif&quot;) mozaika=rast(&quot;./vrtDEM_10m.tif&quot;) writeRaster(mozaika,&quot;./mozDEM_10m.tif&quot;) ## slope reljefs=rast(&quot;./mozDEM_10m.tif&quot;) slipumi=terrain(reljefs, v=&quot;slope&quot;, neighbors=8, unit=&quot;degrees&quot;, filename=&quot;./Slope_10m.tif&quot;, overwrite=TRUE) 4.2 Ievades produkti Atsevišķos gadījumos ievades datiem veikta relatīvi apjomīga apstrāde (sagatavojot ievades produktus), kas nepieciešama turpmākajam darbam - ekoģeogrāfisko mainīgu sagatavošanai un novērojumu filtrēšanai. Šie produkti un to izstrādes gaita raksturota atbilstošajās apakšnodaļās. 4.2.1 Reljefa produkti p 4.2.2 Ainava ceļi ūdeņi koki un izcirtumi (izcirtumi, mežaudzes, palsar, parki-kapi-alejas) mitrāji krūmāji no topo LIZ smiltāji utml robu aizpildījums ar DW, kur klase “trees” pārsaukta par krūmiem 4.2.3 Vides pārmaiņas Vides pārmaiņas nepieciešamas novērojumu filtrēšanai. Daļēji tās būtu iegūstamas no Meža Valsts reģistrs un LAD lauku informācija datiem, tomēr projekta darba grupā nav pieejami ik gada raksturojumi (1) un šīs datubāzes neaptver visu valsts teritoriju (2), tādēļ nepieciešams neatkarīgs vērtējums. Tāda izstrādāšanai izmantojām Dynamic World izpēte aprīļa līdz augusta ik gadam no 2017. līdz 2023. rezultātus un Global Forest Watch datus, raksturojot pārmaiņu apjomus analīzes šūnā (nodaļa 100 m režģis Latvijā) un putnu ligzdošanas iecirkņu rādiusu grupu (2.1 att.) buferos ap analīzes šūnu centriem. Saskaņā ar Dynamic World izpēte rezultātiem, ir vērts izmantot šo resursu vides kopējo pārmaiņu analīzē kopš 2017. gada. Par kopējām pārmaiņām uzskatīta jebkura izmaiņa Dynamic World klasē, to salīdzinot ik 10 m pikselim aprīļa-augusta sezonā starp katriem diviem secīgiem gadiem. Pārmaiņu apjoms raksturots kā platības īpatsvars 100 m šūnā vai putnu ligzdošanas iecirkņu rādiusu grupu buferos ap šīs šūnas centru. Tā kā pārmaiņas analizētas vienos un tajos pašos rastros, izmantojot dažādus laukumveida objektus, kurus nepieciešams apvienot vienā failā, katras ģeometrijas raksturojums iestrādāts lauku nosaukumos. Kopumā līdzīga procedūra veikta koku vainagu seguma izzušanas apjoma (īpatsvara no telpas kopumā) raksturošanai. Tomēr šī informācija ir iestrādāta vienā rastra slānī, notikuma gadu norādot kā pikseļa vērtību. Tas ikgadējā samazinājuma apjoma aprēķināšanu apgrūtina, tomēr nepadara par neiespējamu (skatīt komandu rindas zemāk, specifiski - funkciju darbiba). Līdz ar ik gadu zudušā koku vainagu seguma īpatsvara no analīzes telpas platības iegūšanu, tā pievienota analizētajai ģeometrijai kā atsevišķs lauks katram notikuma gadam. Tāpat kā iepriekš - lauku nosaukumi harmonizēti, tajos iestrādājot analīzes telpas raksturojumu, un rezultāti pievienoti 100 m režģa atbilstošajām šūnām. # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)){install.packages(&quot;exactextractr&quot;);require(exactextractr)} if(!require(foreach)) {install.packages(&quot;foreach&quot;); require(foreach)} if(!require(doParallel)) {install.packages(&quot;doParallel&quot;); require(doParallel)} # režģis un buferi lapas_tikls=data.frame(fails_c=list.files(&quot;./lapas/&quot;)) lapas_tikls$cels_grid=paste0(&quot;./lapas/&quot;,lapas_tikls$fails_c) lapas_tikls$lapa=substr(lapas_tikls$fails,10,13) lapas_radiusi=data.frame(fails_r=list.files(&quot;./lapas/&quot;)) lapas_radiusi$cels_radiuss=paste0(&quot;./lapas/&quot;,lapas_radiusi$fails_r) lapas_radiusi=separate(lapas_radiusi,fails_r, into=c(&quot;sakums&quot;,&quot;veids&quot;,&quot;lapa&quot;,&quot;beigas&quot;),remove = FALSE) lapas_r500=lapas_radiusi %&gt;% filter(veids==&quot;r500&quot;) %&gt;% mutate(fails_r500=fails_r, cels_r500=cels_radiuss) %&gt;% dplyr::select(-sakums,-beigas,-fails_r,-cels_radiuss,-veids) lapas_r1250=lapas_radiusi %&gt;% filter(veids==&quot;r1250&quot;) %&gt;% mutate(fails_r1250=fails_r, cels_r1250=cels_radiuss) %&gt;% dplyr::select(-sakums,-beigas,-fails_r,-cels_radiuss,-veids) lapas_r3000=lapas_radiusi %&gt;% filter(veids==&quot;r3000&quot;) %&gt;% mutate(fails_r3000=fails_r, cels_r3000=cels_radiuss) %&gt;% dplyr::select(-sakums,-beigas,-fails_r,-cels_radiuss,-veids) lapas=lapas_tikls %&gt;% left_join(lapas_r500) %&gt;% left_join(lapas_r1250) %&gt;% left_join(lapas_r3000) # vides rastri tcl=rast(&quot;./TreeCoverLossYear.tif&quot;) tcl2=ifel(tcl&lt;17,NA,tcl) # Zudumi tikai kopš 2017. gada writeRaster(tcl2,&quot;./KokuVainagiem.tif&quot;) dw17=rast(&quot;./DW_2017_apraug.tif&quot;) dw18=rast(&quot;./DW_2018_apraug.tif&quot;) dw19=rast(&quot;./DW_2019_apraug.tif&quot;) dw20=rast(&quot;./DW_2020_apraug.tif&quot;) dw21=rast(&quot;./DW_2021_apraug.tif&quot;) dw22=rast(&quot;./DW_2022_apraug.tif&quot;) dw23=rast(&quot;./DW_2023_apraug.tif&quot;) chDWa=ifel(dw17==dw18,0,1) # Pārmaiņas no 2017. uz 2018. gadu writeRaster(chDWa,&quot;./chDWa.tif&quot;) chDWb=ifel(dw18==dw19,0,1) # Pārmaiņas no 2018. uz 2019. gadu writeRaster(chDWb,&quot;./chDWb.tif&quot;) chDWc=ifel(dw19==dw20,0,1) # Pārmaiņas no 2019. uz 2020. gadu writeRaster(chDWc,&quot;./chDWc.tif&quot;) chDWd=ifel(dw20==dw21,0,1) # Pārmaiņas no 2020. uz 2021. gadu writeRaster(chDWd,&quot;./chDWd.tif&quot;) chDWe=ifel(dw21==dw22,0,1) # Pārmaiņas no 2021. uz 2022. gadu writeRaster(chDWe,&quot;./chDWe.tif&quot;) chDWf=ifel(dw22==dw23,0,1) # Pārmaiņas no 2022. uz 2023. gadu writeRaster(chDWf,&quot;./chDWf.tif&quot;) plot(chDWf) # pārmaiņu analīze soli=levels(factor(lapas$lapa)) cl &lt;- makeCluster(12) # jānorāda izmantojamo kodolu (fizisko) skaits registerDoParallel(cl) foreach(i = 1:length(soli)) %dopar% { library(terra) library(sf) library(tidyverse) library(arrow) library(sfarrow) library(exactextractr) # funkcija platībaīpatsvarā kurā noticis koku vainagu seguma zudums # noteikšanai katrā gadā (2017-2023) darbiba &lt;- function(raster, vector) { exact_extract(raster, vector, function(value, coverage_fraction) { data.frame(value = value, frac = coverage_fraction/sum(coverage_fraction,na.rm = TRUE)) %&gt;% arrange(value) %&gt;% group_by(value) %&gt;% summarize(freq = sum(frac, na.rm = TRUE), .groups = &#39;drop&#39;) %&gt;% pivot_wider(names_from = &#39;value&#39;, names_prefix = &#39;freq_&#39;, values_from = &#39;freq&#39;) }) %&gt;% mutate(across(starts_with(&#39;freq&#39;), ~replace_na(., 0))) } # darba lapas solis=soli[i] celi=lapas %&gt;% filter(lapa==solis) # poligonu ielasīšana sunas=st_read_parquet(celi$cels_grid) sunas=sunas %&gt;% dplyr::select(id,yes,tks50km,X,Y) r500=st_read_parquet(celi$cels_r500) r500=r500 %&gt;% dplyr::select(id,yes,tks50km,X,Y) r1250=st_read_parquet(celi$cels_r1250) r1250=r1250 %&gt;% dplyr::select(id,yes,tks50km,X,Y) r3000=st_read_parquet(celi$cels_r3000) r3000=r3000 %&gt;% dplyr::select(id,yes,tks50km,X,Y) # konkrētās darba lapas robežas telpa=st_as_sfc(st_bbox(r3000)) telpa2=st_buffer(telpa,dist=1000) # koku vainagu seguma pārmaiņas tcl2=rast(&quot;./KokuVainagiem.tif&quot;) tcl_telpa=crop(tcl2,telpa2) loss_cell=darbiba(tcl_telpa, sunas) sunas=cbind(sunas,loss_cell) loss_r500=darbiba(tcl_telpa, r500) r500=cbind(r500,loss_r500) loss_r1250=darbiba(tcl_telpa, r1250) r1250=cbind(r1250,loss_r1250) loss_r3000=darbiba(tcl_telpa, r3000) r3000=cbind(r3000,loss_r3000) # Vides pārmaiņas Dynamic World datos chDWa=rast(&quot;./chDWa.tif&quot;) chDWb=rast(&quot;./chDWb.tif&quot;) chDWc=rast(&quot;./chDWc.tif&quot;) chDWd=rast(&quot;./chDWd.tif&quot;) chDWe=rast(&quot;./chDWe.tif&quot;) chDWf=rast(&quot;./chDWf.tif&quot;) names(chDWa)=&quot;DWchange_1718&quot; names(chDWb)=&quot;DWchange_1819&quot; names(chDWc)=&quot;DWchange_1920&quot; names(chDWd)=&quot;DWchange_2021&quot; names(chDWe)=&quot;DWchange_2122&quot; names(chDWf)=&quot;DWchange_2223&quot; mazs_chDWa=crop(chDWa,telpa2) mazs_chDWb=crop(chDWb,telpa2) mazs_chDWc=crop(chDWc,telpa2) mazs_chDWd=crop(chDWd,telpa2) mazs_chDWe=crop(chDWe,telpa2) mazs_chDWf=crop(chDWf,telpa2) mazas_DW=raster::stack(c(mazs_chDWa,mazs_chDWb,mazs_chDWc, mazs_chDWd,mazs_chDWe,mazs_chDWf)) sunam=exact_extract(mazas_DW,sunas,&quot;mean&quot;) r500am=exact_extract(mazas_DW,r500,&quot;mean&quot;) r1250am=exact_extract(mazas_DW,r1250,&quot;mean&quot;) r3000am=exact_extract(mazas_DW,r3000,&quot;mean&quot;) # iegūto rezultātu apvienošana sunas=cbind(sunas,sunam) r500=cbind(r500,r500am) r1250=cbind(r1250,r1250am) r3000=cbind(r3000,r3000am) # rezultējošo failu saglabāšana st_write_parquet(sunas,celi$cels_grid) st_write_parquet(r500,celi$cels_r500) st_write_parquet(r1250,celi$cels_r1250) st_write_parquet(r3000,celi$cels_r3000) } stopCluster(cl) # darba lapu apvienošana pirmas_sunas=sfarrow::st_read_parquet(lapas$cels_grid[lapas$lapa==soli[1]]) pirmas_r500=sfarrow::st_read_parquet(lapas$cels_r500[lapas$lapa==soli[1]]) pirmas_r1250=sfarrow::st_read_parquet(lapas$cels_r1250[lapas$lapa==soli[1]]) pirmas_r3000=sfarrow::st_read_parquet(lapas$cels_r3000[lapas$lapa==soli[1]]) dati_c=pirmas_sunas dati_r500=pirmas_r500 dati_r1250=pirmas_r1250 dati_r3000=pirmas_r3000 for(i in 2:length(soli)){ solis=soli[i] nakosas_sunas=sfarrow::st_read_parquet(lapas$cels_grid[lapas$lapa==solis]) nakosas_r500=sfarrow::st_read_parquet(lapas$cels_r500[lapas$lapa==solis]) nakosas_r1250=sfarrow::st_read_parquet(lapas$cels_r1250[lapas$lapa==solis]) nakosas_r3000=sfarrow::st_read_parquet(lapas$cels_r3000[lapas$lapa==solis]) dati_c=bind_rows(dati_c,nakosas_sunas) dati_r500=bind_rows(dati_r500,nakosas_sunas) dati_r1250=bind_rows(dati_r1250,nakosas_sunas) dati_r3000=bind_rows(dati_r3000,nakosas_sunas) } # apvienoto lapu saglabāšana st_write_parquet(dati_c,&quot;./VidesParmainas_suna.parquet&quot;) st_write_parquet(dati_r500,&quot;./VidesParmainas_r500.parquet&quot;) st_write_parquet(dati_r1250,&quot;./VidesParmainas_r1250.parquet&quot;) st_write_parquet(dati_r3000,&quot;./VidesParmainas_r3000.parquet&quot;) # lauku nosaukumu harmonizēšana dati_c2=dati_c %&gt;% mutate(cell_TCLNaN=freq_NaN, cell_TCL17=freq_17, cell_TCL18=freq_18, cell_TCL19=freq_19, cell_TCL20=freq_20, cell_TCL21=freq_21, cell_TCL22=freq_22, cell_TCL23=freq_23, cell_DWchange1718=mean.DWchange_1718, cell_DWchange1819=mean.DWchange_1819, cell_DWchange1920=mean.DWchange_1920, cell_DWchange2021=mean.DWchange_2021, cell_DWchange2122=mean.DWchange_2122, cell_DWchange2223=mean.DWchange_2223) %&gt;% dplyr::select(id,yes,tks50km,X,Y, cell_TCLNaN,cell_TCL17,cell_TCL18,cell_TCL19,cell_TCL20, cell_TCL21,cell_TCL22,cell_TCL23, cell_DWchange1718,cell_DWchange1819,cell_DWchange1920, cell_DWchange2021,cell_DWchange2122,cell_DWchange2223) dati_r500a=data.frame(dati_r500) %&gt;% mutate(r500_TCLNaN=freq_NaN, r500_TCL17=freq_17, r500_TCL18=freq_18, r500_TCL19=freq_19, r500_TCL20=freq_20, r500_TCL21=freq_21, r500_TCL22=freq_22, r500_TCL23=freq_23, r500_DWchange1718=mean.DWchange_1718, r500_DWchange1819=mean.DWchange_1819, r500_DWchange1920=mean.DWchange_1920, r500_DWchange2021=mean.DWchange_2021, r500_DWchange2122=mean.DWchange_2122, r500_DWchange2223=mean.DWchange_2223) %&gt;% dplyr::select(id, r500_TCLNaN,r500_TCL17,r500_TCL18,r500_TCL19,r500_TCL20, r500_TCL21,r500_TCL22,r500_TCL23, r500_DWchange1718,r500_DWchange1819,r500_DWchange1920, r500_DWchange2021,r500_DWchange2122,r500_DWchange2223) dati_r1250a=data.frame(dati_r1250) %&gt;% mutate(r1250_TCLNaN=freq_NaN, r1250_TCL17=freq_17, r1250_TCL18=freq_18, r1250_TCL19=freq_19, r1250_TCL20=freq_20, r1250_TCL21=freq_21, r1250_TCL22=freq_22, r1250_TCL23=freq_23, r1250_DWchange1718=mean.DWchange_1718, r1250_DWchange1819=mean.DWchange_1819, r1250_DWchange1920=mean.DWchange_1920, r1250_DWchange2021=mean.DWchange_2021, r1250_DWchange2122=mean.DWchange_2122, r1250_DWchange2223=mean.DWchange_2223) %&gt;% dplyr::select(id, r1250_TCLNaN,r1250_TCL17,r1250_TCL18,r1250_TCL19,r1250_TCL20, r1250_TCL21,r1250_TCL22,r1250_TCL23, r1250_DWchange1718,r1250_DWchange1819,r1250_DWchange1920, r1250_DWchange2021,r1250_DWchange2122,r1250_DWchange2223) dati_r3000a=data.frame(dati_r3000) %&gt;% mutate(r3000_TCLNaN=freq_NaN, r3000_TCL17=freq_17, r3000_TCL18=freq_18, r3000_TCL19=freq_19, r3000_TCL20=freq_20, r3000_TCL21=freq_21, r3000_TCL22=freq_22, r3000_TCL23=freq_23, r3000_DWchange1718=mean.DWchange_1718, r3000_DWchange1819=mean.DWchange_1819, r3000_DWchange1920=mean.DWchange_1920, r3000_DWchange2021=mean.DWchange_2021, r3000_DWchange2122=mean.DWchange_2122, r3000_DWchange2223=mean.DWchange_2223) %&gt;% dplyr::select(id, r3000_TCLNaN,r3000_TCL17,r3000_TCL18,r3000_TCL19,r3000_TCL20, r3000_TCL21,r3000_TCL22,r3000_TCL23, r3000_DWchange1718,r3000_DWchange1819,r3000_DWchange1920, r3000_DWchange2021,r3000_DWchange2122,r3000_DWchange2223) # visu rādiusu pievienošana režģim vides_parmainas=dati_c2 %&gt;% left_join(dati_r500a,by=c(&quot;id&quot;)) %&gt;% left_join(dati_r1250a,by=c(&quot;id&quot;)) %&gt;% left_join(dati_r3000a,by=c(&quot;id&quot;)) # rezultāta saglabāšana st_write_parquet(vides_parmainas,&quot;./VidesParmainas_visas.parquet&quot;) References Brown, C.F., Brumby, S.P., Guzder-Williams, B., Birch, T., Hyde, S.B., Mazzariello, J., Czerwinski, W., Pasquarella, V.J., Haertel, R., Ilyushchenko, S., Schwehr, K., Weisse, M., Stolle, F., Hanson, C., Guinan, O., Moore, R., Tait, A.M., 2022. Dynamic World, Near real-time global 10 m land use land cover mapping, Scientific Data. https://doi.org/10.1038/s41597-022-01307-4 Gorelick, N., Hancher, M., Dixon, M., Ilyushchenko, S., Thau, D., Moore, R., 2017. Google Earth Engine: Planetary-scale geospatial analysis for everyone, Remote Sensing of Environment. https://doi.org/10.1016/j.rse.2017.06.031 Hansen, M.C., Potapov, P.V., Moore, R., Hancher, M., Turubanova, S.A., Tyukavina, A., Thau, D., Stehman, S.V., Goetz, S.J., Loveland, T.R., Kommareddy, A., Egorov, A., Chini, L., Justice, C.O., Townshend, J.R.G., 2013. High-resolution Global maps of 21st-century forest cover change, Science. https://doi.org/10.1126/science.1244693 Sabater, J.M., n.d. ERA5-Land hourly data from 1950 to present. Copernicus Climate Change Service (C3S) Climate Data Store (CDS). https://doi.org/10.24381/cds.e2161bac Shimada, M., Itoh, T., Motooka, T., Watanabe, M., Shiraishi, T., Thapa, R., Lucas, R., 2013. New global forest/non-forest maps from ALOS PALSAR data (2007–2010), Remote Sensing of Environment. https://doi.org/10.1016/j.rse.2014.04.014 "],["Chapter4.html", "5 Dynamic World izpēte 5.1 Q0: DW nosegums 5.2 Q1: Lauksaimniecības kultūras 5.3 Q2: Mežaudzes augstums sugu grupās 5.4 Q3: Topogrāfiskās kartes mitrāji 5.5 Q4: Karjeri, kūdras ieguves vietas un ceļi 5.6 Q5: Izcirtuma izmērs un forma 5.7 Q6: Zālāju transformācija uz aramzemēm 5.8 Secinājumi", " 5 Dynamic World izpēte Dynamic World (DW) ir relatīvi nesens Zemes novērošanas sistēmu produkts, kurš klasificē zemes segumu un lietojumu (LULC) deviņās kategorijās (0=water, 1=trees, 2=grass, 3=flooded_vegetation, 4=crops, 5=shrub_and_scrub, 6=built, 7=bare, 8=snow_and_ice), katram ESA Copernicus Sentinel-2 attēlam ar identificēto mākoņainību \\(\\le35%\\), pieļaujot filtrēšanu un dažādu agregāciju veidošanu (Brown et al., 2022). Salīdzinot ar dažādiem statiskākiem (produktu veidā sagatavotiem konkrētiem gadiem ar smagnēju projicēšanu citiem gadiem) un/vai konkrētu ekosistēmas daļu raksturošanai paredzētiem, piemēram EU Crop Map (Ghassemi et al., 2024) un ELULC-10 (Mirmazloumi et al., 2022), DW neapšaubāmi ir ar lielākām sagaidāmajām kļūdām pie klašu (gēotelpiskajām) robežām, tomēr labāku telpisko (klasificēti ir visas izmantojamās satelītainas, nevis vadoties pēc kādas vidi atpazīstošas maskas) un temporālo pārklājumu (dinamiska un tuvu reāllaikam klasifikācijas pieejamība ik satelītainai, nevis atsevišķas projekcijas laikā). Dažādu nesen radīto augstas izšķirtspējas LULC klasifikatoru salīdzinājumos, piemēram, (Venter et al., 2022) un (Xu et al., 2024), ir konstatētas dažādas atšķirības starp tiem, turklāt DW nav bijis uzskatāms par precīzāko, jo sevišķi spējā detektēt relatīvi šaurus līnijaveida objektus un saistībā ar neironu tīklos balstīto pieeju tieksmi pārspīlēt vertikāli strukturētās klases, tomēr tam ir augstākā temporālā pieejamība. Par šajos salīdzinājumos precīzāko uzskatāmajam ESA WorldCover brīvi pieejama ir informācijai tikai par 2020. un 2021. gadiem (https://collections.sentinel-hub.com/worldcover/). Augstās temporālās pieejamības dēļ, DW izpēte turpināta, jo pat, ja klases nav vienmēr korekti atpazītas, ir vērts izpētīt spēju atpazīt pārmaiņas to sastopamībā. Tā kā šī projekta komandai nav zināmi izsekojami (caurspīdīgi, reproducējami) Latvijā veikti DW klasifikācijas un tās pārmaiņu uzticamības pētījumi, šī resursa izpēte veikta projekta ietvaros. Izpētei ir sekojoši mērķi: noskaidrot DW izmantošanas iespējas LĢIA topogrāfiskās kartes (un citu ierobežotas pieejamības resursu) aizstāšanai sugu izplatības modelēšanai; noskaidrot labāko sezonu (mēnešu griezumā) Latvijas ainavas (un tās pārmaiņu) raksturošanai dzīvnieku vairošanās un veģetācijas sezonā; iegūt informāciju par DW spēju raksturot ainavas pārmaiņas starp gadiem. Izpēti fokusējām dzīvnieku vairošanās sezonai, kuras plaši pārklājas ar veģetācijas sezonu, kurā ir sagaidāma augstākā klasifikatoru spēja sniegt informatīvu rezultātu. Sezonas sākums: aprīlis, jo: šis ir mēnesis, kurā daļa valsts teritorijas vēl var būt zem sniega segas, bet lielākajā teritorijas daļā tas jau būs nokusis; šajā mēnesī sākas lapu koku plaukšana, bet tikai sākas, tomēr visbiežāk jau visā valsts teritorijā; lakstaugu veģetācija būs sazaļojusi galvenokārt ziemājos, bet ne dabiskajā veģetācijā; protams, uz mēneša beigām dažādi mauriņi u. tml., bet tas vēl nebūs noticis mēneša sākumā; vajadzētu būt vēl saglabājušamies sniega kušanas ūdeņiem, ja tādi bija uzkrājušies; Sezonas beigas: augusts, jo: tas labi sakrīt ar laiku, kad ligzdošanas un vairošanās sezona ir noslēgusies vairumam dzīvnieku sugu; sākas migrāciju sezona, kas gan ierosina, ka jūlijs varētu būt labāks beigu punkts, bet ir vērts pārbaudīt dažādas kombinācijas; intensīvi sākas rudens aršanas darbi, kas veido (t.sk. iznīcina) dzīvotnes nākošajai sezonai (pat, ja ietekmēta ziemošana, tās reproduktīvā vai teritoriju aizņemtības izpausme būs novērojama nākošajā sezonā); arī šis sliecas ierosināt, ka jūlijs būtu labāks beigu punkts, bet ir vērts pārbaudīt dažādas kombinācijas; šis mēnesis vēl ir svarīgs daudzām bezmugurkaulnieku sugām, to konstatēšanai; Soļa garums analīzēm: 2-5 secīgi mēneši, jo tikai viena mēneša izmantošana nebūtu sevišķi laba doma, ja tas ir, piemēram, tikai viens aprīļa mēnesis, varētu būt problēmas ar jebkādu veģetāciju, bet vasaras mēnešos ar ūdeņainajām vietām utml.; secīgi, jo savādāk nav loģiski; pieci, jo periodā ir tikai pieci; kopējais kombināciju skaits sezonalitātes pārbaudēm sanāk desmit (turpmākajos apzīmējumos lietots pirmā un pēdējā mēneša trīs burtu saīsinājumu angļu valodā apvienojums bez atdalītājiem): apr-may; apr-may-jun; apr-may-jun-jul; apr-may-jun-jul-aug; may-jun; may-jun-jul; may-jun-jul-aug; jun-jul; jun-jul-aug; jul-aug Mērķa sasniegšanai ir izvirzāmi vairāki izpētes jautājumi, kuri ir risināti šīs nodaļas sekojošajās daļās: Kuros gados un kādos griezumos DW slāņi nosedz visu Latviju, kāda ir datu multi-temporālā un telpiskā pieejamība?; Cik labi tiek atpazītas lauksaimniecības kultūras plašās grupās - nepieciešams, lai šo izmantotu par pamatu turpmākam darbam ainavas klasificēšanā par kultūrām, par kurām nav izpratnes, un vietām, par kurām nav pieejama reģistru informācija, raksturošanai; Kāda ir mežaudzes augstuma (atkarībā no valdošās koku sugas) saistība ar DW mežu/koku un krūmu klasēm - nepieciešama, lai veiktu ainavas klasifikāciju par vietām, kurām nav reģistru, izdalītu koku un krūmu pudurus; Kāds ir topogrāfiskās kartes ar mitrājiem saistāmo klašu sadalījums DW klasēs, kad ir labākā saistība ar vēlamo klasi (un kura tad tā būtu augstajiem purviem un ūdeņu veģetācijai) - nepieciešams gan ainavas, gan pārmaiņu raksturošanai; Kāda ir topogrāfiskās kartes karjeru un kūdras ieguves vietu, kā arī dažādu ceļu saistība ar DW klasēm - nepieciešams gan ainavas, gan pārmaiņu raksturošanai; Kāda ir izcirtuma izmēra (un formas) saistība ar DW klasēm - nepieciešams gan ainavas, gan pārmaiņu raksturošanai; Kāda DW klase tiek piešķirta aramzemēm, kuras pirms gada transformētas no zālājiem - nepieciešams ainavas pārmaiņām. Kopējie uzstādījumi analīžu veikšanai poligonu atlasei izmantojam ‘set.seed(0)’, lai nodrošinātu rezultātu reproducējamību; laika taupīšanai, ik analizei nejauši izlozējam 999 vai izmantojam visus pieejamos poligonus; ik analīzi veicam kā zonālo statistiku, aptverot visu pētāmo plankumu; DW ik periodam ir resamplēts sakritībai ar references 10 m šūnu un ietver tikai Latvijas teritoriju. DW ievades informācija - rastra slānis katrai sezonai katrā gadā - sagtavots Google Earth Engine (GEE) platformā (Gorelick et al., 2017), izmantojot replicēšanas skriptu. Lai izmantotu šo skriptu, ir nepieciešams GEE konts un projekts un pietiekošs apjoms vietas Google Drive diskā. Izpildot komandrindas tiks piedāvāta lejuplāde failam, kas aptver laika periodu no vērtības 7. rindā līdz vērtībai 8. rindā (faila nosaukums norādāms 32. rindā, tā apraksts - 33. rindā un direktorija Google diskā - 31. rindā vai tas viss norādāms apstiprinot saglabāšanau) - šis skripts nav optimizēts visu sezonālo griezumu visiem gadiem sagatavošanai, lai reproducētu vai paplašinātu šo izpēti, tās nepieciešams manuāli izmainīt. Pēc komandrindu izpildes un rezultātu sagatavošanas Google Drive diskā, ir redzams, ka katrs visu Latviju aptverošais slānis ir sadalīts vairākās lapās. Tas ir tādēļ, ka, lai nodrošinātu nulles patieso vērtību (klase “water”, nevis fons), slāņi kodēti kā Float, nevis veselie skaitļi. Visas šīs lapas ir nepieciešams lejuplādēt, sekojošās R komandrindas tās apvieno, nodrošinot koordinātu sistēmas un pikseļu atbilstību references rastram. if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} # reference paraugs=rast(&quot;./LV10m_10km.tif&quot;) # saraksts ar lejupielādētajiem failiem, pieņemot, ka tie atrodas direktorijā # &quot;DWE_float&quot; faili=data.frame(faili=list.files(&quot;./DWE_float/&quot;)) faili$celi_sakums=paste0(&quot;./DWE_float/&quot;,faili$faili) # Korekti projicētu mozaīku sagatavošana # failu nosaukumi un ceļš saglabāšanai faili=faili %&gt;% separate(faili,into=c(&quot;DW&quot;,&quot;gads&quot;,&quot;periods&quot;,&quot;parejais&quot;),sep=&quot;_&quot;,remove = FALSE) %&gt;% mutate(unikalais=paste0(DW,&quot;_&quot;,gads,&quot;_&quot;,periods), mosaic_name=paste0(unikalais,&quot;.tif&quot;), masaic_cels=paste0(&quot;./DWE_mosaic/&quot;,mosaic_name)) # unikālie failu nosaukumi cikla vadībai unikalie=levels(factor(faili$unikalais)) # cikls uzdevuma veikšanai for(i in seq_along(unikalie)){ unikalais=faili %&gt;% filter(unikalais==unikalie[i]) beigu_cels=unique(unikalais$masaic_cels) # ik slānis sastāv no divām lapām viens=rast(unikalais$celi_sakums[1]) divi=rast(unikalais$celi_sakums[2]) viens2=project(viens,paraugs) divi2=project(divi,paraugs) mozaika=mosaic(viens2,divi2,fun=&quot;first&quot;) maskets=mask(mozaika,paraugs,filename=beigu_cels,overwrite=TRUE) } 5.1 Q0: DW nosegums Katram gadam (2015-2023) ik iepriekš minētajam sezonas griezumam DW datu pārklājum ir apskatāmi zemāk esošajā attēlā 5.1. Kā jau sagaidāms, 2015. gadā ir trūcīgs nosegums. Pārskata periodā resurss ir samērā droši izmantojams kopš 2018. gada, kopš 2016. gada pielietojamība ir vērtējama, atkarībā no mērķiem un vērtējama saistībā ar sezonas griezumiem. Figure 5.1: DW rezultātu pieejamība dažādos sezonālajos griezumos kopš Sentinel-2 programmas datu pieejamības. Pikseļu krāsa attēla daļās raksturo 1 km šūnās esošo klasifikācijas iztrūkumu īpatsvaru, savukārt skaitļi attēla daļās - kopējo klasifikācijas robu īpatsvaru procentos (%). Komandu rindas reproducēšanai: # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)) {install.packages(&quot;exactextractr&quot;); require(exactextractr)} if(!require(openxlsx)) {install.packages(&quot;openxlsx&quot;); require(openxlsx)} # 10 m rastra template paraugs=rast(&quot;./LV10m_10km.tif&quot;) # 100 m režģis kvadrati=st_read_parquet(&quot;./tikls1k_sauzeme.parquet&quot;) # robu analīze failu_objekts2=data.frame(faili=list.files(&quot;./DWE_mosaic/&quot;)) failu_objekts2$celi_sakums=paste0(&quot;./DWE_mosaic/&quot;,failu_objekts2$faili) failu_objekts2$celi_beigas=paste0(&quot;./DWEm_missing/&quot;,&quot;missing_&quot;,failu_objekts2$faili) failu_objekts2=failu_objekts2 %&gt;% separate(faili,into=c(&quot;DW&quot;,&quot;gads&quot;,&quot;sezona&quot;,&quot;ext&quot;),remove = FALSE) failu_objekts2$celi_parquet=paste0(&quot;./DWEm_missing/&quot;,&quot;missing_&quot;,&quot;DW_&quot;, failu_objekts2$gads,&quot;_&quot;, failu_objekts2$sezona, &quot;.parquet&quot;) failu_objekts2$missings=NA_real_ for(j in 1:length(failu_objekts2$faili)){ print(j) cels=failu_objekts2$celi_sakums[j] cels_beigas=failu_objekts2$celi_beigas[j] cels_parquet=failu_objekts2$celi_parquet[j] gads=failu_objekts2$gads[j] sezona=failu_objekts2$sezona[j] print(cels) print(cels_beigas) dw1=terra::rast(cels) dw2=classify(dw1,cbind(0,10,0)) dw3=terra::cover(dw2,paraugs,filename=cels_beigas,overwrite=TRUE) iztrukumi=global(dw3, &quot;mean&quot;, na.rm=TRUE) failu_objekts2$missings[j]=round(iztrukumi$mean*100,2) robi_tikla=exact_extract(dw3,kvadrati,&quot;mean&quot;,max_cells_in_memory=1300000000) kvadrati2=kvadrati kvadrati2$robi_tikla=robi_tikla kvadrati2$gads=gads kvadrati2$sezona=sezona st_write_parquet(kvadrati2,cels_parquet) } write.xlsx(failu_objekts2,&quot;./DWmc_missing.xlsx&quot;) # parquet savienošana robu_kvadrati &lt;- map_dfr(list.files(&quot;./DWEm_missing/&quot;,pattern=&quot;.parquet&quot;, full.names = TRUE), sfarrow::st_read_parquet, show_col_types = FALSE) robu_kvadrati2=robu_kvadrati %&gt;% mutate(gads2=as.numeric(gads), sezona2=factor(sezona,ordered=TRUE, levels=c(&quot;aprmay&quot;,&quot;aprjun&quot;,&quot;aprjul&quot;,&quot;apraug&quot;,&quot;mayjun&quot;, &quot;mayjul&quot;,&quot;mayaug&quot;,&quot;junjul&quot;,&quot;junaug&quot;,&quot;julaug&quot;))) failu_objekts2=failu_objekts2 %&gt;% mutate(gads2=as.numeric(gads), sezona2=factor(sezona,ordered=TRUE, levels=c(&quot;aprmay&quot;,&quot;aprjun&quot;,&quot;aprjul&quot;,&quot;apraug&quot;,&quot;mayjun&quot;, &quot;mayjul&quot;,&quot;mayaug&quot;,&quot;junjul&quot;,&quot;junaug&quot;,&quot;julaug&quot;))) %&gt;% mutate(x=410000,y=210000, missings2=paste0(missings,&quot; %&quot;)) # rezultāta vizualizācija ggplot()+ geom_sf(data=robu_kvadrati2,aes(fill=robi_tikla,col=robi_tikla))+ facet_grid(gads2~sezona2)+ theme_bw()+ coord_sf(datum=sf::st_crs(3059))+ geom_text(data=failu_objekts2,aes(x=x,y=y,label=missings2),size=2.5)+ labs(fill=&quot;Missing&quot;,col=&quot;Missing&quot;)+ theme(axis.ticks = element_blank(), axis.text = element_blank(), axis.title = element_blank(), panel.grid.major = element_blank()) ggsave(&quot;./pic_missings.png&quot;,height = 3000,width=5000,units=&quot;px&quot;) 5.2 Q1: Lauksaimniecības kultūras Ir tādas kultūras, par kurām ir skaidrs, ka tām ir jāsakrīt ar DW klasēm, tās ir apskatāmas, lai pārbaudītu šīs Zemes novērošanas sistēmu (EO) klasifikācijas korektumu. Ir tādas kultūras, par kurām nav īsti skaidra šī atbilstība, to ir jānoskaidro pēc pirmās grupas izpētes rezultāta. Bet ir arī tādas kultūras, par kurām ir zināmas bažas par EO datu klasifikācijas rezultātu precizitātes iespējamību, piemēram, kukurūza un auzas. Aplūkojam sekojošas izpētes grupas: ziemāji aramzemēs, kur nav sagaidāmas problēmas, piemēram, rudzi, ziemas mieži, ziemas kvieši, ziemas tritikāle; ziemas rapsis; vasarāji aramzemēs, kur nav sagaidāmas problēmas, piemēram, vasaras mieži, vasaras kvieši, vasaras tritikāle; vasaras rapsis; auzas, jo dažādā izpratnē un pētījumos sarežģīti klasificējas EO datos; kukurūza, jo tur ir visādi jautājumi ar augšanu, augstumu un novākšanu - katrā no trim veidiem, lai labāk saprastu šo ainavā un dabas aizsardzībā nozīmīgo grupu; papuves, lai labāk izprastu šo klasi; ilggadīgi zālāji; kultivētās pļavas, lai labāk saprastu šo klasi; augļukoki, kur apvieno, augļu koki, ābeles, bumbieres, lai labāk saprastu šo klasi; ogu-krūmi, kur apvieno avenes, upenes, jāņogas, ērkšķogas, krūmcidonijas, kazenes, lai labāk saprastu šo klasi; zemās ogas, kur apvieno krūmmellenes un lieogu dzērvenes, bezatbalsta platības, kur apvieno kodus 620 un 792 vagu un rušināmkultūras, kuru ilustrēšanai izmantošu kodus 821, 825, 843, 844 īscirtmeta atvasāji un enerģijas augi, kurā apvienoti kodi 644, 645, 646, 641, 642 Izmantojam 2023. gada DW sezonālos slāņus. Lai gan šajā izpētes solī fokuss ir uz augstāk minētajām grupām, sugu izplatības modelēšanai ir nepieciešams klasificēt visas kultūras, tādēļ jau uzreiz skatām visas kultūras. Komandu rindas DW klašu sastopamības izpētei ir zemāk. To ietvaros izmantota LAD lauku informācija un šajā nodaļā (augstāk) sagatavotās 2023. gada DW sezonālās mozaīkas. # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)) {install.packages(&quot;exactextractr&quot;); require(exactextractr)} if(!require(ggview)) {install.packages(&quot;ggview&quot;); require(ggview)} if(!require(readxl)) {install.packages(&quot;readxl&quot;); require(readxl)} if(!require(ggrepel)) {install.packages(&quot;ggrepel&quot;); require(ggrepel)} # ievades dati LAD &lt;- st_read_parquet(&quot;./LAD_lauki.parquet&quot;) AprAug &lt;- rast(&quot;./DW_2023_apraug.tif&quot;) AprJul &lt;- rast(&quot;./DW_2023_aprjul.tif&quot;) AprJun &lt;- rast(&quot;./DW_2023_aprjun.tif&quot;) AprMay &lt;- rast(&quot;./DW_2023_aprmay.tif&quot;) JulAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunJul &lt;- rast(&quot;./DW_2023_junjul.tif&quot;) MayAug &lt;- rast(&quot;./DW_2023_mayaug.tif&quot;) MayJul &lt;- rast(&quot;./DW_2023_mayjul.tif&quot;) MayJun &lt;- rast(&quot;./DW_2023_mayjun.tif&quot;) # utility darbiba &lt;- function(raster, vector, period) { exact_extract(raster, vector, function(value, coverage_fraction) { data.frame(value = value, frac = coverage_fraction / sum(coverage_fraction, na.rm = TRUE)) %&gt;% group_by(value) %&gt;% summarize(freq = sum(frac, na.rm = TRUE), .groups = &#39;drop&#39;) %&gt;% pivot_wider(names_from = &#39;value&#39;, names_prefix = &#39;freq_&#39;, values_from = &#39;freq&#39;) }) %&gt;% mutate(across(starts_with(&#39;freq&#39;), ~replace_na(., 0))) %&gt;% mutate(periods = period) } # DW klašu ekstrakcija ik lauka kultūru nejauši izlozētiem plankumiem # kultūru kodi kodi=data.frame(kodi=levels(factor(LAD$PRODUCT_CODE))) # saglabāšanas datu pamatne dati=LAD[1,] dati=dati %&gt;% mutate(periods=NA_character_, id=NA_real_, freq_0=NA_real_, freq_1=NA_real_, freq_2=NA_real_, freq_3=NA_real_, freq_4=NA_real_, freq_5=NA_real_, freq_6=NA_real_, freq_7=NA_real_, freq_8=NA_real_, freq_NA=NA_real_) # ekstrakcija ik kodams, veicot izlozi for (i in 1:length(kodi$kodi)){ kods=kodi$kodi[i] # nejaušo plankumu izloze set.seed(0) lauki &lt;- LAD %&gt;% filter(`PRODUCT_CODE` == kods) if (nrow(lauki) &lt; 999) {rand_l &lt;- lauki} else {rand_l &lt;- lauki %&gt;% sample_n(999)} rand_l &lt;- rand_l %&gt;% mutate(id = row_number()) # ekstrakcija a=cbind(rand_l,darbiba(AprAug, rand_l, &quot;AprAug&quot;)) b=cbind(rand_l,darbiba(AprJul, rand_l, &quot;AprJul&quot;)) c=cbind(rand_l,darbiba(AprJun, rand_l, &quot;AprJun&quot;)) d=cbind(rand_l,darbiba(AprMay, rand_l, &quot;AprMay&quot;)) e=cbind(rand_l,darbiba(JulAug, rand_l, &quot;JulAug&quot;)) f=cbind(rand_l,darbiba(JunAug, rand_l, &quot;JunAug&quot;)) g=cbind(rand_l,darbiba(JunJul, rand_l, &quot;JunJul&quot;)) h=cbind(rand_l,darbiba(MayAug, rand_l, &quot;MayAug&quot;)) i=cbind(rand_l,darbiba(MayJul, rand_l, &quot;MayJul&quot;)) j=cbind(rand_l,darbiba(MayJun, rand_l, &quot;MayJun&quot;)) # rezultātu apvienošana rez=bind_rows(a,b,c,d,e,f,g,h,i,j) dati &lt;- bind_rows(dati, rez) } # ērtāki lauku nosaukumi dati=dati %&gt;% mutate(water=freq_0, trees=freq_1, grass=freq_2, flooded_vegetation=freq_3, crops=freq_4, shrub_and_scrub=freq_5, built=freq_6, bare=freq_7, snow_and_ice=freq_8) # atbrīvošanās no liekā ieraksta dati_real=dati[-1,] # rezultāta saglabāšana sfarrow::st_write_parquet(dati_real,&quot;./Q1_kulturas.parquet&quot;) 5.2.1 Q1.1: Ziemāji aramzemēs Sekojošajā attēlā 5.2 ir ilustrēta ziemāju aramzemēs (kultūru kodi “121”,“122”,“132”,“112”,“116”,“151”) saistība ar DW klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klases “crops” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka zemākā atbilstība ir izmantojot tikai vasaras mēnešus. Ievērojami zemāka par atlikušajām klasēm ir arī tikai pavasara klasifikācija. Atlikušās ir visai līdzīgas, nedaudz pārāki temporālie griezumi šķiet maijā-jūnijā un maijā-jūlijā. Figure 5.2: Lauksaimniecības kultūru grupas “ziemāji” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) ziemaji_aramzemes=c(&quot;121&quot;,&quot;122&quot;,&quot;132&quot;,&quot;112&quot;,&quot;116&quot;,&quot;151&quot;) q11data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% ziemaji_aramzemes) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q11data2=q1data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q11data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q11data2,aes(sezona,y=1.1,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q11.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.2.2 Q1.2: Ziemas rapsis Sekojošajā attēlā 5.3 ir ilustrēta ziemas rapša (kultūras kods “212”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klases “crops” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka zemākā atbilstība ir izmantojot tikai vasaras mēnešus. Figure 5.3: Lauksaimniecības kultūru grupas “ziemas rapsis” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) ziemas_rapsis=c(&quot;212&quot;) q12data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% ziemas_rapsis) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q12data2=q12data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q12data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q12data2,aes(sezona,y=1.1,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=200,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q12.png&quot;,width=200,height=100,units=&quot;mm&quot;,dpi=600) 5.2.3 Q1.3: Vasarāji aramzemēs Sekojošajā attēlā 5.4 ir ilustrēta vasarāju aramzemēs (kultūru kodi “131”,“111”,“150”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klases “crops” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka zemākā atbilstība ir izmantojot tikai vasaras mēnešus. Figure 5.4: Lauksaimniecības kultūru grupas “vasarāji aramzemēs” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) vasaraji_aramzemes=c(&quot;131&quot;,&quot;111&quot;,&quot;150&quot;) q13data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% vasaraji_aramzemes) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q13data2=q13data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q13data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q13data2,aes(sezona,y=1.1,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q13.png&quot;,width=300,height=100,units=&quot;mm&quot;,dpi=600) 5.2.4 Q1.4: Vasaras rapsis Sekojošajā attēlā 5.5 ir ilustrēta vasaras rapša (kultūras kods “211”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klases “crops” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka zemākā atbilstība ir izmantojot tikai vasaras mēnešus. Figure 5.5: Lauksaimniecības kultūru grupas “vasaras rapsis” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) vasaras_rapsis=c(&quot;211&quot;) q14data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% vasaras_rapsis) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q14data2=q14data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q14data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q14data2,aes(sezona,y=1.1,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=200,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q14.png&quot;,width=200,height=100,units=&quot;mm&quot;,dpi=600) 5.2.5 Q1.5: Auzas Sekojošajā attēlā 5.6 ir ilustrēta auzu (kultūras kods “140”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klases “crops” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka zemākā atbilstība ir izmantojot tikai vasaras mēnešus. Figure 5.6: Lauksaimniecības kultūru grupas “auzas” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) auzas=c(&quot;140&quot;) q15data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% auzas) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q15data2=q15data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q15data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q15data2,aes(sezona,y=1.1,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=200,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q15.png&quot;,width=200,height=100,units=&quot;mm&quot;,dpi=600) 5.2.6 Q1.6: Kukurūza Sekojošajā attēlā 5.7 ir ilustrēta kukurūzas (kultūru kodi “791”,“741”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klases “crops” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka zemākā atbilstība ir izmantojot tikai vasaras mēnešus. Figure 5.7: Lauksaimniecības kultūru grupas “kukurūza” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) kukuruza=c(&quot;791&quot;,&quot;741&quot;) q16data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% kukuruza) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q16data2=q16data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q16data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q16data2,aes(sezona,y=1.1,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=250,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q16.png&quot;,width=250,height=100,units=&quot;mm&quot;,dpi=600) 5.2.7 Q1.7: Papuves Sekojošajā attēlā 5.8 ir ilustrēta papuvju (kultūru kodi “610”,“612”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klases “crops” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka zemākā atbilstība ir izmantojot tikai vasaras mēnešus. Dominējošā klase ir “crops”, tomēr nereti pikseļi ir klasificēti kā “grass”. Atkarībā no sezonas, par “grass” biežāk sastopama var būt klase “trees”, kas, visai droši ir saistāms ar lauka konfigurāciju, kas kā perimetra-laukuma attiecība ir demonstrēts zemāk 5.9. Figure 5.8: Lauksaimniecības kultūru grupas “papuves” saistība ar DW klasēm. Figure 5.9: Lauksaimniecības kultūru grupas “papuves” perimetra-laukuma attiecības saistība ar DW klasēm. Komandu rindas attēlu sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) papuve=c(&quot;610&quot;,&quot;612&quot;) q17data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% papuve) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q17data2=q17data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q17data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q17data2,aes(sezona,y=1.1,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=250,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q17.png&quot;,width=250,height=100,units=&quot;mm&quot;,dpi=600) q17data3=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% papuve) %&gt;% mutate(PAr=SHAPE.LEN/SHAPE.AREA) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,PAr,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) ggplot(q17data3,aes(PAr,proporcija,col=klase))+ facet_wrap(~sezona,ncol=5)+ geom_point(alpha=0.2)+ geom_smooth()+ theme_bw()+ coord_cartesian(ylim=c(0,1),xlim=c(0,0.75))+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ theme(axis.title.y = element_blank(), legend.title = element_blank())+ labs(x=&quot;Perimetra-laukuma attiecība&quot;) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q17b.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.2.8 Q1.8: Ilggadīgie zālāji Sekojošajā attēlā 5.10 ir ilustrēta ilggadīgo zālāju (kultūru kods “710”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klases “crops” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka zemākā atbilstība ir izmantojot tikai vasaras mēnešus, tomēr neatkarīgi no temporālā griezuma tā ir uzskatāma par vāju. Viens no iespējamajiem iemesliem ir laukos un to malās esošie koki un krūmi. Lai par to pārliecinātos, veidoju saistību ar perimetra-laukuma attiecību (sekojošajā attēlā). Kā redzams 5.11, tieši koku piesātinājums laukiem ar proporcionāli garāku malu ir iemesls misklasifikācijai. Tomēr arī šādā griezumā ir redzama sezonālā mainība - pavasara mēnešiem ir nozīme. Figure 5.10: Lauksaimniecības kultūru grupas “ilggadīgi zālāji” saistība ar DW klasēm. Figure 5.11: Lauksaimniecības kultūru grupas “ilggadīgi zālāji” perimetra-laukuma attiecības saistība ar DW klasēm. Komandu rindas attēlu sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) ilggadigi_zalaji=c(&quot;710&quot;) q18data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% ilggadigi_zalaji) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q18data2=q18data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;grass&quot;) ggplot(q18data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q18data2,aes(sezona,y=1.1,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=200,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q18.png&quot;,width=200,height=100,units=&quot;mm&quot;,dpi=600) q18data3=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% ilggadigi_zalaji) %&gt;% mutate(PAr=SHAPE.LEN/SHAPE.AREA) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,PAr,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) ggplot(q18data3,aes(PAr,proporcija,col=klase))+ facet_wrap(~sezona,ncol=5)+ geom_point(alpha=0.2)+ geom_smooth()+ theme_bw()+ coord_cartesian(ylim=c(0,1))+ scale_color_viridis_d()+ scale_x_continuous(breaks=seq(0,0.2,by=0.1))+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ theme(axis.title.y = element_blank(), legend.title = element_blank())+ labs(x=&quot;Perimetra-laukuma attiecība&quot;) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q18b.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.2.9 Q1.9: Kultivētie zālāji Sekojošajā attēlā 5.12 ir ilustrēta kultivēto zālāju (kultūru kodi “720”,“760”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klašu “crops” un “grass” ar lauka platību svērto vidējo īpatsvaru. Redzama izteikta mainība starp abām dominējošajām klasēm, kas liecina, ka ne katru galu katrs zālājs tiek ielabots aršanai līdzīgā apjomā. Šī mainība, protams, nav ērta, bet ir pamats izdalīt šo biotopu grupu atsevišķi. Figure 5.12: Lauksaimniecības kultūru grupas “kultivēti zālāji” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) kultiveti_zalaji=c(&quot;720&quot;,&quot;760&quot;) q19data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% kultiveti_zalaji) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q19data2=q19data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;grass&quot;) q19data3=q19data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q19data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q19data2,aes(sezona,y=1.1,label=vertiba),size=3)+ geom_text(data=q19data3,aes(sezona,y=1.05,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q19.png&quot;,width=300,height=100,units=&quot;mm&quot;,dpi=600) 5.2.10 Q1.10: Agļukoki Sekojošajā attēlā 5.13 ir ilustrēta augļukoku (kultūru kodi “911”,“912”,“932”,“914”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klašu “trees” un “grass” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka, atkarībā no kultūras, nereti lauki ir klasificēti kā zālāji, nevis koki. No vienas puses tas ir skaidrojams ar telpu starp kokiem, bet var arī būt saistāms ar pašu augļukoku augstumu (šis vairāk tiks apskatīts pie mežaudzēm). Figure 5.13: Lauksaimniecības kultūru grupas “augļukoki” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) auglukoki=c(&quot;911&quot;,&quot;912&quot;,&quot;932&quot;,&quot;914&quot;) q110data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% auglukoki) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q110data2=q110data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;grass&quot;) q110data3=q110data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;trees&quot;) ggplot(q110data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q110data2,aes(sezona,y=1.15,label=vertiba),size=3)+ geom_text(data=q110data3,aes(sezona,y=1.07,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q110.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.2.11 Q1.11: Ogu-krūmi Sekojošajā attēlā 5.14 ir ilustrēta ogu-krūmu (kultūru kodi “921”,“922”,“933”,“927”,“928”,“929”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klašu “crops”, “grass” un “trees” ar lauka platību svērto vidējo īpatsvaru. Redzams, ka, atkarībā no kultūras, nereti lauki ir klasificēti kā zālāji, vai pat aramzemes, nevis koki vai krūmi. No vienas puses tas ir skaidrojams ar telpu starp kultūras augiem, bet var arī būt saistāms ar pašu augu augstumu (šis vairāk tiks apskatīts pie mežaudzēm). Noteikti ir pamats to izdalīt atsevišķā klasē no aramzemēm un zālājiem, domājot par sugu izplatības modelēšanu. Figure 5.14: Lauksaimniecības kultūru grupas “ogu-krūmi” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) ogukrumi=c(&quot;921&quot;,&quot;922&quot;,&quot;933&quot;,&quot;927&quot;,&quot;928&quot;,&quot;929&quot;) q111data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% ogukrumi) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q111data2=q111data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;grass&quot;) q111data3=q111data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;trees&quot;) q111data4=q111data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q111data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q111data2,aes(sezona,y=1.15,label=vertiba),size=3)+ geom_text(data=q111data3,aes(sezona,y=1.07,label=vertiba),size=3)+ geom_text(data=q111data4,aes(sezona,y=1.22,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q111.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.2.12 Q1.12: Zemās ogas Sekojošajā attēlā 5.15 ir ilustrēta zema auguma ogu (kultūru kodi “924”,“934”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klašu “crops”, “grass”, “shrub_and_scrub” un “trees” ar lauka platību svērto vidējo īpatsvaru. Šī klase ir samērā reti sastopama un tās ietvaros ir izteikta heterogenitāte. Figure 5.15: Lauksaimniecības kultūru grupas “zemās ogas” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) zemas_ogas=c(&quot;924&quot;,&quot;934&quot;) q112data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% zemas_ogas) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q112data2=q112data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;grass&quot;) q112data3=q112data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;shrub_and_scrub&quot;) q112data4=q112data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) q112data5=q112data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;trees&quot;) ggplot(q112data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q112data3,aes(sezona,y=1.15,label=vertiba),size=3)+ geom_text(data=q112data5,aes(sezona,y=1.07,label=vertiba),size=3)+ geom_text(data=q112data2,aes(sezona,y=1.23,label=vertiba),size=3)+ geom_text(data=q112data4,aes(sezona,y=1.30,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=250,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q112.png&quot;,width=250,height=100,units=&quot;mm&quot;,dpi=600) 5.2.13 Q1.13: Bezatbalsta platība Sekojošajā attēlā 5.16 ir ilustrēta lauku blokos iekļauto platību, par kurām netiek izmaksāts atbalsts (kultūru kodi “620”,“792”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klašu “crops”, “grass”, “shrub_and_scrub” un “trees” ar lauka platību svērto vidējo īpatsvaru. Šī klase ir samērā reti sastopama un tās ietvaros ir izteikta heterogenitāte. Figure 5.16: Lauksaimniecības kultūru grupas “bezatbalsta platības” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) bezatbalsta=c(&quot;620&quot;,&quot;792&quot;) q113data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% bezatbalsta) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q113data2=q113data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;grass&quot;) q113data3=q113data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;shrub_and_scrub&quot;) q113data4=q113data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) q113data5=q113data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;trees&quot;) ggplot(q113data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q113data3,aes(sezona,y=1.15,label=vertiba),size=3)+ geom_text(data=q113data5,aes(sezona,y=1.07,label=vertiba),size=3)+ geom_text(data=q113data2,aes(sezona,y=1.23,label=vertiba),size=3)+ geom_text(data=q113data4,aes(sezona,y=1.30,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=400,height=100,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q113.png&quot;,width=400,height=100,units=&quot;mm&quot;,dpi=600) 5.2.14 Q1.14: Vagu un rušināmkultūras Sekojošajā attēlā 5.17 ir ilustrēta rušināmkultūru (kultūru kodi “821”,“825”, “843”, “844”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klašu “crops”, “grass” un “trees” ar lauka platību svērto vidējo īpatsvaru. Šīs klases piemēri samērā stabili klasificējas kā aramzemes. Figure 5.17: Lauksaimniecības kultūru grupas “vagu un rušināmkultūras” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) rusinamkulturas=c(&quot;821&quot;,&quot;825&quot;, &quot;843&quot;, &quot;844&quot;) q114data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% rusinamkulturas) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q114data2=q114data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;grass&quot;) q114data3=q114data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;trees&quot;) q114data4=q114data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q114data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q114data2,aes(sezona,y=1.15,label=vertiba),size=3)+ geom_text(data=q114data3,aes(sezona,y=1.07,label=vertiba),size=3)+ geom_text(data=q114data4,aes(sezona,y=1.22,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q114.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.2.15 Q1.15: Īscirtmeta atvasāji un enerģijas kultūras Sekojošajā attēlā 5.18 ir ilustrēta īscirtmeta atvasāju un enerģijas kultūru (kultūru kodi “644”, “645”, “646”, “641”, “642”) saistība ar Dynamic World klasēm dažādos temporālajos griezumos. Skaitļi attēlu daļās norāda klašu “crops”, “grass” un “trees” ar lauka platību svērto vidējo īpatsvaru. Šīs klases piemēri ir visai heterogēni. Miežabrālis ir lakstaugs, tādēļ skaidra ir samērā izteiktā zālāju klases dominance, tomēr neatkarīgi no sezonas, plaša pārstāvniecība ir arī citām klasēm, kas apgrūtina tā stratificēšanu. Līdzīgi ar kokaugiem, tomēr dominē atbilstošā koku klase, kur pārējās, visticamāk, ir saistītas ar kultūras vecumu, kas tīri teorētiski būtu pieņemami no sugu izplatības modelēšanas viedokļa. Figure 5.18: Lauksaimniecības kultūru grupas “īscirtmeta atvasāji un enerģijas kultūras” saistība ar DW klasēm. Komandu rindas attēla sagatavošanas reproducēšanai: dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) atvasaji_energy=c(&quot;644&quot;, &quot;645&quot;, &quot;646&quot;, &quot;641&quot;, &quot;642&quot;) q115data=data.frame(dati) %&gt;% filter(PRODUCT_CODE %in% atvasaji_energy) %&gt;% dplyr::select(PRODUCT_CODE,PRODUCT_DESCRIPTION,SHAPE.AREA,sezona,water:snow_and_ice) %&gt;% group_by(PRODUCT_CODE) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% mutate(nosaukums=paste0(PRODUCT_DESCRIPTION,&quot;\\n&quot;,&quot;n=&quot;,skaits)) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q115data2=q115data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;grass&quot;) q115data3=q115data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;trees&quot;) q115data4=q115data %&gt;% group_by(nosaukums,sezona,klase) %&gt;% summarise(vertiba=round(weighted.mean(proporcija,w=SHAPE.AREA,na.rm=TRUE)*100,0)) %&gt;% ungroup() %&gt;% filter(klase==&quot;crops&quot;) ggplot(q115data,aes(sezona,proporcija,col=klase))+ facet_wrap(~nosaukums)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank())+ geom_text(data=q115data2,aes(sezona,y=1.15,label=vertiba),size=3)+ geom_text(data=q115data3,aes(sezona,y=1.07,label=vertiba),size=3)+ geom_text(data=q115data4,aes(sezona,y=1.22,label=vertiba),size=3)+ scale_color_viridis_d()+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q115.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.2.16 Q1: LAD kultūru stratificēšanai Ainavas aprakstu veidošanā sugu izplatības modelēšanai ir jācenšas interpretēt to kā sugas uztver vidi un to kombinēt ar pašas vides aprakstiem (datubāzu informāciju), lai izveidotu atbilstošas pazīmes. Attiecībā uz lauksaimniecībā izmantojamām zemēm, mūsu plāns ir veidot sekojošas grupas (smalkākais dalījums, kuru pēc nepieciešamības apvienot): aramzemes (labība-vasarāji); aramzemes (labība-ziemāji); aramzemes (vagu un rušināmkultūras); aramzemes (vasaras rapsis un rispsis, kukurūzas, zirņi un pupas, soja, kaņepes); aramzemes (ziemas rapsis un ripsis); aramzemes (citur neiekļautās); augļudārzi; krūmveida ilggadīgie stādījumi; papuves; zālāji (ilggadīgie); zālāji (kultivētie); zālāji (ārpus lauku blokiem un bezatbalsta platības). Lai gan šīs klases daļēji atbilst LAD grupām, ir atšķirības un ne vienmēr ir viennozīmīgi skaidrs, kurā grupā konkrētās kultūras iekļaut. Tādēļ veicu principiālo komponentu analīzi (PCA) un K-vidējo (k=12) klāsteranalīzi, lai apskatītu sākotnējo dalījumu un veiktu nepieciešamās korekcijas. Grupēšanās izpētei, izmantoju (1) Aprīļa-Augusta kultūras kodu vidējās vērtības katrā no Dynamic World klasēm un (2) katras Dynamic World klases ik divu mēnešu (“AprMay”,“MayJun”,“JunJul”,“JulAug”) vidējo aritmētisko agregāciju vienotā standartnovirzē kā ievades matricu PCA analīzē. PCA pirmā ass izskaidro 75.5% un otrā ass - 8.4% no kopējās mainības. Kā sekojošajā attēlā 5.19 redzams, starp sākotnēji izdalītajām grupām ir plaša pārklāšanās, jo sevišķi pirmās ass kreisajā malā. Lai gan K-vidējo klāsteranalīze spēj atrast grupas, to apvienošana klāsteranalīzes rezultātos nozīmētu ekoloģiskās jēgas zaudēšanu. Savukārt sugu bioloģijas un ekoloģijas zināšanās un izpratnē par kultūru apsaimniekošanu un veģetācijas attīstības gaitu balstīto grupu sadalīšana smalkākās, radītu nopietnus izaicinājumus sugu izplatības modelēšanā EGV sastopamības dēļ. Tomēr šis vingrinājums arī skaidri uzrādīja atsevišķus kutūru kodus, kuri krasi atšķīrās no pārējām kultūrām savā grupā, tādēļ tie ir pārklasificēti: kultūru kodi 924, 934 un 950 ievietoti pie augļudārziem; kultūru kodi 878, 930 un 940 ievietoti pie kultivētajiem zālājiem. Šis vingrinājums demonstrē, ka, ja nepieciešams izdalīt lauksaimniecības kultūras ekoloģisko atšķirību dēļ, DW nav sevišķi izpalīdzīgs. Protams, eksistē arī citi risinājumi, kas ir sevišķi uzmanīgi pret biežākajām lauksaimniecības kultūrām (un to klasēm), tomēr arī tie neveic tādu dalījumu kā šajās analīzēs ir paredzēts. Tādēļ no LAD datubāzes izmantošanas izvairīties nav iespējams. Šobrīd šķiet, ka Dynamic World varētu sniegt atbalstu platību, kas nav lauku blokos (vai Meža Valsts reģistrā) grupēšanai plašās klasēs, bet, lai par to pārliecinātos, ir jāturpina izpēte. Figure 5.19: PCA rezultāti DW klašu sastopamībai sugu izplatības modelēšanai paredzētajā lauku kultūru dalījumā. Komandu rindas attēla sagatavošanas un veiktās analīzes reproducēšanai (papildus fails - sagatavotais un pēc klāsteranalīzes koriģētais kultūru grupējums): dati=sfarrow::st_read_parquet(&quot;./Q1_kulturas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) kulturam=read_excel(&quot;./KulturuKodi_2024.xlsx&quot;) kulturam$kods=as.character(kulturam$kods) dati_means=data.frame(dati) %&gt;% select(PRODUCT_CODE,sezona,water:snow_and_ice) %&gt;% filter(sezona %in% c(&quot;AprAug&quot;)) %&gt;% # izvēlos vienu - garāko sezonu group_by(PRODUCT_CODE) %&gt;% summarise(across(water:snow_and_ice,mean, .names=&quot;mean_{col}&quot;)) %&gt;% ungroup() dati_sds=data.frame(dati) %&gt;% select(PRODUCT_CODE,sezona,water:snow_and_ice) %&gt;% filter(sezona %in% c(&quot;AprMay&quot;,&quot;MayJun&quot;,&quot;JunJul&quot;,&quot;JulAug&quot;)) %&gt;% group_by(PRODUCT_CODE,sezona) %&gt;% summarise_if(is.numeric,mean) %&gt;% group_by(PRODUCT_CODE) %&gt;% summarise(across(water:snow_and_ice,sd, .names=&quot;sd_{col}&quot;)) %&gt;% ungroup() dati2=dati_means %&gt;% left_join(dati_sds,by=&quot;PRODUCT_CODE&quot;) %&gt;% left_join(kulturam,by=c(&quot;PRODUCT_CODE&quot;=&quot;kods&quot;)) matrica=dati2 %&gt;% select(mean_water:sd_snow_and_ice) klasteri &lt;- kmeans(matrica, centers = 12, nstart = 160/12, iter.max = 999) rez_pca = princomp(matrica) summary(rez_pca) rezultati = data.frame(rez_pca$scores, klasteris=klasteri$cluster, SDMgrupa=dati2$SDM_grupa_sakums, kods=dati2$PRODUCT_CODE) ggplot(rezultati,aes(Comp.1,Comp.2,col=SDMgrupa,label=kods))+ geom_point(alpha=0.5,size=4)+ theme_classic()+ theme(panel.background = element_rect(color=&quot;black&quot;))+ labs(x=&quot;PCA pirmā ass (75.5%)&quot;,y=&quot;PCA otrā ass (8.4%)&quot;,col=&quot;Kultūru grupa&quot;)+ theme(axis.title = element_text(size=14), axis.text=element_text(size=12), legend.title = element_text(size=14), legend.text=element_text(size=12)) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q1klasteri.png&quot;, width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.3 Q2: Mežaudzes augstums sugu grupās Lai labāk saprastu potenciālās atšķirības saistībā ar sezonalitāti, pārbaudi veicām dažādām koku sugām (un to grupām) atsevišķi: priedes - tīraudzes; egles - tīraudzes; apses - tīraudzes; bērzi - tīraudzes; melnalksnis - tīraudzes; platlapji - audzes, kurās platlapju krājas koeficientu summa ir &gt;=8; citi - pārējās mežaudzes; Katrā no šīm sugu-grupām veicām nogabalu izlozi katrā vecumgrupā (jaunaudzes, vidēja vecuma audzes, biestaudzes, pieaugušas audzes, pāraugušas audzes) pilnā izlases apjomā, neatkarīgi no apsaimniekošanas vēstures. Tas tad arī veido kokaudzes augstuma gradientu (jaunaudzes, vidēja vecuma un briestaudzes) un ļauj labāk arī saprast veco galu, kurā var būt notikuši jau dažādi dabiskie procesi (pāraugušās audzes). Izmantojām 2023. gada DW sezonālos slāņus. Lai gan primārā interese ir par to no kāda augstuma mežaudzes ir klasificētas kā “trees”, sākumā izmantojām visas DW klases. Kopumā ir novērojama (5.20 att.) augsta Dynamic World klases ‘trees’ sastopamība. Otrā biežākā klase ir ‘grass’, izplatīta jaunaudzēs, savukārt jaunaudzēs sagaidāmā ‘shrub_and_scrub’ ir samērā reti sastopama, tomēr arī jaunaudzēs. Vājākā ‘trees’ pārstāvniecība ir platlapju mežaudzēs. Rodas iespaids, ka labākā atbilstība ir tikai vasaras sezonā, kas ir pretēji lauksaimniecības zemju analīzē novērotajam. Tādēļ turpinu izpēti saistībā ar kokaudzes augstumu. Detalizētāka analīze liecina, ka vasaras mēneši, tomēr nav optimālākie, jo sevišķi platlapju un bērzu audzēs, kur augstākajās uzrādās ievērojams ‘trees’ ar platību svērtā īpatsvara samazinājums (5.21 att.). Arī citu koku sugu audzēs jūlija-augusta sezonā ir zemākā atbilstība sagaidāmajai vērtībai. Mežaudzes virs 10 m augstuma pārējās sezonās ir gandrīz perfekti klasificētas kā ‘trees’. Vidējās vērtības pārsniedz 50% jau no zemākajām audzēs (0.1 m) un kopš apmēram 5 m augstuma tās ir vismaz 80% platības klasificētas kā ‘trees’. Biežāk sastopamā sekojošā klase ir ‘grass’, kas ir loģiski saistāms ar zemiem un relatīvi reti izvietotiem kokiem, kas ieauguši zālē. Tomēr tas arī nozīmē, ka aizaugoši zālāji, kas bagāti ar koku atvasēm līdzīgiem augiem bieži būs klasificēti kā ‘trees’. Figure 5.20: DW klašu sastopamība meža nogabalos ar atšķirīgām valdošajām koku sugu grupām. Figure 5.21: Ar platību svērtā DW klases “koki” sastapšanas varbūtība dažādās koku sugu grupās, atkarībā no kokaudzes augstuma. Komandu rindas attēlu sagatavošanas un veiktās analīzes reproducēšanai (tiek izmantoti Meža Valsts reģistrs dati): # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)) {install.packages(&quot;exactextractr&quot;); require(exactextractr)} if(!require(ggview)) {install.packages(&quot;ggview&quot;); require(ggview)} if(!require(readxl)) {install.packages(&quot;readxl&quot;); require(readxl)} if(!require(ggrepel)) {install.packages(&quot;ggrepel&quot;); require(ggrepel)} # meža dati MVR &lt;- st_read_parquet(&quot;./nogabali_2024janv.parquet&quot;) priedes=c(&quot;1&quot;,&quot;14&quot;,&quot;22&quot;) egles=c(&quot;3&quot;,&quot;13&quot;,&quot;15&quot;,&quot;23&quot;) apses=c(&quot;8&quot;,&quot;19&quot;,&quot;68&quot;) berzi=c(&quot;4&quot;) melnalksni=c(&quot;6&quot;) platlapji=c(&quot;10&quot;,&quot;11&quot;,&quot;12&quot;,&quot;16&quot;,&quot;17&quot;,&quot;18&quot;,&quot;24&quot;,&quot;25&quot;,&quot;26&quot;,&quot;27&quot;,&quot;28&quot;,&quot;29&quot;,&quot;61&quot;, &quot;62&quot;,&quot;63&quot;,&quot;64&quot;,&quot;65&quot;,&quot;66&quot;,&quot;67&quot;,&quot;69&quot;) citi=c(&quot;9&quot;,&quot;20&quot;,&quot;21&quot;,&quot;32&quot;,&quot;35&quot;,&quot;50&quot;) mvr=MVR %&gt;% filter(vgr&gt;0&amp;vgr&lt;=5) %&gt;% mutate(priezu_kk=if_else(s10 %in% priedes,k10,0)+if_else(s11 %in% priedes,k11,0)+ if_else(s12 %in% priedes,k12,0)+if_else(s13 %in% priedes,k13,0)+ if_else(s14 %in% priedes,k14,0), eglu_kk=if_else(s10 %in% egles,k10,0)+if_else(s11 %in% egles,k11,0)+ if_else(s12 %in% egles,k12,0)+if_else(s13 %in% egles,k13,0)+ if_else(s14 %in% egles,k14,0), apsu_kk=if_else(s10 %in% apses,k10,0)+if_else(s11 %in% apses,k11,0)+ if_else(s12 %in% apses,k12,0)+if_else(s13 %in% apses,k13,0)+ if_else(s14 %in% apses,k14,0), berzu_kk=if_else(s10 %in% berzi,k10,0)+if_else(s11 %in% berzi,k11,0)+ if_else(s12 %in% berzi,k12,0)+if_else(s13 %in% berzi,k13,0)+ if_else(s14 %in% berzi,k14,0), melnalksna_kk=if_else(s10 %in% melnalksni,k10,0)+ if_else(s11 %in% melnalksni,k11,0)+if_else(s12 %in% melnalksni,k12,0)+ if_else(s13 %in% melnalksni,k13,0)+if_else(s14 %in% melnalksni,k14,0), platlapju_kk=if_else(s10 %in% platlapji,k10,0)+ if_else(s11 %in% platlapji,k11,0)+if_else(s12 %in% platlapji,k12,0)+ if_else(s13 %in% platlapji,k13,0)+if_else(s14 %in% platlapji,k14,0), citu_kk=if_else(s10 %in% citi,k10,0)+if_else(s11 %in% citi,k11,0)+ if_else(s12 %in% citi,k12,0)+if_else(s13 %in% citi,k13,0)+ if_else(s14 %in% citi,k14,0)) %&gt;% mutate(sugai=if_else(priezu_kk==10,&quot;priedes&quot;, if_else(eglu_kk==10,&quot;egles&quot;, if_else(apsu_kk==10,&quot;apses&quot;, if_else(berzu_kk==10,&quot;berzi&quot;, if_else(melnalksna_kk==10,&quot;melnalksnis&quot;, if_else(platlapju_kk&gt;=8,&quot;platlapji&quot;, &quot;citi&quot;))))))) %&gt;% mutate(vecumgrupas=factor(if_else(vgr==1,&quot;jaunaudze&quot;, if_else(vgr==2,&quot;vidēja vecuma&quot;, if_else(vgr==3,&quot;briestaudze&quot;, if_else(vgr==4,&quot;pieaugusi audze&quot;, &quot;pāraugusi audze&quot;)))), ordered=TRUE,levels=c(&quot;jaunaudze&quot;,&quot;vidēja vecuma&quot;, &quot;briestaudze&quot;,&quot;pieaugusi audze&quot;, &quot;pāraugusi audze&quot;))) %&gt;% mutate(suga_vgr=paste0(sugai,&quot;_&quot;,vgr)) %&gt;% select(sugai,vecumgrupas,suga_vgr,a10,h10,priezu_kk:citu_kk) # DW AprAug &lt;- rast(&quot;./DW_2023_apraug.tif&quot;) AprJul &lt;- rast(&quot;./DW_2023_aprjul.tif&quot;) AprJun &lt;- rast(&quot;./DW_2023_aprjun.tif&quot;) AprMay &lt;- rast(&quot;./DW_2023_aprmay.tif&quot;) JulAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunJul &lt;- rast(&quot;./DW_2023_junjul.tif&quot;) MayAug &lt;- rast(&quot;./DW_2023_mayaug.tif&quot;) MayJul &lt;- rast(&quot;./DW_2023_mayjul.tif&quot;) MayJun &lt;- rast(&quot;./DW_2023_mayjun.tif&quot;) # utility darbiba &lt;- function(raster, vector, period) { exact_extract(raster, vector, function(value, coverage_fraction) { data.frame(value = value, frac = coverage_fraction / sum(coverage_fraction, na.rm = TRUE)) %&gt;% group_by(value) %&gt;% summarize(freq = sum(frac, na.rm = TRUE), .groups = &#39;drop&#39;) %&gt;% pivot_wider(names_from = &#39;value&#39;, names_prefix = &#39;freq_&#39;, values_from = &#39;freq&#39;) }) %&gt;% mutate(across(starts_with(&#39;freq&#39;), ~replace_na(., 0))) %&gt;% mutate(periods = period) } # DW extraction kodi=data.frame(kods=levels(factor(mvr$suga_vgr))) dati=mvr[1,] for (i in 1:length(kodi$kods)){ kods=kodi$kods[i] set.seed(0) vietas &lt;- mvr %&gt;% filter(suga_vgr == kods) if (nrow(vietas) &lt; 999) {rand_locs &lt;- vietas} else {rand_locs &lt;- vietas %&gt;% sample_n(999)} rand_locs &lt;- rand_locs %&gt;% mutate(id = row_number()) a=cbind(rand_locs,darbiba(AprAug, rand_locs, &quot;AprAug&quot;)) b=cbind(rand_locs,darbiba(AprJul, rand_locs, &quot;AprJul&quot;)) c=cbind(rand_locs,darbiba(AprJun, rand_locs, &quot;AprJun&quot;)) d=cbind(rand_locs,darbiba(AprMay, rand_locs, &quot;AprMay&quot;)) e=cbind(rand_locs,darbiba(JulAug, rand_locs, &quot;JulAug&quot;)) f=cbind(rand_locs,darbiba(JunAug, rand_locs, &quot;JunAug&quot;)) g=cbind(rand_locs,darbiba(JunJul, rand_locs, &quot;JunJul&quot;)) h=cbind(rand_locs,darbiba(MayAug, rand_locs, &quot;MayAug&quot;)) i=cbind(rand_locs,darbiba(MayJul, rand_locs, &quot;MayJul&quot;)) j=cbind(rand_locs,darbiba(MayJun, rand_locs, &quot;MayJun&quot;)) rez=bind_rows(a,b,c,d,e,f,g,h,i,j) dati &lt;- bind_rows(dati, rez) } dati=dati %&gt;% mutate(water=freq_0, trees=freq_1, grass=freq_2, flooded_vegetation=freq_3, crops=freq_4, shrub_and_scrub=freq_5, built=freq_6, bare=freq_7, snow_and_ice=freq_8) dati_real=dati[-1,] dati_real[is.na(dati_real)]=0 dati_real$area=as.numeric(st_area(dati_real)) dati_real$perimeter=as.numeric(st_perimeter(dati_real)) sfarrow::st_write_parquet(dati_real,&quot;./Q2_mezaudzes.parquet&quot;) # DW klases MVR grupās dati=sfarrow::st_read_parquet(&quot;./Q2_mezaudzes.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) q21data=data.frame(dati) %&gt;% select(sugai:suga_vgr,sezona,water:snow_and_ice) %&gt;% group_by(sugai,vecumgrupas,suga_vgr) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) ggplot(q21data,aes(sezona,proporcija,col=klase))+ facet_grid(vecumgrupas~sugai)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank(), axis.title = element_text(size=14), axis.text=element_text(size=12), legend.text=element_text(size=12), strip.text = element_text(size=11))+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ scale_color_viridis_d()+ labs(x=&quot;Sezona&quot;) ggview(width=400,height=250,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q21.png&quot;,width=400,height=250,units=&quot;mm&quot;,dpi=600) # Augstumi ---- q22data_trees=data.frame(dati) %&gt;% select(sugai,vecumgrupas,suga_vgr,sezona,h10,area,trees) %&gt;% group_by(sugai,sezona,h10) %&gt;% summarise(vid_prop=weighted.mean(x=trees,w=area)) %&gt;% ungroup() ggplot(q22data_trees,aes(h10,vid_prop,col=sezona))+ theme_bw()+ facet_wrap(~sugai,nrow=2)+ geom_point(alpha=0.1)+ geom_smooth(method=&quot;loess&quot;,se=FALSE)+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ labs(x=&quot;Augstums, m&quot;,y=&quot;Ar platību svērtais klases &#39;trees&#39; īpatsvars (%)&quot;,col=&quot;Sezona&quot;)+ theme(axis.title = element_text(size=14), axis.text=element_text(size=12), strip.text = element_text(size=11), legend.title = element_blank(size=14), legend.text=element_text(size=12)) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q22_trees.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.4 Q3: Topogrāfiskās kartes mitrāji Pieejamie topogrāfiskās kartes laukumi ir no 2016. gada vasaras beigu versijas. Līdz 2023. gadam ir sagaidāms, ka var būt notikušas dažādas hidroloģiskās izmaiņas, piemēram meliorācija un meliorācijas sistēmu atjaunošana, kā arī kūdras ieguves vietu paplašināšanās. Tajā pašā laikā, iespējams, arī kādu teritoriju applūšana meliorācijas sistēmu aizsērēšanas (u.tml.) dēļ. Diemžēl 2016. un 2017. gados ir bijušas mākoņainas vasaras kā dēļ plašās valsts daļās nav pieejama Dynamic World klasifikācija. Tuvākais relatīvi labi nosegtais gads ir 2018., kas, protams, ir pēc topogrāfiskās kartes sagatavošanas, tomēr tuvāk par citiem pieejamajiem. Ar mitrājiem saistāmie topogrāfiskās kartes laukumi (lauka FNAME klases): Meldrājs_ūdenī_poligons (n=951); poligons_Grīslājs (n=29811); poligons_Meldrājs (n=9246); poligons_Nec_purvs_grīslājs (n=25); poligons_Nec_purvs_meldrājs (n=142); poligons_Nec_purvs_sūnājs (n=103); poligons_Sūnājs (n=5136). Zemāk esošajā attēlā 5.22 ir raksturoša šo topogrāfiskās kartes klašu klasifikācijas sarežģītība. Lielākā daļa “poligons_Sūnājs” ir atpazīta kā “shrub_and_scrub”, kas ir ļautu korekti izdalīt augstos purvus un arī pēc biežuma sekojošās klases “trees” un “grass” ir saprotams, jo augstajos purvos var būt vietas ar lielāku koku augstumu un sastopamību un lāmu rajoni, kuros ir ar lakstaugiem bagātāka veģetācija. Līdzīgi varētu domāt par “poligons_Nec_purvs_sūnājs”. Tomēr meldrāju un grīslāju klases pārspīlēti bieži ir klasificējušās kā “trees”. Ja daļā dadījumu tas noteikti ir korketi, lielākoties tomēr tā nav - var izteikt pieņēmumu, ka jebkura augumā augstāka lakstaugu veģetācija klasificējusies par kokiem, kas daļēji sakrīt ar LAD kultūru izpēti. Figure 5.22: Topogrāfiskās kartes mitrāju plankumu saistība ar DW klasēm. Komandu rindas attēlu sagatavošanas un veiktās analīzes reproducēšanai (tiek izmantoti LĢIA topogrāfiskā karte dati): # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)) {install.packages(&quot;exactextractr&quot;); require(exactextractr)} if(!require(ggview)) {install.packages(&quot;ggview&quot;); require(ggview)} if(!require(readxl)) {install.packages(&quot;readxl&quot;); require(readxl)} if(!require(ggrepel)) {install.packages(&quot;ggrepel&quot;); require(ggrepel)} # topogrāfiskās kartes dati topo=sfarrow::st_read_parquet(&quot;./Topo_landus_A.parquet&quot;) mitraji=topo %&gt;% filter(FNAME %in% c(&quot;Meldrājs_ūdenī_poligons&quot;,&quot;poligons_Grīslājs&quot;, &quot;poligons_Meldrājs&quot;,&quot;poligons_Nec_purvs_grīslājs&quot;, &quot;poligons_Nec_purvs_meldrājs&quot;,&quot;poligons_Nec_purvs_sūnājs&quot;, &quot;poligons_Sūnājs&quot;)) # DW AprAug &lt;- rast(&quot;./DW_2023_apraug.tif&quot;) AprJul &lt;- rast(&quot;./DW_2023_aprjul.tif&quot;) AprJun &lt;- rast(&quot;./DW_2023_aprjun.tif&quot;) AprMay &lt;- rast(&quot;./DW_2023_aprmay.tif&quot;) JulAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunJul &lt;- rast(&quot;./DW_2023_junjul.tif&quot;) MayAug &lt;- rast(&quot;./DW_2023_mayaug.tif&quot;) MayJul &lt;- rast(&quot;./DW_2023_mayjul.tif&quot;) MayJun &lt;- rast(&quot;./DW_2023_mayjun.tif&quot;) # utility darbiba &lt;- function(raster, vector, period) { exact_extract(raster, vector, function(value, coverage_fraction) { data.frame(value = value, frac = coverage_fraction / sum(coverage_fraction, na.rm = TRUE)) %&gt;% group_by(value) %&gt;% summarize(freq = sum(frac, na.rm = TRUE), .groups = &#39;drop&#39;) %&gt;% pivot_wider(names_from = &#39;value&#39;, names_prefix = &#39;freq_&#39;, values_from = &#39;freq&#39;) }) %&gt;% mutate(across(starts_with(&#39;freq&#39;), ~replace_na(., 0))) %&gt;% mutate(periods = period) } # DW extraction kodi=data.frame(kods=levels(factor(mitraji$FNAME))) dati=mitraji[1,] for (i in 1:length(kodi$kods)){ kods=kodi$kods[i] set.seed(0) vietas &lt;- mitraji %&gt;% filter(FNAME == kods) if (nrow(vietas) &lt; 999) {rand_locs &lt;- vietas} else {rand_locs &lt;- vietas %&gt;% sample_n(999)} rand_locs &lt;- rand_locs %&gt;% mutate(id = row_number()) a=cbind(rand_locs,darbiba(AprAug, rand_locs, &quot;AprAug&quot;)) b=cbind(rand_locs,darbiba(AprJul, rand_locs, &quot;AprJul&quot;)) c=cbind(rand_locs,darbiba(AprJun, rand_locs, &quot;AprJun&quot;)) d=cbind(rand_locs,darbiba(AprMay, rand_locs, &quot;AprMay&quot;)) e=cbind(rand_locs,darbiba(JulAug, rand_locs, &quot;JulAug&quot;)) f=cbind(rand_locs,darbiba(JunAug, rand_locs, &quot;JunAug&quot;)) g=cbind(rand_locs,darbiba(JunJul, rand_locs, &quot;JunJul&quot;)) h=cbind(rand_locs,darbiba(MayAug, rand_locs, &quot;MayAug&quot;)) i=cbind(rand_locs,darbiba(MayJul, rand_locs, &quot;MayJul&quot;)) j=cbind(rand_locs,darbiba(MayJun, rand_locs, &quot;MayJun&quot;)) rez=bind_rows(a,b,c,d,e,f,g,h,i,j) dati &lt;- bind_rows(dati, rez) } dati=dati %&gt;% mutate(water=freq_0, trees=freq_1, grass=freq_2, flooded_vegetation=freq_3, crops=freq_4, shrub_and_scrub=freq_5, built=freq_6, bare=freq_7, snow_and_ice=freq_8) dati_real=dati[-1,] dati_real[is.na(dati_real)]=0 dati_real$area=as.numeric(st_area(dati_real)) dati_real$perimeter=as.numeric(st_perimeter(dati_real)) sfarrow::st_write_parquet(dati_real,&quot;./Q3_TopoMitraji.parquet&quot;) dati=sfarrow::st_read_parquet(&quot;./Q3_TopoMitraji.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) q31data=data.frame(dati) %&gt;% select(FNAME,sezona,water:snow_and_ice) %&gt;% group_by(FNAME) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q31_props=data.frame(dati) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) %&gt;% filter(klase %in% c(&quot;flooded_vegetation&quot;,&quot;grass&quot;,&quot;shrub_and_scrub&quot;,&quot;trees&quot;)) %&gt;% group_by(FNAME,sezona,klase) %&gt;% summarise(proporcija=round(weighted.mean(proporcija,area)*100,0)) %&gt;% ungroup() ggplot(q31data,aes(sezona,proporcija,col=klase))+ facet_wrap(~FNAME,nrow=2)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ geom_text(data=q31_props[q31_props$klase==&quot;flooded_vegetation&quot;,], aes(sezona,y=1.25,label=proporcija),size=3)+ geom_text(data=q31_props[q31_props$klase==&quot;grass&quot;,], aes(sezona,y=1.2,label=proporcija),size=3)+ geom_text(data=q31_props[q31_props$klase==&quot;shrub_and_scrub&quot;,], aes(sezona,y=1.15,label=proporcija),size=3)+ geom_text(data=q31_props[q31_props$klase==&quot;trees&quot;,], aes(sezona,y=1.1,label=proporcija),size=3)+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank(), axis.title = element_text(size=14), axis.text=element_text(size=12), legend.text=element_text(size=12), strip.text = element_text(size=11))+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ scale_color_viridis_d()+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=200,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q31.png&quot;,width=300,height=200,units=&quot;mm&quot;,dpi=600) 5.5 Q4: Karjeri, kūdras ieguves vietas un ceļi Arī šeit izmantojām 2018. gada DW rezultātus. Ceļu gadījumā, protams, ir lielas pārmaiņas, jo sevišķi LVM apsaimniekotajās zemēs, bet šajā izpētes līmeni būs pietiekoši tikai ar topogrāfiskās kartes datiem. Izmantotas slāņa LandUse laukumi (lyr=“landus_A”) klases: poligons_Grants (n=5); poligons_Kūdra (n=1227); poligons_Smiltājs (n=885). Ceļu laukumi (lyr=“road_A”) - ir trīs grupas, tās arī izpētījām. Itkā jau ir arī līniju slāņi ar smalkākām kategorijām, bet laukuma ģeometrijas labāk iederas šajā analīzē. Ceļi ir samērā šauri objekti un DW tiecās tos nepamanīt - sekojošajā attēlā 5.23 augšējā rindā klašu sadalījums lielā mērā atspoguļo piegulošās teritorijas. Tas nozīmē, ka bez ārējas informācijas par ceļiem iztikt nevarēs. Attiecībā uz liedagiem un dažādiem karjeriem (kūdras, grants, smilšu u.tml.), situācija ir nedaudz labāka - visur, kur ir kaut vai skraja veģetācija, tā dominē pār ar atklātu augsni saistāmo klasi. Pats par sevi tas nav nekas pārsteidzošs, tomēr, veidojot ekoģeogrāfiskos mainīgos tas jāņem vērā un ir jābūt piesardzīgiem analīžu rezultātu interpretācijā. Figure 5.23: Topogrāfiskās kartes atklātās augsnes un ceļu plankumu saistība ar DW klasēm. Komandu rindas attēlu sagatavošanas un veiktās analīzes reproducēšanai (tiek izmantoti LĢIA topogrāfiskā karte dati): # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)) {install.packages(&quot;exactextractr&quot;); require(exactextractr)} if(!require(ggview)) {install.packages(&quot;ggview&quot;); require(ggview)} if(!require(readxl)) {install.packages(&quot;readxl&quot;); require(readxl)} if(!require(ggrepel)) {install.packages(&quot;ggrepel&quot;); require(ggrepel)} # topogrāfiskās kartes dati topo=sfarrow::st_read_parquet(&quot;./Topo_landus_A.parquet&quot;) atvertie=topo %&gt;% filter(FNAME %in% c(&quot;poligons_Grants&quot;,&quot;poligons_Kūdra&quot;,&quot;poligons_Smiltājs&quot;)) celi=sfarrow::st_read_parquet(&quot;./Topo_road_A.parquet&quot;) abi=rbind(atvertie,celi) # DW AprAug &lt;- rast(&quot;./DW_2023_apraug.tif&quot;) AprJul &lt;- rast(&quot;./DW_2023_aprjul.tif&quot;) AprJun &lt;- rast(&quot;./DW_2023_aprjun.tif&quot;) AprMay &lt;- rast(&quot;./DW_2023_aprmay.tif&quot;) JulAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunJul &lt;- rast(&quot;./DW_2023_junjul.tif&quot;) MayAug &lt;- rast(&quot;./DW_2023_mayaug.tif&quot;) MayJul &lt;- rast(&quot;./DW_2023_mayjul.tif&quot;) MayJun &lt;- rast(&quot;./DW_2023_mayjun.tif&quot;) # utility darbiba &lt;- function(raster, vector, period) { exact_extract(raster, vector, function(value, coverage_fraction) { data.frame(value = value, frac = coverage_fraction / sum(coverage_fraction, na.rm = TRUE)) %&gt;% group_by(value) %&gt;% summarize(freq = sum(frac, na.rm = TRUE), .groups = &#39;drop&#39;) %&gt;% pivot_wider(names_from = &#39;value&#39;, names_prefix = &#39;freq_&#39;, values_from = &#39;freq&#39;) }) %&gt;% mutate(across(starts_with(&#39;freq&#39;), ~replace_na(., 0))) %&gt;% mutate(periods = period) } # DW extraction kodi=data.frame(kods=levels(factor(abi$FNAME))) dati=abi[1,] for (i in 1:length(kodi$kods)){ kods=kodi$kods[i] set.seed(0) vietas &lt;- abi %&gt;% filter(FNAME == kods) if (nrow(vietas) &lt; 999) {rand_locs &lt;- vietas} else {rand_locs &lt;- vietas %&gt;% sample_n(999)} rand_locs &lt;- rand_locs %&gt;% mutate(id = row_number()) a=cbind(rand_locs,darbiba(AprAug, rand_locs, &quot;AprAug&quot;)) b=cbind(rand_locs,darbiba(AprJul, rand_locs, &quot;AprJul&quot;)) c=cbind(rand_locs,darbiba(AprJun, rand_locs, &quot;AprJun&quot;)) d=cbind(rand_locs,darbiba(AprMay, rand_locs, &quot;AprMay&quot;)) e=cbind(rand_locs,darbiba(JulAug, rand_locs, &quot;JulAug&quot;)) f=cbind(rand_locs,darbiba(JunAug, rand_locs, &quot;JunAug&quot;)) g=cbind(rand_locs,darbiba(JunJul, rand_locs, &quot;JunJul&quot;)) h=cbind(rand_locs,darbiba(MayAug, rand_locs, &quot;MayAug&quot;)) i=cbind(rand_locs,darbiba(MayJul, rand_locs, &quot;MayJul&quot;)) j=cbind(rand_locs,darbiba(MayJun, rand_locs, &quot;MayJun&quot;)) rez=bind_rows(a,b,c,d,e,f,g,h,i,j) dati &lt;- bind_rows(dati, rez) } dati=dati %&gt;% mutate(water=freq_0, trees=freq_1, grass=freq_2, flooded_vegetation=freq_3, crops=freq_4, shrub_and_scrub=freq_5, built=freq_6, bare=freq_7, snow_and_ice=freq_8) dati_real=dati[-1,] dati_real[is.na(dati_real)]=0 dati_real$area=as.numeric(st_area(dati_real)) dati_real$perimeter=as.numeric(st_perimeter(dati_real)) sfarrow::st_write_parquet(dati_real,&quot;./Q4_TopoAtvertie.parquet&quot;) dati=sfarrow::st_read_parquet(&quot;./Q4_TopoAtvertie.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) q41data=data.frame(dati) %&gt;% select(FNAME,sezona,water:snow_and_ice) %&gt;% group_by(FNAME) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q41_props=data.frame(dati) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) %&gt;% filter(klase %in% c(&quot;bare&quot;,&quot;built&quot;,&quot;crops&quot;,&quot;grass&quot;,&quot;shrub_and_scrub&quot;)) %&gt;% group_by(FNAME,sezona,klase) %&gt;% summarise(proporcija=round(weighted.mean(proporcija,area)*100,0)) %&gt;% ungroup() ggplot(q41data,aes(sezona,proporcija,col=klase))+ facet_wrap(~FNAME,nrow=2)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ geom_text(data=q41_props[q41_props$klase==&quot;bare&quot;,], aes(sezona,y=1.25,label=proporcija),size=3)+ geom_text(data=q41_props[q41_props$klase==&quot;built&quot;,], aes(sezona,y=1.2,label=proporcija),size=3)+ geom_text(data=q41_props[q41_props$klase==&quot;crops&quot;,], aes(sezona,y=1.15,label=proporcija),size=3)+ geom_text(data=q41_props[q41_props$klase==&quot;grass&quot;,], aes(sezona,y=1.1,label=proporcija),size=3)+ geom_text(data=q41_props[q41_props$klase==&quot;shrub_and_scrub&quot;,], aes(sezona,y=1.05,label=proporcija),size=3)+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank(), axis.title = element_text(size=14), axis.text=element_text(size=12), legend.text=element_text(size=12), strip.text = element_text(size=11))+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ scale_color_viridis_d()+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=200,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q41.png&quot;,width=300,height=200,units=&quot;mm&quot;,dpi=600) 5.6 Q5: Izcirtuma izmērs un forma Šo aplūkojām divās daļās: nesen veidoti izcirtumi, papētot dažādus ciršanas veidus; senāki izcirtumi, bet tikai kailcirtes, lai labāk saprastu pārmaiņas. Visos gadījumos salīdzinājumi pret 2023. gada DW slāņiem. 5.6.1 Q5.1: 2022. gada izcirtumi Tā kā mums ir 2024.gada janvāra MVR, bet 2023. gadā reģistrēta pēdējā ciršana var būt jebkad 2023. gadā notikusi, par kritēriju izmantoju pēdējo ciršanu (p_cirg) 2022. gadā. Šāda atlase rada visai lielu burzmu ar dažādiem pēdējās ciršanas paņēmieniem (p_cirp), tādēļ atlasi papildinu arī ar kritēriju, ka pēdējais ciršanas paņēmiens ir: kailcirte (p_cirp==“11”; n=28878); kailcirte pēc caurmēra (p_cirp==“17”; n=5051); cirte pēc VMD sanitārā atzinuma (p_cirp==“31”; n=2741); atmežošanas cirte (p_cirp==“81”; n=304). Meža nogabalos, kuriem zemes kategorija ir izcirtums, biežāk reģistrētā klase ir “trees” (5.24 att.). Figure 5.24: 2023. gada DW klases dažādos 2022. gada izcirtumos. Līdzīgi kā iepriekš, šīs klases uzpūstās vērtības ir saistītas ar blakus esošajiem nogabaliem (uz ko norāda pozitīvā perimetra-laukuma attiecība), saglabāto koku efektiem un paša nogabala izmēru (5.25 att.). Figure 5.25: Ar platību svērtā 2023. gada DW klases “koki” sastapšanas varbūtība dažādos 2022. gada izcirtumos, atkarībā no to perimetra-laukuma attiecības. Zemāk esošais attēls (5.26 att.) demonstrē precīzāku klasifikāciju lielākiem nogabaliem. Figure 5.26: Ar platību svērtā 2023. gada DW klases “koki” sastapšanas varbūtība dažādos 2022. gada izcirtumos, atkarībā no to platības. Komandu rindas attēlu sagatavošanas un veiktās analīzes reproducēšanai (tiek izmantoti Meža Valsts reģistrs dati): # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)) {install.packages(&quot;exactextractr&quot;); require(exactextractr)} if(!require(ggview)) {install.packages(&quot;ggview&quot;); require(ggview)} if(!require(readxl)) {install.packages(&quot;readxl&quot;); require(readxl)} if(!require(ggrepel)) {install.packages(&quot;ggrepel&quot;); require(ggrepel)} # meža dati MVR &lt;- st_read_parquet(&quot;./IevadesDati/MVR/nogabali_2024janv.parquet&quot;) mvr=MVR %&gt;% filter(zkat==&quot;14&quot;&amp;(p_cirp==&quot;11&quot;|p_cirp==&quot;17&quot;|p_cirp==&quot;31&quot;|p_cirp==&quot;81&quot;)&amp;p_cirg==2021) # DW AprAug &lt;- rast(&quot;./DW_2023_apraug.tif&quot;) AprJul &lt;- rast(&quot;./DW_2023_aprjul.tif&quot;) AprJun &lt;- rast(&quot;./DW_2023_aprjun.tif&quot;) AprMay &lt;- rast(&quot;./DW_2023_aprmay.tif&quot;) JulAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunJul &lt;- rast(&quot;./DW_2023_junjul.tif&quot;) MayAug &lt;- rast(&quot;./DW_2023_mayaug.tif&quot;) MayJul &lt;- rast(&quot;./DW_2023_mayjul.tif&quot;) MayJun &lt;- rast(&quot;./DW_2023_mayjun.tif&quot;) # utility darbiba &lt;- function(raster, vector, period) { exact_extract(raster, vector, function(value, coverage_fraction) { data.frame(value = value, frac = coverage_fraction / sum(coverage_fraction, na.rm = TRUE)) %&gt;% group_by(value) %&gt;% summarize(freq = sum(frac, na.rm = TRUE), .groups = &#39;drop&#39;) %&gt;% pivot_wider(names_from = &#39;value&#39;, names_prefix = &#39;freq_&#39;, values_from = &#39;freq&#39;) }) %&gt;% mutate(across(starts_with(&#39;freq&#39;), ~replace_na(., 0))) %&gt;% mutate(periods = period) } # DW extraction kodi=data.frame(kods=levels(factor(mvr$p_cirp))) dati=mvr[1,] for (i in 1:length(kodi$kods)){ kods=kodi$kods[i] print(kods) set.seed(0) vietas &lt;- mvr %&gt;% filter(p_cirp == kods) if (nrow(vietas) &lt; 999) {rand_locs &lt;- vietas} else {rand_locs &lt;- vietas %&gt;% sample_n(999)} rand_locs &lt;- rand_locs %&gt;% mutate(id = row_number()) a=cbind(rand_locs,darbiba(AprAug, rand_locs, &quot;AprAug&quot;)) b=cbind(rand_locs,darbiba(AprJul, rand_locs, &quot;AprJul&quot;)) c=cbind(rand_locs,darbiba(AprJun, rand_locs, &quot;AprJun&quot;)) d=cbind(rand_locs,darbiba(AprMay, rand_locs, &quot;AprMay&quot;)) e=cbind(rand_locs,darbiba(JulAug, rand_locs, &quot;JulAug&quot;)) f=cbind(rand_locs,darbiba(JunAug, rand_locs, &quot;JunAug&quot;)) g=cbind(rand_locs,darbiba(JunJul, rand_locs, &quot;JunJul&quot;)) h=cbind(rand_locs,darbiba(MayAug, rand_locs, &quot;MayAug&quot;)) i=cbind(rand_locs,darbiba(MayJul, rand_locs, &quot;MayJul&quot;)) j=cbind(rand_locs,darbiba(MayJun, rand_locs, &quot;MayJun&quot;)) rez=bind_rows(a,b,c,d,e,f,g,h,i,j) dati &lt;- bind_rows(dati, rez) } dati=dati %&gt;% mutate(water=freq_0, trees=freq_1, grass=freq_2, flooded_vegetation=freq_3, crops=freq_4, shrub_and_scrub=freq_5, built=freq_6, bare=freq_7, snow_and_ice=freq_8) dati_real=dati[-1,] dati_real[is.na(dati_real)]=0 dati_real$area=as.numeric(st_area(dati_real)) dati_real$perimeter=as.numeric(st_perimeter(dati_real)) sfarrow::st_write_parquet(dati_real,&quot;./Q51_Izcirtumi.parquet&quot;) dati=sfarrow::st_read_parquet(&quot;./Q51_Izcirtumi.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) %&gt;% mutate(veids=if_else(p_cirp==&quot;11&quot;,&quot;kailcirte&quot;, if_else(p_cirp==&quot;17&quot;,&quot;kailcirte pēc caurmēra&quot;, if_else(p_cirp==&quot;31&quot;,&quot;cirte pēc\\nVMD sanitārā atzinuma&quot;, if_else(p_cirp==&quot;81&quot;,&quot;atmežošanas cirte&quot;,&quot;draza&quot;))))) q51data=data.frame(dati) %&gt;% select(veids,sezona,water:snow_and_ice) %&gt;% group_by(veids) %&gt;% mutate(skaits=n()/10) %&gt;% ungroup() %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;, values_to = &quot;proporcija&quot;) q51_props=data.frame(dati) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;, values_to = &quot;proporcija&quot;) %&gt;% filter(klase %in% c(&quot;crops&quot;,&quot;grass&quot;,&quot;shrub_and_scrub&quot;,&quot;trees&quot;)) %&gt;% group_by(veids,sezona,klase) %&gt;% summarise(proporcija=round(weighted.mean(proporcija,area)*100,0)) %&gt;% ungroup() ggplot(q51data,aes(sezona,proporcija,col=klase))+ facet_wrap(~veids,nrow=2)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ geom_text(data=q51_props[q51_props$klase==&quot;crops&quot;,], aes(sezona,y=1.2,label=proporcija),size=3)+ geom_text(data=q51_props[q51_props$klase==&quot;grass&quot;,], aes(sezona,y=1.15,label=proporcija),size=3)+ geom_text(data=q51_props[q51_props$klase==&quot;shrub_and_scrub&quot;,], aes(sezona,y=1.1,label=proporcija),size=3)+ geom_text(data=q51_props[q51_props$klase==&quot;trees&quot;,], aes(sezona,y=1.05,label=proporcija),size=3)+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank(), axis.title = element_text(size=14), axis.text=element_text(size=12), legend.text=element_text(size=12), strip.text = element_text(size=11))+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ scale_color_viridis_d()+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=250,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q51.png&quot;,width=300,height=250,units=&quot;mm&quot;,dpi=600) q51b=data.frame(dati) %&gt;% select(veids,sezona,trees,perimeter,area) %&gt;% mutate(PAr=round(perimeter/area,3)) %&gt;% group_by(veids,sezona,PAr) %&gt;% summarise(propocija=weighted.mean(trees,area)) ggplot(q51b,aes(PAr,propocija,col=sezona))+ facet_wrap(~veids,nrow=2)+ geom_point(alpha=0.1)+ geom_smooth(method=&quot;loess&quot;,se=FALSE)+ theme_bw()+ theme(legend.title = element_blank(), axis.title = element_text(size=14), axis.text=element_text(size=12), legend.text=element_text(size=12), strip.text = element_text(size=11))+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ scale_color_viridis_d()+ labs(x=&quot;Perimetra-laukuma attiecība&quot;, y=&quot;Ar laukumu svērtā vidējā proporcija (%) klasei &#39;trees&#39;&quot;)+ coord_cartesian(xlim=c(0,0.25)) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q51b.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) q51c=data.frame(dati) %&gt;% select(veids,sezona,trees,perimeter,area) %&gt;% group_by(veids,sezona,area) %&gt;% mutate(proporcija=weighted.mean(trees,area)) ggplot(q51c,aes(area,proporcija,col=sezona))+ geom_point(alpha=0.1)+ geom_smooth(method=&quot;loess&quot;,se=FALSE)+ facet_wrap(~veids,nrow=2)+ theme_bw()+ theme(legend.title = element_blank(), axis.title = element_text(size=14), axis.text=element_text(size=12), legend.text=element_text(size=12), strip.text = element_text(size=11))+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ scale_color_viridis_d()+ labs(x=expression(paste(&quot;Platība, &quot;,m^2)),y=&quot;Proporcija (%) klasei &#39;trees&#39;&quot;)+ coord_cartesian(xlim=c(0,75000)) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q51c.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.6.2 Q5.2: senākas kailcirtes, bet vēl joprojām izcirtumi Nogabali, kuros pēdējā ciršana ir kailcirtē (p_cirp==“11”) un pēdējās darbības veids ir koku ciršana (p_darbv==“1”) ar nejaušu izlozi nogabaliem kopš 2013. gada, kad ik gadu ir vismaz 300 nogabali. Šīs analīzes rezultāti (5.27 att.) saistās ar iepriekšējām - ir izteikti malas efekti, kur blakus esošās mežaudzes ietekmē izpētes audžu klasifikācijas rezultātu un pārspīlētā koku sastopamība, kas ir izpaudusies jau vairākkārt - tikko mežaudzēs ir vismaz 0.1 m augsti kokaugi vai sastopamie augstie lakstaugi, tās klasificētas kā ‘trees’. Augstā koku sastopamība šo resursu padara par otršķirīgu vidi raksturojošu ekoģeogrāfisko mainīgo sagatavošanā. Tomēr vides pārmaiņu analīzē (novērojumu atlasē) to varētu lietot, lai samazinātu (bet ne pilnībā izskaustu) novērojumus vietās, kurās notikušas vides pārmaiņas. Figure 5.27: Ar platību svērtā 2023. gada DW klašu sastopamība kopš 2013. gada veiktās kailcirtēs. Komandu rindas attēlu sagatavošanas un veiktās analīzes reproducēšanai (tiek izmantoti Meža Valsts reģistrs dati): # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)) {install.packages(&quot;exactextractr&quot;); require(exactextractr)} if(!require(ggview)) {install.packages(&quot;ggview&quot;); require(ggview)} if(!require(readxl)) {install.packages(&quot;readxl&quot;); require(readxl)} if(!require(ggrepel)) {install.packages(&quot;ggrepel&quot;); require(ggrepel)} # meža dati MVR &lt;- st_read_parquet(&quot;./IevadesDati/MVR/nogabali_2024janv.parquet&quot;) mvr=MVR %&gt;% filter(p_cirp==&quot;11&quot;&amp;p_cirg&gt;=2013&amp;p_darbv==&quot;1&quot;) %&gt;% mutate(p_cirg=as.character(p_cirg)) # DW AprAug &lt;- rast(&quot;./DW_2023_apraug.tif&quot;) AprJul &lt;- rast(&quot;./DW_2023_aprjul.tif&quot;) AprJun &lt;- rast(&quot;./DW_2023_aprjun.tif&quot;) AprMay &lt;- rast(&quot;./DW_2023_aprmay.tif&quot;) JulAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunJul &lt;- rast(&quot;./DW_2023_junjul.tif&quot;) MayAug &lt;- rast(&quot;./DW_2023_mayaug.tif&quot;) MayJul &lt;- rast(&quot;./DW_2023_mayjul.tif&quot;) MayJun &lt;- rast(&quot;./DW_2023_mayjun.tif&quot;) # utility darbiba &lt;- function(raster, vector, period) { exact_extract(raster, vector, function(value, coverage_fraction) { data.frame(value = value, frac = coverage_fraction / sum(coverage_fraction, na.rm = TRUE)) %&gt;% group_by(value) %&gt;% summarize(freq = sum(frac, na.rm = TRUE), .groups = &#39;drop&#39;) %&gt;% pivot_wider(names_from = &#39;value&#39;, names_prefix = &#39;freq_&#39;, values_from = &#39;freq&#39;) }) %&gt;% mutate(across(starts_with(&#39;freq&#39;), ~replace_na(., 0))) %&gt;% mutate(periods = period) } # DW extraction kodi=data.frame(kods=levels(factor(mvr$p_cirg))) dati=mvr[1,] for (i in 1:length(kodi$kods)){ kods=kodi$kods[i] set.seed(0) vietas &lt;- mvr %&gt;% filter(p_cirg == kods) if (nrow(vietas) &lt; 999) {rand_locs &lt;- vietas} else {rand_locs &lt;- vietas %&gt;% sample_n(999)} rand_locs &lt;- rand_locs %&gt;% mutate(id = row_number()) a=cbind(rand_locs,darbiba(AprAug, rand_locs, &quot;AprAug&quot;)) b=cbind(rand_locs,darbiba(AprJul, rand_locs, &quot;AprJul&quot;)) c=cbind(rand_locs,darbiba(AprJun, rand_locs, &quot;AprJun&quot;)) d=cbind(rand_locs,darbiba(AprMay, rand_locs, &quot;AprMay&quot;)) e=cbind(rand_locs,darbiba(JulAug, rand_locs, &quot;JulAug&quot;)) f=cbind(rand_locs,darbiba(JunAug, rand_locs, &quot;JunAug&quot;)) g=cbind(rand_locs,darbiba(JunJul, rand_locs, &quot;JunJul&quot;)) h=cbind(rand_locs,darbiba(MayAug, rand_locs, &quot;MayAug&quot;)) i=cbind(rand_locs,darbiba(MayJul, rand_locs, &quot;MayJul&quot;)) j=cbind(rand_locs,darbiba(MayJun, rand_locs, &quot;MayJun&quot;)) rez=bind_rows(a,b,c,d,e,f,g,h,i,j) dati &lt;- bind_rows(dati, rez) } dati=dati %&gt;% mutate(water=freq_0, trees=freq_1, grass=freq_2, flooded_vegetation=freq_3, crops=freq_4, shrub_and_scrub=freq_5, built=freq_6, bare=freq_7, snow_and_ice=freq_8) dati_real=dati[-1,] dati_real[is.na(dati_real)]=0 dati_real$area=as.numeric(st_area(dati_real)) dati_real$perimeter=as.numeric(st_perimeter(dati_real)) sfarrow::st_write_parquet(dati_real,&quot;./Q52_Izcirtumi.parquet&quot;) dati=sfarrow::st_read_parquet(&quot;./Q52_Izcirtumi.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) q52data=data.frame(dati) %&gt;% select(p_cirg,sezona,perimeter,area,water:snow_and_ice) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) q52_props=data.frame(dati) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;,values_to = &quot;proporcija&quot;) %&gt;% filter(klase %in% c(&quot;crops&quot;,&quot;grass&quot;,&quot;shrub_and_scrub&quot;,&quot;trees&quot;)) %&gt;% group_by(p_cirg,sezona,klase) %&gt;% summarise(proporcija=round(weighted.mean(proporcija,area)*100,0)) %&gt;% ungroup() ggplot(q52data,aes(sezona,proporcija,col=klase))+ facet_wrap(~p_cirg,nrow=2)+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ geom_text(data=q52_props[q52_props$klase==&quot;crops&quot;,], aes(sezona,y=1.2,label=proporcija),size=3)+ geom_text(data=q52_props[q52_props$klase==&quot;grass&quot;,], aes(sezona,y=1.15,label=proporcija),size=3)+ geom_text(data=q52_props[q52_props$klase==&quot;shrub_and_scrub&quot;,], aes(sezona,y=1.1,label=proporcija),size=3)+ geom_text(data=q52_props[q52_props$klase==&quot;trees&quot;,], aes(sezona,y=1.05,label=proporcija),size=3)+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank(), axis.title = element_text(size=14), axis.text=element_text(size=12), legend.text=element_text(size=12), strip.text = element_text(size=11))+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ scale_color_viridis_d()+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=200,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q52.png&quot;,width=300,height=200,units=&quot;mm&quot;,dpi=600) 5.7 Q6: Zālāju transformācija uz aramzemēm Projekta komandai nav pieejami 2022. gada LAD lauku informācija, bet ir 2013.-2020. gadu dati. Izmantojām 2017. un 2018. gadu LAD datus, tos atteicinot pret 2018. gada DW sezonālajiem slāņiem. Lauku atlasē izmantojām tos laukus, kuros 2017. gadā bija reģistrēti ilglaicīgie zālāji (PIETEIKTAIS_KULTURAS_KODS==“710”), bet 2018. gadā tam pašam numuram reģistrēts kāds no sekojošajiem: rudzi (PIETEIKTAIS_KULTURAS_KODS==“121”); ziemas mieži (PIETEIKTAIS_KULTURAS_KODS==“132”); ziemas kvieši (PIETEIKTAIS_KULTURAS_KODS==“112”); ziemas tritikāle (PIETEIKTAIS_KULTURAS_KODS==“151”); ziemas rapsis (PIETEIKTAIS_KULTURAS_KODS==“212”); vasaras mieži (PIETEIKTAIS_KULTURAS_KODS==“131”); vasaras kvieši (PIETEIKTAIS_KULTURAS_KODS==“111”); vasaras tritikāle (PIETEIKTAIS_KULTURAS_KODS==“150”); vasaras rapsis (PIETEIKTAIS_KULTURAS_KODS==“211”). Šāda atlase atgriež 2828 laukus. Lai samazinātu malas efektus, atlasījām tikai tos, kuriem laukums ir lielāks par mediānu un perimetra-laukuma attiecība ir mazāka par mediānu - šāda atlase atgriež 1255 laukus, kuri saglabāti analīzei. Atlasītajās vietās izteikti dominē klase ‘crops’ (5.28 att.), kas atspoguļo sagaidāmo rezultātu, apstiprinot iespējas šo resursu izmantot vides pārmaiņu analīzē. Figure 5.28: Ar platību svērtā 2018. gada DW klašu sastopamība 2018. gadā par aramzemēm kļuvušajos ilggadīgajos zālājos. Komandu rindas attēlu sagatavošanas un veiktās analīzes reproducēšanai (tiek izmantoti Meža Valsts reģistrs dati): # libs if(!require(terra)) {install.packages(&quot;terra&quot;); require(terra)} if(!require(tidyverse)) {install.packages(&quot;tidyverse&quot;); require(tidyverse)} if(!require(arrow)) {install.packages(&quot;arrow&quot;); require(arrow)} if(!require(sf)) {install.packages(&quot;sf&quot;); require(sf)} if(!require(sfarrow)) {install.packages(&quot;sfarrow&quot;); require(sfarrow)} if(!require(exactextractr)) {install.packages(&quot;exactextractr&quot;); require(exactextractr)} if(!require(ggview)) {install.packages(&quot;ggview&quot;); require(ggview)} if(!require(readxl)) {install.packages(&quot;readxl&quot;); require(readxl)} if(!require(ggrepel)) {install.packages(&quot;ggrepel&quot;); require(ggrepel)} # lauku dati lauki_old=st_read(&quot;LAUKI_2012-2020.gdb/&quot;,layer=&quot;LRGIS_LAUKI&quot;) lauki_old=lauki_old %&gt;% filter(PIETEIKUMA_GADS==&quot;2017&quot;|PIETEIKUMA_GADS==&quot;2018&quot;) lauki17=lauki_old %&gt;% filter(PIETEIKUMA_GADS==&quot;2017&quot;)%&gt;% filter(PIETEIKTAIS_KULTURAS_KODS==&quot;710&quot;) lauki17_pts=st_centroid(lauki17) lauki18=lauki_old %&gt;% filter(PIETEIKUMA_GADS==&quot;2018&quot;) %&gt;% filter(PIETEIKTAIS_KULTURAS_KODS==&quot;121&quot;| PIETEIKTAIS_KULTURAS_KODS==&quot;132&quot;| PIETEIKTAIS_KULTURAS_KODS==&quot;112&quot;| PIETEIKTAIS_KULTURAS_KODS==&quot;151&quot;| PIETEIKTAIS_KULTURAS_KODS==&quot;212&quot;| PIETEIKTAIS_KULTURAS_KODS==&quot;131&quot;| PIETEIKTAIS_KULTURAS_KODS==&quot;111&quot;| PIETEIKTAIS_KULTURAS_KODS==&quot;150&quot;| PIETEIKTAIS_KULTURAS_KODS==&quot;211&quot;) lauki_parbaudei=lauki18[lauki17_pts,,] lauki_parbaudei$PAr=lauki_parbaudei$SHAPE_Length/lauki_parbaudei$SHAPE_Area lauki_parbaudei2=lauki_parbaudei %&gt;% filter(SHAPE_Area&gt;median(SHAPE_Area)&amp;PAr&lt;median(PAr)) st_write(lauki_parbaudei2,&quot;./zalaju_parmainam.gpkg&quot;) # DW AprAug &lt;- rast(&quot;./DW_2023_apraug.tif&quot;) AprJul &lt;- rast(&quot;./DW_2023_aprjul.tif&quot;) AprJun &lt;- rast(&quot;./DW_2023_aprjun.tif&quot;) AprMay &lt;- rast(&quot;./DW_2023_aprmay.tif&quot;) JulAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunAug &lt;- rast(&quot;./DW_2023_julaug.tif&quot;) JunJul &lt;- rast(&quot;./DW_2023_junjul.tif&quot;) MayAug &lt;- rast(&quot;./DW_2023_mayaug.tif&quot;) MayJul &lt;- rast(&quot;./DW_2023_mayjul.tif&quot;) MayJun &lt;- rast(&quot;./DW_2023_mayjun.tif&quot;) # utility darbiba &lt;- function(raster, vector, period) { exact_extract(raster, vector, function(value, coverage_fraction) { data.frame(value = value, frac = coverage_fraction / sum(coverage_fraction, na.rm = TRUE)) %&gt;% group_by(value) %&gt;% summarize(freq = sum(frac, na.rm = TRUE), .groups = &#39;drop&#39;) %&gt;% pivot_wider(names_from = &#39;value&#39;, names_prefix = &#39;freq_&#39;, values_from = &#39;freq&#39;) }) %&gt;% mutate(across(starts_with(&#39;freq&#39;), ~replace_na(., 0))) %&gt;% mutate(periods = period) } # DW extraction dati=lauki_parbaudei2[1,] rand_locs &lt;- lauki_parbaudei2 %&gt;% mutate(id = row_number()) a=cbind(rand_locs,darbiba(AprAug, rand_locs, &quot;AprAug&quot;)) b=cbind(rand_locs,darbiba(AprJul, rand_locs, &quot;AprJul&quot;)) c=cbind(rand_locs,darbiba(AprJun, rand_locs, &quot;AprJun&quot;)) d=cbind(rand_locs,darbiba(AprMay, rand_locs, &quot;AprMay&quot;)) e=cbind(rand_locs,darbiba(JulAug, rand_locs, &quot;JulAug&quot;)) f=cbind(rand_locs,darbiba(JunAug, rand_locs, &quot;JunAug&quot;)) g=cbind(rand_locs,darbiba(JunJul, rand_locs, &quot;JunJul&quot;)) h=cbind(rand_locs,darbiba(MayAug, rand_locs, &quot;MayAug&quot;)) i=cbind(rand_locs,darbiba(MayJul, rand_locs, &quot;MayJul&quot;)) j=cbind(rand_locs,darbiba(MayJun, rand_locs, &quot;MayJun&quot;)) rez=bind_rows(a,b,c,d,e,f,g,h,i,j) dati &lt;- bind_rows(dati, rez) dati=dati %&gt;% mutate(water=freq_0, trees=freq_1, grass=freq_2, flooded_vegetation=freq_3, crops=freq_4, shrub_and_scrub=freq_5, built=freq_6, bare=freq_7, snow_and_ice=freq_8) dati_real=dati[-1,] dati_real[is.na(dati_real)]=0 dati_real$area=as.numeric(st_area(dati_real)) dati_real$perimeter=as.numeric(st_perimeter(dati_real)) sfarrow::st_write_parquet(dati_real,&quot;./Q6_ZalajuTransformacijas.parquet&quot;) # DW klases pārmaiņu vietās dati=sfarrow::st_read_parquet(&quot;./Q6_ZalajuTransformacijas.parquet&quot;) dati=dati %&gt;% mutate(sezona=factor(periods,ordered=TRUE, levels=c(&quot;AprMay&quot;,&quot;AprJun&quot;,&quot;AprJul&quot;,&quot;AprAug&quot;,&quot;MayJun&quot;, &quot;MayJul&quot;,&quot;MayAug&quot;,&quot;JunJul&quot;,&quot;JunAug&quot;,&quot;JulAug&quot;))) q6data=data.frame(dati) %&gt;% select(sezona,perimeter,area,water:snow_and_ice) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;, values_to = &quot;proporcija&quot;) q6_props=data.frame(dati) %&gt;% pivot_longer(cols=water:snow_and_ice,names_to = &quot;klase&quot;, values_to = &quot;proporcija&quot;) %&gt;% filter(klase %in% c(&quot;crops&quot;,&quot;grass&quot;,&quot;shrub_and_scrub&quot;,&quot;trees&quot;)) %&gt;% group_by(sezona,klase) %&gt;% summarise(proporcija=round(weighted.mean(proporcija,area)*100,0)) %&gt;% ungroup() ggplot(q6data,aes(sezona,proporcija,col=klase))+ geom_point(position=position_dodge(width=0.75),alpha=0.2)+ theme_bw()+ geom_text(data=q6_props[q6_props$klase==&quot;crops&quot;,], aes(sezona,y=1.2,label=proporcija),size=3)+ geom_text(data=q6_props[q6_props$klase==&quot;grass&quot;,], aes(sezona,y=1.15,label=proporcija),size=3)+ geom_text(data=q6_props[q6_props$klase==&quot;shrub_and_scrub&quot;,], aes(sezona,y=1.1,label=proporcija),size=3)+ geom_text(data=q6_props[q6_props$klase==&quot;trees&quot;,], aes(sezona,y=1.05,label=proporcija),size=3)+ theme(axis.text.x = element_text(angle=90,vjust=0.5), axis.title.y = element_blank(), legend.title = element_blank(), axis.title = element_text(size=14), axis.text=element_text(size=12), legend.text=element_text(size=12), strip.text = element_text(size=11))+ scale_y_continuous(labels=scales::label_percent(),breaks=seq(0,1,by=.1))+ scale_color_viridis_d()+ labs(x=&quot;Sezona&quot;) ggview(width=300,height=150,units=&quot;mm&quot;,dpi=600,device=&quot;png&quot;) ggsave(filename=&quot;./pic_q6.png&quot;,width=300,height=150,units=&quot;mm&quot;,dpi=600) 5.8 Secinājumi Kā sagaidāms, DW izteikti pārspīlē vertikāli strukturēto klašu (piemēram, ‘trees’ un ‘built’, kura šajā analīzē nav sevišķi uzsvērta) sastopamību. Sevišķi izteikti tas parādās jaunaudžu un izcirtumu analīzēs. Tas nozīmē, ka, izmantojot tikai šo resursu vides raksturošanai, ir sagaidāma krietns troksnis visiem parametriem, kas saistās ar kokiem. To varētu risināt, pārskatot varbūtību sliekšņus katrai no klasēm, lai optimizētu Latvijas apstākļiem un sugu izplatības modelēšanas mērķim. Tomēr tas pieprasa liela apjoma specifisku analīzi, kas šī darba ietvaros netiks veikta. Mitrāji, kas definēti topogrāfiskajā kartē, visai slikti uzrādās DW, galvenokārt augsto lakstaugu, kas klasificēti kā ‘trees’ dēļ. Tā kā daudzām ar mitrājiem saistītajām sugām koku klātbūtne ir uzskatāma par nozīmīgu negatīvi ietekmējošu mainīgo, paļauties uz DW viltus pozitīvo koku klātbūtni nozīmētu samazināt dzīvotņu piemērotības modeļu skaidrojamību un potenciāli arī projekciju uzticamību. Šo nāksies risināt kombinējot dažādākus slāņus, piemēram Global Forest Watch un PALSAR klasifikāciju informācijai par kokiem - šie resursi un to uzticamība Latvijai ir jau pētīti (piemēram, (Avotiņš, 2019a) un (Avotiņš, 2019b)). Lai gan vides klasifikāciju nevar balstīt tikai DW rezultātos, tie pietiekoši labi demonstrē zālāju transformāciju un vismaz lielāka mēroga koku vainagu seguma izzušanu. Tā kā arī apbūves teritoriju klases sastopamības troksnis ir līdzīgs koku klasei, tas pietiekoši aptver nozīmīgākās pārmaiņas vidē, lai varētu izmantot novērojumu atlasē. Tikai vasaras mēnešu izmantošana sniedz zemāko atbalstu sagaidāmajiem rezultātiem. Nedaudz zemāks atbalsts par pārējām klasēm ir tikai pavasara mēnešiem. Tādēļ pārmaiņu analīzē izmantojama sezona, kas aptver gan pavasara, gan vasaras mēnešus. Tā kā atlikušajos sezonas griezumos Dynamic World rezultātos ir tikai marginālas atšķirības, analīzēm izmantosim Aprīļa-Augusta klašu vidējās varbūtības, jo šis periods sniedz klasifikācijas labāko telpisko pārklājumu (5.1 att.). References Avotiņš, A., 2019a. Apodziņa Glaucidium passerinum, bikšainā apoga Aegolius funereus, meža pūces Strix aluco, urālpūces Strix uralensis, ausainās pūces Asio otus un ūpja Bubo bubo aizsardzības plāns. Latvijas Ornitoloģijas biedrība, Rīga, Latvija. Avotiņš, A., 2019b. Aizsargājamās dabas teritorijas, mežsaimniecības aprobežojumi un Aichi biodaudzveidības mērķi mežos: Trūkumi dabas teritorijās un iespējas valsts līmeņa plānošanā ar dzīvotņu piemērotības modelēšanu, LU 77th International scientific conference. Brown, C.F., Brumby, S.P., Guzder-Williams, B., Birch, T., Hyde, S.B., Mazzariello, J., Czerwinski, W., Pasquarella, V.J., Haertel, R., Ilyushchenko, S., Schwehr, K., Weisse, M., Stolle, F., Hanson, C., Guinan, O., Moore, R., Tait, A.M., 2022. Dynamic World, Near real-time global 10 m land use land cover mapping, Scientific Data. https://doi.org/10.1038/s41597-022-01307-4 Ghassemi, B., Izquierdo-Verdiguier, E., Verhegghen, A., Yordanov, M., Lemoine, G., Martínez, Á.M., Marchi, D.D., Velde, M. van der, Vuolo, F., d’Andrimont, R., 2024. European Union crop map 2022: Earth observation’s 10-meter dive into Europe’s crop tapestry, Scientific Data. https://doi.org/10.1038/s41597-024-03884-y Gorelick, N., Hancher, M., Dixon, M., Ilyushchenko, S., Thau, D., Moore, R., 2017. Google Earth Engine: Planetary-scale geospatial analysis for everyone, Remote Sensing of Environment. https://doi.org/10.1016/j.rse.2017.06.031 Mirmazloumi, S.M., Kakooei, M., Mohseni, F., Ghorbanian, A., Amani, M., Crosetto, M., Monserrat, O., 2022. ELULC-10, a 10 m European land use and land cover map using Sentinel and Landsat data in Google Earth Engine, Remote Sensing. https://doi.org/10.3390/rs14133041 Venter, Z.S., Barton, D.N., Chakraborty, T., Simensen, T., Singh, G., 2022. Global 10 m Land Use Land Cover datasets: A comparison of Dynamic World, World Cover and Esri Land Cover, Remote Sensing. https://doi.org/10.3390/rs14164101 Xu, P., Tsendbazar, N.-E., Herold, M., Bruin, S. de, Koopmans, M., Birch, T., Carter, S., Fritz, S., Lesiv, M., Mazur, E., Pickens, A., Potapov, P., Stolle, F., Tyukavina, A., Kerchove, R.V.D., Zanaga, D., 2024. Comparative validation of recent 10 m-resolution global land cover maps, Remote Sensing of Environment. https://doi.org/10.1016/j.rse.2024.114316 "],["Chapter5.html", "6 Ekoģeogrāfiskie mainīgie 6.1 Reljefs 6.2 Klimats 6.3 Satelītindeksi 6.4 Augsne 6.5 Ceļi 6.6 Eiklīda distances 6.7 Malas 6.8 Ūdeņi 6.9 Lauki 6.10 Meži 6.11 Citi", " 6 Ekoģeogrāfiskie mainīgie Šajā nodaļā apkopoti ekoģeogrāfisko mainīgo apraksti un sniegta pieeja to lejupielādei. Apkopotā formā ar hipersaitēm lejupielādei tā ir pieejama arī šajā tabulā (xlsx). Lai nedaudz atvieglotu pārskatīšanu, EGV grupēti pēc raksturojumu veida un prezentēti apakšnodaļās. 6.1 Reljefs Reljefu raksturojošie un no tā izrietošie EGV. 6.1.1 DiS_area_r500 Faila nosaukums: GeoTIFF pieejamība: RAW centrēts un mērogots EGV nosaukums: EGV apraksts: Izveidošanas gaita un atkarības: Izveidošanas komandu rindas: 6.2 Klimats Klimatu (laika apstākļus) raksturojošie EGV. 6.3 Satelītindeksi Izmantojot Zemes novērošanas sistēmu spektrālos datus sagatavotie EGV. 6.4 Augsne Augsni raksturojošie EGV. 6.5 Ceļi Ceļus raksturojošie EGV. 6.6 Eiklīda distances Attālumu līdz ainavas objektiem raksturojošie EGV. 6.7 Malas Malas (ainavmetrikā) raksturojošie EGV. 6.8 Ūdeņi Ūdeņus raksturojošie EGV. 6.9 Lauki Laukus (lauksaimniecībā izmantojamās zemes) raksturojošie EGV. 6.10 Meži Mežus raksturojošie EGV. 6.11 Citi Pārējie EGV. "],["Chapter6.html", "7 Novērojumu atlase 7.1 Datu avoti 7.2 Nomenklatūra 7.3 Atrašanās Latvijā 7.4 Datums un laiks 7.5 Ligzdošanas pazīmes 7.6 Dublieri 7.7 Novietojums 7.8 Sezonalitāte 7.9 Vides pārmaiņas 7.10 Papildkritēriji 7.11 Ligzdošanas ticamība 7.12 Kvadrātu skaits 7.13 Rezultāti 7.14 Uzticamās klātbūtnes vietas", " 7 Novērojumu atlase Šajā nodaļā raksturota novērojumu apkopošana un filtrēšana modelēšanai. 7.1 Datu avoti Dabasdati.lv OZOLS - tikai daļa, bet jāpaņem no Life for Species Aigars Kalvāns DD&amp;Co Jānis Ķuze Latvijas Dabas Fonds Lediņš-Kalvāns-Jakovļevs Edmunds Račinskis Pūču plāna novērojumi Pūču ligzdošanas vietas Plēšputnu monitoringa ziņas LPU 2023. gada dati Vanagu projekta rezultāti Piekrastes putnu monitorings(!) 7.2 Nomenklatūra Vārdnīcas katrai datu kopai 7.3 Atrašanās Latvijā Pret sapludināto 100 m režģi 7.4 Datums un laiks Kopš 2017. gada Ne ilgāku periodu par 1 mēnesi 7.5 Ligzdošanas pazīmes Uz ligzdošanu attiecināmās pazīmes 7.6 Dublieri Ik datubāzē (arī - ja identifikatoram ir mainījie sugas nosaukums) Starp datubāzēm 7.7 Novietojums Saskaņā ar CLC, izslēdzot droši nepiemēroto vidi 7.8 Sezonalitāte Ligzdošanas sezona, izņemot pierādītajām ligzdošanām 7.9 Vides pārmaiņas Analīzes šūnā nevienā periodā kopš novērojuma ne vairāk par 5% (10%?) Ligzdošanas iecirknī ne vairāk par 10% (20%?) 7.10 Papildkritēriji Vismaz ACCGEN - attālums no apdzīvotām vietām 7.11 Ligzdošanas ticamība Ligzdošanas ticamības pakāpju pierēķināšana, lai izvēlētos uzticamākos, bet pietiekoša apjoma datus bez acīmredzamām telpiskajām problēmām 7.12 Kvadrātu skaits Pierēķināšana un vizualizēšana izvērtējumiem kopā ar ligzdošanas ticamības pakāpēm 7.13 Rezultāti Lēmumu pieņemšana par turpmāko modelēšanu un tai izmantojamajiem datiem 7.14 Uzticamās klātbūtnes vietas Failu saglabāšana "],["Chapter7.html", "8 Sugu izplatības (dzīvotņu piemērotības) modeļi 8.1 Sākotnēji izvēlēto pazīmju neatkarība un EGV atlases otrā kārta (VIF) 8.2 Vidi kopumā raksturojoši fona punkti 8.3 Vienkāršots modelis EGV noslēguma atlasei 8.4 Modeļa parametrizācija 8.5 Labākās parametrizācijas izvēle 8.6 Labākā modeļa rezultāti 8.7 Rezultāta uzticamības izvērtējums", " 8 Sugu izplatības (dzīvotņu piemērotības) modeļi All chapters start with a first-level heading followed by your chapter title, like the line above. There should be only one first-level heading (#) per .Rmd file. 8.1 Sākotnēji izvēlēto pazīmju neatkarība un EGV atlases otrā kārta (VIF) VIF analīze un individuāla pārskatīšana vai netrūkst kaut kas sevišķi nozīmīgs 8.2 Vidi kopumā raksturojoši fona punkti Atbilstoši procedūrai. Vismaz 10K 8.3 Vienkāršots modelis EGV noslēguma atlasei LQ un premutation importance 8.4 Modeļa parametrizācija Feature types and algorithms Regularization multipliers Krosvalidācija 8.5 Labākās parametrizācijas izvēle AICc (un AUCtest?) 8.6 Labākā modeļa rezultāti Dažādu failu ģenerēšana un modeļa spājas apraksti 8.7 Rezultāta uzticamības izvērtējums Vizuāls novēr’tejums vai nav pilnīgas muļķības, kuru dēļ nepieciešams atkārtot modelēšanu ar kaut kādām korekcijām "],["Chapter8.html", "9 SDM pēcapstrāde 9.1 Ekoloģiskās nišas dziļumi 9.2 Saistība ar aizsargājamām teritorijām 9.3 Saistība ar aizsardzības režīmiem 9.4 Saistība ar ekosistēmām", " 9 SDM pēcapstrāde All chapters start with a first-level heading followed by your chapter title, like the line above. There should be only one first-level heading (#) per .Rmd file. 9.1 Ekoloģiskās nišas dziļumi a 9.2 Saistība ar aizsargājamām teritorijām b 9.3 Saistība ar aizsardzības režīmiem c 9.4 Saistība ar ekosistēmām d "],["Chapter9.html", "10 Vietu prioritizēšana aizsardzībai 10.1 Ik sugas aizsardzībai prioritārās vietas 10.2 Daudzsugu pieeja dabas aizsardzības plānošanai", " 10 Vietu prioritizēšana aizsardzībai All chapters start with a first-level heading followed by your chapter title, like the line above. There should be only one first-level heading (#) per .Rmd file. 10.1 Ik sugas aizsardzībai prioritārās vietas Vienas sugas zonation 10.2 Daudzsugu pieeja dabas aizsardzības plānošanai Šajā nodaļā demonstrēta izmantotā pieeja 10.2.1 Mežu (putnu) aizsardzībai prioritārās vietas Par mežu putniem, kuri iekļaujami plašākā 10.2.2 Lauku (putnu) aizsardzībai prioritārās vietas Par lauku putniem, kuri iekļaujami plašākā 10.2.3 Mitrāju (putnu) aizsardzībai prioritārās vietas Par mitrāju putniem, kuri iekļaujami plašākā 10.2.4 Ūdeņu (putnu) aizsardzībai prioritārās vietas Par ūdeņu putniem, kuri iekļaujami plašākā 10.2.5 Vietu ar skraju veģetāciju (putnu) aizsardzībai prioritārās vietas Par šo vietu putniem, kuri iekļaujami plašākā 10.2.6 Valstī kopumā Baigi jau nu bezjēdzīgais "],["Chapter10.html", "11 Rezultāti 11.1 Individuālu sugu rezultāti 11.2 Kopējie valsts līmeņa rezultāti", " 11 Rezultāti Šajā nodaļā apkopoti iegūtie sugu izplatības un aizsardzībās, kā arī sugu sabiedrību (ekosistēmu) aizsardzības prioritizēšanas rezultāti, sniedzot piekļuvi tiem, kuri nav ierobežotas pieejamas savas izšķirtspējas dēļ. 11.1 Individuālu sugu rezultāti Apkopotā formā ik sugas rezultāti ar hiperstaitēm lejupielādei ir šajā tabulā (xlsx). 11.1.1 (1) COTCOT - paipala Coturnix coturnix Dzīvotņu piemērotība (GeoTIFF) Modeļa spējas raksturojums neatkarīgos testa datos: pAUC: ; TSS: pie dzīvotņu piemērotības , ar: sensitivitāte: specifiskums: recall: precission: EGV atbildes līknes (png) Modelis (RDS) Ekspektācija sugas klātbūtnei (GeoTIFF) Aizsardzībai prioritārās vietas (GeoTIFF) 11.1.2 (2) PERPER - laukirbe Perdix perdix BONBON - mežirbe Bonasa bonasia TETURO - mednis Tetrao urogallus LYRTET - rubenis Lyrurus tetrix CYGCYG - ziemeļu gulbis Cygnus cygnus ANSANS - meža zoss Anser anser TADTAD - Sāmsalas dižpīle Tadorna tadorna AYTFER - brūnkaklis Aythya ferina AYTFUL - cekulpīle Aythya fuligula SPAQUE - prīkšķe Spatula querquedula SPACLY - platknābis Spatula clypeata MARSTR - pelēkā pīle Mareca strepera MARPEN - baltvēderis Mareca penelope TACRUF - mazais dūkuris Tachybaptus ruficollis PODGRI - pelēkvaigu dūkuris Podiceps grisegena PODCRI - cekuldūkuris Podiceps cristatus STRTUR - parastā ūbele Streptopelia turtur CAPEUR - vakarlēpis Caprimulgus europaeus RALAQU - dumbrcālis Rallus aquaticus CRECRE - grieze Crex crex PORPOR - ormanītis Porzana porzana ZAPPAR - mazais ormanītis Zapornia parva FULATR - laucis Fulica atra GRUGRU - dzērve Grus grus CICNIG - melnais stārķis Ciconia nigra CICCIC - baltais stārķis Ciconia ciconia BOTSTE - lielais dumpis Botaurus stellaris IXOMIN - mazais dumpis Ixobrychus minutus HAEOST - jūrasžagata Haematopus ostralegus PLUAPR - dzeltenais tārtiņš Pluvialis apricaria CHAHIA - smilšu tārtiņš Charadrius hiaticula CHADUB - upes tārtiņš Charadrius dubius VANVAN - ķīvīte Vanellus vanellus NUMPHA - lietuvainis Numenius phaeopus NUMARQ - kuitala Numenius arquata LIMLIM - melnā puskuitala Limosa limosa GALMED - ķikuts Gallinago media GALGAL - mērkaziņa Gallinago gallinago TRINEB - lielā tilbīte Tringa nebularia TRITOT - pļavu tilbīte Tringa totanus TRIGLA - purva tilbīte Tringa glareola GLAPAS - apodziņš Glaucidium passerinum AEGFUN - bikšainais apogs Aegolius funereus ASIOTU - ausainā pūce Asio otus STRALU - meža pūce Strix aluco STRURA - urālpūce Strix uralensis BUBBUB - ūpis Bubo bubo PANHAL - zivjērglis Pandion haliaetus PERAPI - ķīķis Pernis apivorus CLAPOM - mazais ērglis Clanga pomarina CIRAER - niedru lija Circus aeruginosus ACCNIS - zvirbuļvanags Accipiter nisus ACCGEN - vistu vanags Accipiter gentilis HALALB - jūras ērglis Haliaeetus albicilla MILMIL - sarkanā klija Milvus milvus MILMIG - melnā klija Milvus migrans BUTBUT - peļu klijāns Buteo buteo UPUEPO - pupuķis Upupa epops CORGAR - zaļā vārna Coracias garrulus JYNTOR - tītiņš Jynx torquilla PICCAN - pelēkā dzilna Picus canus DRYMAR - melnā dzilna Dryocopus martius PICTRI - trīspirkstu dzenis Picoides tridactylus LEIMED - vidējais dzenis Leiopicus medius DRYMIN - mazais dzenis Dryobates minor DENLEU - baltmugurdzenis Dendrocopos leucotos DENMAJ - dižraibais dzenis Dendrocopos major FALTIN - lauku piekūns Falco tinnunculus FALCOL - purva piekūns Falco columbarius ORIORI - vālodze Oriolus oriolus LANCOL - brūnā čakste Lanius collurio LANEXC - lielā čakste Lanius excubitor NUCCAR - riekstrozis Nucifraga caryocatactes PERATE - meža zīlīte Periparus ater LOPCRI - cekulzīlīte Lophophanes cristatus POEPAL - purva zīlīte Poecile palustris POEMON - pelēkā zīlīte Poecile montanus LULARB - sila cīrulis Lullula arborea ALAARV - lauku cīrulis Alauda arvensis IDUCAL - klusais ķauķis Iduna caligata ACRRIS - purva ķauķis Acrocephalus palustris ACRARU - niedru strazds Acrocephalus arundinaceus LOCFLU - upes ķauķis Locustella fluviatilis LOCNAE - kārklu ķauķis Locustella naevia HIRRUS - bezdelīga Hirundo rustica PHYSIB - svirlītis Phylloscopus sibilatrix AEGCAU - garastīte Aegithalos caudatus CURNIS - svītrainais ķauķis Curruca nisoria CURCOM - brūnspārnu ķauķis Curruca communis CERFAM - mizložņa Certhia familiaris SITEUR - dzilnītis Sitta europaea STUVUL - mājas strazds Sturnus vulgaris TURVIS - sila strazds Turdus viscivorus TURILI - plukšķis Turdus iliacus CYASVE - zilrīklīte Cyanecula svecica LUSLUS - lakstīgala Luscinia luscinia FICPAR - mazais mušķērājs Ficedula parva FICHYP - melnais mušķērājs Ficedula hypoleuca SAXRUB - lukstu čakstīte Saxicola rubetra REGREG - zeltgalvītis Regulus regulus REGIGN - sārtgalvītis Regulus ignicapilla PASMON - lauku zvirbulis Passer montanus ANTPRA - pļavu čipste Anthus pratensis ANTCAM - stepes čipste Anthus campestris MOTFLA - dzeltenā cielava Motacilla flava MOTCIT - citroncielava Motacilla citreola COCCOC - dižknābis Coccothraustes coccothraustes CARERY - mazais svilpis Carpodacus erythrinus PYRPYR - svilpis Pyrrhula pyrrhula CHLCHL - zaļžubīte Chloris chloris LINCAN - kaņepītis Linaria cannabina LOXCUR - egļu krustknābis Loxia curvirostra CARCAR - dadzītis Carduelis carduelis EMBHOR - dārza stērste Emberiza hortulana EMBCIT - dzeltenā stērste Emberiza citrinella 11.2 Kopējie valsts līmeņa rezultāti Veicot daudzsugu zonēšanu plašākai (par individuālām sugām) dabas aizsardzības plānošanai, iegūtie rezultāti ik videi ir pieejami zemāk. Apkopotā formā ar hiperstaitēm lejupielādei tie ir pieejami arī šajā tabulā (xlsx). 11.2.1 Mežu (putnu) aizsardzībai prioritārās vietas Attēls ar vietu nozīmību aizsardzībai un/vai daudzsugu izzušanas līknes līdz ar kopējo vietu nozīmību Aizsardzībai prioritārās vietas (GeoTIFF) Vietu nozīmība aizsardzībai (GeoTIFF) Vietu nozīmība iekļauto sugu populācijām (csv) 11.2.2 Lauku (putnu) aizsardzībai prioritārās vietas Attēls ar vietu nozīmību aizsardzībai un/vai daudzsugu izzušanas līknes līdz ar kopējo vietu nozīmību Aizsardzībai prioritārās vietas (GeoTIFF) Vietu nozīmība aizsardzībai (GeoTIFF) Vietu nozīmība iekļauto sugu populācijām (csv) 11.2.3 Mitrāju (putnu) aizsardzībai prioritārās vietas Attēls ar vietu nozīmību aizsardzībai un/vai daudzsugu izzušanas līknes līdz ar kopējo vietu nozīmību Aizsardzībai prioritārās vietas (GeoTIFF) Vietu nozīmība aizsardzībai (GeoTIFF) Vietu nozīmība iekļauto sugu populācijām (csv) 11.2.4 Ūdeņu (putnu) aizsardzībai prioritārās vietas Attēls ar vietu nozīmību aizsardzībai un/vai daudzsugu izzušanas līknes līdz ar kopējo vietu nozīmību Aizsardzībai prioritārās vietas (GeoTIFF) Vietu nozīmība aizsardzībai (GeoTIFF) Vietu nozīmība iekļauto sugu populācijām (csv) 11.2.5 Vietu ar skraju veģetāciju (putnu) aizsardzībai prioritārās vietas Attēls ar vietu nozīmību aizsardzībai un/vai daudzsugu izzušanas līknes līdz ar kopējo vietu nozīmību Aizsardzībai prioritārās vietas (GeoTIFF) Vietu nozīmība aizsardzībai (GeoTIFF) Vietu nozīmība iekļauto sugu populācijām (csv) "],["references.html", "References", " References "],["hello-bookdown.html", "12 Hello bookdown 12.1 A section", " 12 Hello bookdown All chapters start with a first-level heading followed by your chapter title, like the line above. There should be only one first-level heading (#) per .Rmd file. 12.1 A section All chapter sections start with a second-level (##) or higher heading followed by your section title, like the sections above and below here. You can have as many as you want within a chapter. An unnumbered section Chapters and sections are numbered by default. To un-number a heading, add a {.unnumbered} or the shorter {-} at the end of the heading, like in this section. "],["cross.html", "13 Cross-references 13.1 Chapters and sub-chapters 13.2 Captioned figures and tables", " 13 Cross-references Cross-references make it easier for your readers to find and link to elements in your book. 13.1 Chapters and sub-chapters There are two steps to cross-reference any heading: Label the heading: # Hello world {#nice-label}. Leave the label off if you like the automated heading generated based on your heading title: for example, # Hello world = # Hello world {#hello-world}. To label an un-numbered heading, use: # Hello world {-#nice-label} or {# Hello world .unnumbered}. Next, reference the labeled heading anywhere in the text using \\@ref(nice-label); for example, please see Chapter 13. If you prefer text as the link instead of a numbered reference use: any text you want can go here. 13.2 Captioned figures and tables Figures and tables with captions can also be cross-referenced from elsewhere in your book using \\@ref(fig:chunk-label) and \\@ref(tab:chunk-label), respectively. See Figure 13.1. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 13.1: Here is a nice figure! Don’t miss Table 13.1. knitr::kable( head(pressure, 10), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 13.1: Here is a nice table! temperature pressure 0 0.0002 20 0.0012 40 0.0060 60 0.0300 80 0.0900 100 0.2700 120 0.7500 140 1.8500 160 4.2000 180 8.8000 "],["parts.html", "14 Parts", " 14 Parts You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["footnotes-and-citations.html", "15 Footnotes and citations 15.1 Footnotes 15.2 Citations", " 15 Footnotes and citations 15.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one 1. 15.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie, 2024) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (Xie, 2015) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations References Xie, Y., 2024. Bookdown: Authoring books and technical documents with r markdown. Xie, Y., 2015. Dynamic documents with R and knitr, 2nd ed. Chapman; Hall/CRC, Boca Raton, Florida. This is a footnote.↩︎ "],["blocks.html", "16 Blocks 16.1 Equations 16.2 Theorems and proofs 16.3 Callout blocks", " 16 Blocks 16.1 Equations Here is an equation. \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{16.1} \\end{equation}\\] You may refer to using \\@ref(eq:binom), like see Equation (16.1). 16.2 Theorems and proofs Labeled theorems can be referenced in text using \\@ref(thm:tri), for example, check out this smart theorem 16.1. Theorem 16.1 For a right triangle, if \\(c\\) denotes the length of the hypotenuse and \\(a\\) and \\(b\\) denote the lengths of the other two sides, we have \\[a^2 + b^2 = c^2\\] Read more here https://bookdown.org/yihui/bookdown/markdown-extensions-by-bookdown.html. 16.3 Callout blocks The R Markdown Cookbook provides more help on how to use custom blocks to design your own callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html "],["sharing-your-book.html", "17 Sharing your book 17.1 Publishing 17.2 404 pages 17.3 Metadata for sharing", " 17 Sharing your book 17.1 Publishing HTML books can be published online, see: https://bookdown.org/yihui/bookdown/publishing.html 17.2 404 pages By default, users will be directed to a 404 page if they try to access a webpage that cannot be found. If you’d like to customize your 404 page instead of using the default, you may add either a _404.Rmd or _404.md file to your project root and use code and/or Markdown syntax. 17.3 Metadata for sharing Bookdown HTML books will provide HTML metadata for social sharing on platforms like Twitter, Facebook, and LinkedIn, using information you provide in the index.Rmd YAML. To setup, set the url for your book and the path to your cover-image file. Your book’s title and description are also used. This gitbook uses the same social sharing data across all chapters in your book- all links shared will look the same. Specify your book’s source repository on GitHub using the edit key under the configuration options in the _output.yml file, which allows users to suggest an edit by linking to a chapter’s source file. Read more about the features of this output format here: https://pkgs.rstudio.com/bookdown/reference/gitbook.html Or use: ?bookdown::gitbook "],["references-1.html", "References", " References Auniņš, A. (red.), 2013. Eiropas savienības aizsargājamie biotopi latvijā. Noteikšanas rokasgrāmata. 2. Precizēts izdevums. Latvijas Dabas fonds, Vides aizsardzības un reģionālās attīstības ministrija, Rīga, Latvija. Auniņš, A., Mārdega, I., 2020. Dienas putnu fona monitorings. Gala atskaite par 2020. gadu. Latvijas Ornitoloģijas biedrība, Rīga, Latvija. Avotins, A., Avotins, A., Ķerus, V., Auniņš, A., 2023. Numerical response of owls to the dampening of small mammal population cycles in Latvia, Life. https://doi.org/10.3390/life13020572 Avotiņš, A., 2019a. Apodziņa Glaucidium passerinum, bikšainā apoga Aegolius funereus, meža pūces Strix aluco, urālpūces Strix uralensis, ausainās pūces Asio otus un ūpja Bubo bubo aizsardzības plāns. Latvijas Ornitoloģijas biedrība, Rīga, Latvija. Avotiņš, A., 2019b. Aizsargājamās dabas teritorijas, mežsaimniecības aprobežojumi un Aichi biodaudzveidības mērķi mežos: Trūkumi dabas teritorijās un iespējas valsts līmeņa plānošanā ar dzīvotņu piemērotības modelēšanu, LU 77th International scientific conference. Avotiņš, A., Auniņš, A., Stīpniece, A., Ķerus, V., 2024. Little and a lot of data, both with their own challenges: Approaches used for the red listing of birds in latvia, in: Butkauskas, D., Čekstere-Muižniece, G., Degtjarenko, P., Jankevica, L., Jansson, N., Ķerus, V., Pilāts, V., Telnov, D. (Eds.), Safeguarding Biodiversity: Red Lists and Beyond. Institute of Biology, Faculty of Medicine; Life Sciences, University of Latvia, p. 14. Bergmanis, M., Priednieks, J., Avotiņš, A., Priedniece, I., 2021. Mazā dzeņa Dryobates minor, vidējā dzeņa Leiopicus medius, baltmugurdzeņa Dendrocopos leucotos, dižraibā dzeņa Dendrocopos major, trīspirkstu dzeņa Picoides tridactylus, melnās dzilnas Dryocopus martius un pelēkās dzilnas Picus canus aizsardzības plāns. Latvijas Ornitoloģijas biedrība, Rīga, Latvija. Brown, C.F., Brumby, S.P., Guzder-Williams, B., Birch, T., Hyde, S.B., Mazzariello, J., Czerwinski, W., Pasquarella, V.J., Haertel, R., Ilyushchenko, S., Schwehr, K., Weisse, M., Stolle, F., Hanson, C., Guinan, O., Moore, R., Tait, A.M., 2022. Dynamic World, Near real-time global 10 m land use land cover mapping, Scientific Data. https://doi.org/10.1038/s41597-022-01307-4 Celmiņš, A., 2024. Putni.lv. Cramp, S., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hollom, P.A.D., Nicholson, E.M., Ogilvie, M.A., Roselaar, C.S., Sellar, P.J., Simmons, K.E.L., Snow, D.W., Vincent, D., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1992. Handbook of the birds of Europe, the Middle East and North Africa: Volume 6 - Warblers. Oxford University Press, Hong Kong. Cramp, S., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hollom, P.A.D., Nicholson, E.M., Ogilvie, M.A., Roselaar, C.S., Sellar, P.J., Simmons, K.E.L., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1988. Handbook of the birds of Europe, the Middle East and North Africa: Volume 5 - Tyrant Flycatchers to Thrushes. Oxford University Press, Hong Kong. Cramp, S., Brooks, D.J., Dunn, E., Gillmor, R., Hollom, P.A.D., Hudson, R., Nicholson, E.M., Ogilvie, M.A., Olney, P.J.S., Roselaar, C.S., Simmons, K.E.L., Voous, K.H., Wallace, D.I.M., Wattel, J., Wilson, M.G., 1994a. Handbook of the birds of Europe, the Middle East and North Africa: Volume 4 - Terns to Woodpeckers. Oxford University Press, Hong Kong. Cramp, S., Perrins, C.M., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hillcoat, B., Hollom, P.A.D., Nicholson, E.M., Roselaar, C.S., Seale, W.T.C., Sellar, P.J., Simmons, K.E.L., Snow, D.W., Vincent, D., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1994b. Handbook of the birds of Europe, the Middle East and North Africa: Volume 8 - Crows to Finches. Oxford University Press, Hong Kong. Cramp, S., Perrins, C.M., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hillcoat, B., Hollom, P.A.D., Nicholson, E.M., Roselaar, C.S., Seale, W.T.C., Sellar, P.J., Simmons, K.E.L., Snow, D.W., Vincent, D., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1994c. Handbook of the birds of Europe, the Middle East and North Africa: Volume 9 - Buntings to New World Warblers. Oxford University Press, Hong Kong. Cramp, S., Perrins, C.M., Brooks, D.J., Dunn, E., Gillmor, R., Hall-Craggs, J., Hillcoat, B., Hollom, P.A.D., Nicholson, E.M., Roselaar, C.S., Seale, W.T.C., Sellar, P.J., Simmons, K.E.L., Snow, D.W., Vincent, D., Voous, K.H., Wallace, D.I.M., Wilson, M.G., 1993. Handbook of the birds of Europe, the Middle East and North Africa: Volume 7 - Flycatchers to Shrikes. Oxford University Press, Hong Kong. Cramp, S., Simmons, K.E.L., Brooks, D.J., Collar, N.J., Dunn, E., Gillmor, R., Hollom, P.A.D., Hudson, R., Nicholson, E.M., Ogilvie, M.A., Olney, P.J.S., Roselaar, C.S., Voous, K.H., Wallace, D.I.M., Wattel, J., Wilson, M.G., 1990. Handbook of the birds of Europe, the Middle East and North Africa: Volume 3 - Waders to Gulls. Oxford University Press, Hong Kong. Cramp, S., Simmons, K.E.L., Ferguson-Lees, I.J., Gillmor, R., Hollom, P.A.D., Hudson, R., Nicholson, E.M., Ogilvie, M.A., Olney, P.J.S., Voous, K.H., Wattel, J., 1994d. Handbook of the birds of Europe, the Middle East and North Africa: Volume 1 - Ostrich to Ducks. Oxford University Press, New York, United States. Cramp, S., Simmons, K.E.L., Gillmor, R., Hollom, P.A.D., Hudson, R., Nicholson, E.M., Ogilvie, M.A., Olney, P.J.S., Roselaar, P.S., Voous, K.H., Wallace, D.I.M., Wattel, J., 1982. Handbook of the birds of Europe, the Middle East and North Africa: Volume 2 - Hawks to Bustards. Oxford University Press, Hong Kong. Ghassemi, B., Izquierdo-Verdiguier, E., Verhegghen, A., Yordanov, M., Lemoine, G., Martínez, Á.M., Marchi, D.D., Velde, M. van der, Vuolo, F., d’Andrimont, R., 2024. European Union crop map 2022: Earth observation’s 10-meter dive into Europe’s crop tapestry, Scientific Data. https://doi.org/10.1038/s41597-024-03884-y Gorelick, N., Hancher, M., Dixon, M., Ilyushchenko, S., Thau, D., Moore, R., 2017. Google Earth Engine: Planetary-scale geospatial analysis for everyone, Remote Sensing of Environment. https://doi.org/10.1016/j.rse.2017.06.031 Hansen, M.C., Potapov, P.V., Moore, R., Hancher, M., Turubanova, S.A., Tyukavina, A., Thau, D., Stehman, S.V., Goetz, S.J., Loveland, T.R., Kommareddy, A., Egorov, A., Chini, L., Justice, C.O., Townshend, J.R.G., 2013. High-resolution Global maps of 21st-century forest cover change, Science. https://doi.org/10.1126/science.1244693 Lārmanis, V. (red.), 2013. Bioloģiski vērtīgo zālāju kartēšanas metodika. Dabas aizsardzības pārvalde, Sigulda, Latvija. Lipsbergs, J., 2011. Kas notiek ar ūpi Latvijā, Putni Dabā. LU, 2024. Threatened species in latvia: Improved knowledge, capacity, data and awareness (LIFE FOR SPECIES, LIFE19 GIE/LV/000857). Meller, K., Björklund, H., Saurola, P., Valkama, J., 2017. Petolintuvuosi 2016, pesimistulokset ja kannankehitykset, Linnut-vuosikirja 2016. Mirmazloumi, S.M., Kakooei, M., Mohseni, F., Ghorbanian, A., Amani, M., Crosetto, M., Monserrat, O., 2022. ELULC-10, a 10 m European land use and land cover map using Sentinel and Landsat data in Google Earth Engine, Remote Sensing. https://doi.org/10.3390/rs14133041 Sabater, J.M., n.d. ERA5-Land hourly data from 1950 to present. Copernicus Climate Change Service (C3S) Climate Data Store (CDS). https://doi.org/10.24381/cds.e2161bac Shimada, M., Itoh, T., Motooka, T., Watanabe, M., Shiraishi, T., Thapa, R., Lucas, R., 2013. New global forest/non-forest maps from ALOS PALSAR data (2007–2010), Remote Sensing of Environment. https://doi.org/10.1016/j.rse.2014.04.014 Venter, Z.S., Barton, D.N., Chakraborty, T., Simensen, T., Singh, G., 2022. Global 10 m Land Use Land Cover datasets: A comparison of Dynamic World, World Cover and Esri Land Cover, Remote Sensing. https://doi.org/10.3390/rs14164101 Xie, Y., 2024. Bookdown: Authoring books and technical documents with r markdown. Xie, Y., 2015. Dynamic documents with R and knitr, 2nd ed. Chapman; Hall/CRC, Boca Raton, Florida. Xu, P., Tsendbazar, N.-E., Herold, M., Bruin, S. de, Koopmans, M., Birch, T., Carter, S., Fritz, S., Lesiv, M., Mazur, E., Pickens, A., Potapov, P., Stolle, F., Tyukavina, A., Kerchove, R.V.D., Zanaga, D., 2024. Comparative validation of recent 10 m-resolution global land cover maps, Remote Sensing of Environment. https://doi.org/10.1016/j.rse.2024.114316 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
